//
// DO NOT EDIT.
//
// Generated by the protocol buffer compiler.
// Source: hotel.proto
//

//
// Copyright 2018, gRPC Authors All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
import Foundation
import Dispatch
import SwiftGRPC
import SwiftProtobuf

internal protocol Com_Infinite_Travllr_Hotel_HotelServicegetHotelsCall: ClientCallUnary {}

fileprivate final class Com_Infinite_Travllr_Hotel_HotelServicegetHotelsCallBase: ClientCallUnaryBase<Com_Infinite_Travllr_Hotel_HotelRequest, Com_Infinite_Travllr_Hotel_HotelResponse>, Com_Infinite_Travllr_Hotel_HotelServicegetHotelsCall {
  override class var method: String { return "/com.infinite.travllr.hotel.HotelService/getHotels" }
}


/// Instantiate Com_Infinite_Travllr_Hotel_HotelServiceServiceClient, then call methods of this protocol to make API calls.
internal protocol Com_Infinite_Travllr_Hotel_HotelServiceService: ServiceClient {
  /// Synchronous. Unary.
  func getHotels(_ request: Com_Infinite_Travllr_Hotel_HotelRequest) throws -> Com_Infinite_Travllr_Hotel_HotelResponse
  /// Asynchronous. Unary.
  func getHotels(_ request: Com_Infinite_Travllr_Hotel_HotelRequest, completion: @escaping (Com_Infinite_Travllr_Hotel_HotelResponse?, CallResult) -> Void) throws -> Com_Infinite_Travllr_Hotel_HotelServicegetHotelsCall

}

internal final class Com_Infinite_Travllr_Hotel_HotelServiceServiceClient: ServiceClientBase, Com_Infinite_Travllr_Hotel_HotelServiceService {
  /// Synchronous. Unary.
  internal func getHotels(_ request: Com_Infinite_Travllr_Hotel_HotelRequest) throws -> Com_Infinite_Travllr_Hotel_HotelResponse {
    return try Com_Infinite_Travllr_Hotel_HotelServicegetHotelsCallBase(channel)
      .run(request: request, metadata: metadata)
  }
  /// Asynchronous. Unary.
  internal func getHotels(_ request: Com_Infinite_Travllr_Hotel_HotelRequest, completion: @escaping (Com_Infinite_Travllr_Hotel_HotelResponse?, CallResult) -> Void) throws -> Com_Infinite_Travllr_Hotel_HotelServicegetHotelsCall {
    return try Com_Infinite_Travllr_Hotel_HotelServicegetHotelsCallBase(channel)
      .start(request: request, metadata: metadata, completion: completion)
  }

}

