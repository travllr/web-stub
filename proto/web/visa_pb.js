/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

goog.exportSymbol('proto.com.infinite.travllr.visa.AddVisaDocumentRequest', null, global);
goog.exportSymbol('proto.com.infinite.travllr.visa.AddVisaDocumentResponse', null, global);
goog.exportSymbol('proto.com.infinite.travllr.visa.CityListDetail', null, global);
goog.exportSymbol('proto.com.infinite.travllr.visa.CityListResponse', null, global);
goog.exportSymbol('proto.com.infinite.travllr.visa.Country', null, global);
goog.exportSymbol('proto.com.infinite.travllr.visa.CountryListResponse', null, global);
goog.exportSymbol('proto.com.infinite.travllr.visa.CountryRequest', null, global);
goog.exportSymbol('proto.com.infinite.travllr.visa.DeleteVisaDocumentRequest', null, global);
goog.exportSymbol('proto.com.infinite.travllr.visa.DeleteVisaDocumentResponse', null, global);
goog.exportSymbol('proto.com.infinite.travllr.visa.EmptyRequest', null, global);
goog.exportSymbol('proto.com.infinite.travllr.visa.MaritalStatus', null, global);
goog.exportSymbol('proto.com.infinite.travllr.visa.Occupation', null, global);
goog.exportSymbol('proto.com.infinite.travllr.visa.SearchVisaDocumentRequest', null, global);
goog.exportSymbol('proto.com.infinite.travllr.visa.SearchVisaDocumentResponse', null, global);
goog.exportSymbol('proto.com.infinite.travllr.visa.UpdateVisaDocumentRequest', null, global);
goog.exportSymbol('proto.com.infinite.travllr.visa.UpdateVisaDocumentResponse', null, global);
goog.exportSymbol('proto.com.infinite.travllr.visa.VisaCategoryType', null, global);
goog.exportSymbol('proto.com.infinite.travllr.visa.VisaCountryList', null, global);
goog.exportSymbol('proto.com.infinite.travllr.visa.VisaCountryListResponse', null, global);
goog.exportSymbol('proto.com.infinite.travllr.visa.VisaDocumentFile', null, global);
goog.exportSymbol('proto.com.infinite.travllr.visa.VisaDocumentsRequest', null, global);
goog.exportSymbol('proto.com.infinite.travllr.visa.VisaDocumentsResponse', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.infinite.travllr.visa.VisaDocumentsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.com.infinite.travllr.visa.VisaDocumentsRequest.repeatedFields_, null);
};
goog.inherits(proto.com.infinite.travllr.visa.VisaDocumentsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.com.infinite.travllr.visa.VisaDocumentsRequest.displayName = 'proto.com.infinite.travllr.visa.VisaDocumentsRequest';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.com.infinite.travllr.visa.VisaDocumentsRequest.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.infinite.travllr.visa.VisaDocumentsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.com.infinite.travllr.visa.VisaDocumentsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.infinite.travllr.visa.VisaDocumentsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.infinite.travllr.visa.VisaDocumentsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    countryList: jspb.Message.getRepeatedField(msg, 1),
    issinglesalaried: jspb.Message.getFieldWithDefault(msg, 2, false),
    issingleselfemployed: jspb.Message.getFieldWithDefault(msg, 3, false),
    ismarriedsalaried: jspb.Message.getFieldWithDefault(msg, 4, false),
    ismarriedselfemployed: jspb.Message.getFieldWithDefault(msg, 5, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.infinite.travllr.visa.VisaDocumentsRequest}
 */
proto.com.infinite.travllr.visa.VisaDocumentsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.infinite.travllr.visa.VisaDocumentsRequest;
  return proto.com.infinite.travllr.visa.VisaDocumentsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.infinite.travllr.visa.VisaDocumentsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.infinite.travllr.visa.VisaDocumentsRequest}
 */
proto.com.infinite.travllr.visa.VisaDocumentsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addCountry(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIssinglesalaried(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIssingleselfemployed(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsmarriedsalaried(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsmarriedselfemployed(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.infinite.travllr.visa.VisaDocumentsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.infinite.travllr.visa.VisaDocumentsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.infinite.travllr.visa.VisaDocumentsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.infinite.travllr.visa.VisaDocumentsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCountryList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
  f = message.getIssinglesalaried();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
  f = message.getIssingleselfemployed();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
  f = message.getIsmarriedsalaried();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
  f = message.getIsmarriedselfemployed();
  if (f) {
    writer.writeBool(
      5,
      f
    );
  }
};


/**
 * repeated string country = 1;
 * @return {!Array.<string>}
 */
proto.com.infinite.travllr.visa.VisaDocumentsRequest.prototype.getCountryList = function() {
  return /** @type {!Array.<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/** @param {!Array.<string>} value */
proto.com.infinite.travllr.visa.VisaDocumentsRequest.prototype.setCountryList = function(value) {
  jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {!string} value
 * @param {number=} opt_index
 */
proto.com.infinite.travllr.visa.VisaDocumentsRequest.prototype.addCountry = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


proto.com.infinite.travllr.visa.VisaDocumentsRequest.prototype.clearCountryList = function() {
  this.setCountryList([]);
};


/**
 * optional bool isSingleSalaried = 2;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.com.infinite.travllr.visa.VisaDocumentsRequest.prototype.getIssinglesalaried = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 2, false));
};


/** @param {boolean} value */
proto.com.infinite.travllr.visa.VisaDocumentsRequest.prototype.setIssinglesalaried = function(value) {
  jspb.Message.setProto3BooleanField(this, 2, value);
};


/**
 * optional bool isSingleSelfEmployed = 3;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.com.infinite.travllr.visa.VisaDocumentsRequest.prototype.getIssingleselfemployed = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 3, false));
};


/** @param {boolean} value */
proto.com.infinite.travllr.visa.VisaDocumentsRequest.prototype.setIssingleselfemployed = function(value) {
  jspb.Message.setProto3BooleanField(this, 3, value);
};


/**
 * optional bool isMarriedSalaried = 4;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.com.infinite.travllr.visa.VisaDocumentsRequest.prototype.getIsmarriedsalaried = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 4, false));
};


/** @param {boolean} value */
proto.com.infinite.travllr.visa.VisaDocumentsRequest.prototype.setIsmarriedsalaried = function(value) {
  jspb.Message.setProto3BooleanField(this, 4, value);
};


/**
 * optional bool isMarriedSelfEmployed = 5;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.com.infinite.travllr.visa.VisaDocumentsRequest.prototype.getIsmarriedselfemployed = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 5, false));
};


/** @param {boolean} value */
proto.com.infinite.travllr.visa.VisaDocumentsRequest.prototype.setIsmarriedselfemployed = function(value) {
  jspb.Message.setProto3BooleanField(this, 5, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.infinite.travllr.visa.VisaDocumentFile = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.com.infinite.travllr.visa.VisaDocumentFile.repeatedFields_, null);
};
goog.inherits(proto.com.infinite.travllr.visa.VisaDocumentFile, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.com.infinite.travllr.visa.VisaDocumentFile.displayName = 'proto.com.infinite.travllr.visa.VisaDocumentFile';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.com.infinite.travllr.visa.VisaDocumentFile.repeatedFields_ = [6];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.infinite.travllr.visa.VisaDocumentFile.prototype.toObject = function(opt_includeInstance) {
  return proto.com.infinite.travllr.visa.VisaDocumentFile.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.infinite.travllr.visa.VisaDocumentFile} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.infinite.travllr.visa.VisaDocumentFile.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    category: jspb.Message.getFieldWithDefault(msg, 2, ""),
    hreflink: jspb.Message.getFieldWithDefault(msg, 3, ""),
    workinghours: jspb.Message.getFieldWithDefault(msg, 4, ""),
    embassywebsite: jspb.Message.getFieldWithDefault(msg, 5, ""),
    countrylistList: jspb.Message.getRepeatedField(msg, 6),
    forsinglesalaried: jspb.Message.getFieldWithDefault(msg, 7, false),
    forsingleselfemployed: jspb.Message.getFieldWithDefault(msg, 8, false),
    formarriedsalaried: jspb.Message.getFieldWithDefault(msg, 9, false),
    formarriedselfemployed: jspb.Message.getFieldWithDefault(msg, 10, false),
    documentcontent: jspb.Message.getFieldWithDefault(msg, 11, ""),
    id: jspb.Message.getFieldWithDefault(msg, 12, ""),
    isonarrivalvisa: jspb.Message.getFieldWithDefault(msg, 13, false),
    isschengenvisa: jspb.Message.getFieldWithDefault(msg, 14, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.infinite.travllr.visa.VisaDocumentFile}
 */
proto.com.infinite.travllr.visa.VisaDocumentFile.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.infinite.travllr.visa.VisaDocumentFile;
  return proto.com.infinite.travllr.visa.VisaDocumentFile.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.infinite.travllr.visa.VisaDocumentFile} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.infinite.travllr.visa.VisaDocumentFile}
 */
proto.com.infinite.travllr.visa.VisaDocumentFile.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCategory(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setHreflink(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setWorkinghours(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setEmbassywebsite(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.addCountrylist(value);
      break;
    case 7:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setForsinglesalaried(value);
      break;
    case 8:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setForsingleselfemployed(value);
      break;
    case 9:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setFormarriedsalaried(value);
      break;
    case 10:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setFormarriedselfemployed(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setDocumentcontent(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 13:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsonarrivalvisa(value);
      break;
    case 14:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsschengenvisa(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.infinite.travllr.visa.VisaDocumentFile.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.infinite.travllr.visa.VisaDocumentFile.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.infinite.travllr.visa.VisaDocumentFile} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.infinite.travllr.visa.VisaDocumentFile.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getCategory();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getHreflink();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getWorkinghours();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getEmbassywebsite();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getCountrylistList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      6,
      f
    );
  }
  f = message.getForsinglesalaried();
  if (f) {
    writer.writeBool(
      7,
      f
    );
  }
  f = message.getForsingleselfemployed();
  if (f) {
    writer.writeBool(
      8,
      f
    );
  }
  f = message.getFormarriedsalaried();
  if (f) {
    writer.writeBool(
      9,
      f
    );
  }
  f = message.getFormarriedselfemployed();
  if (f) {
    writer.writeBool(
      10,
      f
    );
  }
  f = message.getDocumentcontent();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      12,
      f
    );
  }
  f = message.getIsonarrivalvisa();
  if (f) {
    writer.writeBool(
      13,
      f
    );
  }
  f = message.getIsschengenvisa();
  if (f) {
    writer.writeBool(
      14,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.com.infinite.travllr.visa.VisaDocumentFile.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.com.infinite.travllr.visa.VisaDocumentFile.prototype.setName = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string category = 2;
 * @return {string}
 */
proto.com.infinite.travllr.visa.VisaDocumentFile.prototype.getCategory = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.com.infinite.travllr.visa.VisaDocumentFile.prototype.setCategory = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string hrefLink = 3;
 * @return {string}
 */
proto.com.infinite.travllr.visa.VisaDocumentFile.prototype.getHreflink = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.com.infinite.travllr.visa.VisaDocumentFile.prototype.setHreflink = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string workingHours = 4;
 * @return {string}
 */
proto.com.infinite.travllr.visa.VisaDocumentFile.prototype.getWorkinghours = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.com.infinite.travllr.visa.VisaDocumentFile.prototype.setWorkinghours = function(value) {
  jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string embassyWebsite = 5;
 * @return {string}
 */
proto.com.infinite.travllr.visa.VisaDocumentFile.prototype.getEmbassywebsite = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/** @param {string} value */
proto.com.infinite.travllr.visa.VisaDocumentFile.prototype.setEmbassywebsite = function(value) {
  jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * repeated string countryList = 6;
 * @return {!Array.<string>}
 */
proto.com.infinite.travllr.visa.VisaDocumentFile.prototype.getCountrylistList = function() {
  return /** @type {!Array.<string>} */ (jspb.Message.getRepeatedField(this, 6));
};


/** @param {!Array.<string>} value */
proto.com.infinite.travllr.visa.VisaDocumentFile.prototype.setCountrylistList = function(value) {
  jspb.Message.setField(this, 6, value || []);
};


/**
 * @param {!string} value
 * @param {number=} opt_index
 */
proto.com.infinite.travllr.visa.VisaDocumentFile.prototype.addCountrylist = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 6, value, opt_index);
};


proto.com.infinite.travllr.visa.VisaDocumentFile.prototype.clearCountrylistList = function() {
  this.setCountrylistList([]);
};


/**
 * optional bool forSingleSalaried = 7;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.com.infinite.travllr.visa.VisaDocumentFile.prototype.getForsinglesalaried = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 7, false));
};


/** @param {boolean} value */
proto.com.infinite.travllr.visa.VisaDocumentFile.prototype.setForsinglesalaried = function(value) {
  jspb.Message.setProto3BooleanField(this, 7, value);
};


/**
 * optional bool forSingleSelfEmployed = 8;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.com.infinite.travllr.visa.VisaDocumentFile.prototype.getForsingleselfemployed = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 8, false));
};


/** @param {boolean} value */
proto.com.infinite.travllr.visa.VisaDocumentFile.prototype.setForsingleselfemployed = function(value) {
  jspb.Message.setProto3BooleanField(this, 8, value);
};


/**
 * optional bool forMarriedSalaried = 9;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.com.infinite.travllr.visa.VisaDocumentFile.prototype.getFormarriedsalaried = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 9, false));
};


/** @param {boolean} value */
proto.com.infinite.travllr.visa.VisaDocumentFile.prototype.setFormarriedsalaried = function(value) {
  jspb.Message.setProto3BooleanField(this, 9, value);
};


/**
 * optional bool forMarriedSelfEmployed = 10;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.com.infinite.travllr.visa.VisaDocumentFile.prototype.getFormarriedselfemployed = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 10, false));
};


/** @param {boolean} value */
proto.com.infinite.travllr.visa.VisaDocumentFile.prototype.setFormarriedselfemployed = function(value) {
  jspb.Message.setProto3BooleanField(this, 10, value);
};


/**
 * optional string documentContent = 11;
 * @return {string}
 */
proto.com.infinite.travllr.visa.VisaDocumentFile.prototype.getDocumentcontent = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/** @param {string} value */
proto.com.infinite.travllr.visa.VisaDocumentFile.prototype.setDocumentcontent = function(value) {
  jspb.Message.setProto3StringField(this, 11, value);
};


/**
 * optional string id = 12;
 * @return {string}
 */
proto.com.infinite.travllr.visa.VisaDocumentFile.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/** @param {string} value */
proto.com.infinite.travllr.visa.VisaDocumentFile.prototype.setId = function(value) {
  jspb.Message.setProto3StringField(this, 12, value);
};


/**
 * optional bool isOnArrivalVisa = 13;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.com.infinite.travllr.visa.VisaDocumentFile.prototype.getIsonarrivalvisa = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 13, false));
};


/** @param {boolean} value */
proto.com.infinite.travllr.visa.VisaDocumentFile.prototype.setIsonarrivalvisa = function(value) {
  jspb.Message.setProto3BooleanField(this, 13, value);
};


/**
 * optional bool isSchengenVisa = 14;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.com.infinite.travllr.visa.VisaDocumentFile.prototype.getIsschengenvisa = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 14, false));
};


/** @param {boolean} value */
proto.com.infinite.travllr.visa.VisaDocumentFile.prototype.setIsschengenvisa = function(value) {
  jspb.Message.setProto3BooleanField(this, 14, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.infinite.travllr.visa.VisaDocumentsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.com.infinite.travllr.visa.VisaDocumentsResponse.repeatedFields_, null);
};
goog.inherits(proto.com.infinite.travllr.visa.VisaDocumentsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.com.infinite.travllr.visa.VisaDocumentsResponse.displayName = 'proto.com.infinite.travllr.visa.VisaDocumentsResponse';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.com.infinite.travllr.visa.VisaDocumentsResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.infinite.travllr.visa.VisaDocumentsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.com.infinite.travllr.visa.VisaDocumentsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.infinite.travllr.visa.VisaDocumentsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.infinite.travllr.visa.VisaDocumentsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    documentsList: jspb.Message.toObjectList(msg.getDocumentsList(),
    proto.com.infinite.travllr.visa.VisaDocumentFile.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.infinite.travllr.visa.VisaDocumentsResponse}
 */
proto.com.infinite.travllr.visa.VisaDocumentsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.infinite.travllr.visa.VisaDocumentsResponse;
  return proto.com.infinite.travllr.visa.VisaDocumentsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.infinite.travllr.visa.VisaDocumentsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.infinite.travllr.visa.VisaDocumentsResponse}
 */
proto.com.infinite.travllr.visa.VisaDocumentsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.com.infinite.travllr.visa.VisaDocumentFile;
      reader.readMessage(value,proto.com.infinite.travllr.visa.VisaDocumentFile.deserializeBinaryFromReader);
      msg.addDocuments(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.infinite.travllr.visa.VisaDocumentsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.infinite.travllr.visa.VisaDocumentsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.infinite.travllr.visa.VisaDocumentsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.infinite.travllr.visa.VisaDocumentsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDocumentsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.com.infinite.travllr.visa.VisaDocumentFile.serializeBinaryToWriter
    );
  }
};


/**
 * repeated VisaDocumentFile documents = 1;
 * @return {!Array.<!proto.com.infinite.travllr.visa.VisaDocumentFile>}
 */
proto.com.infinite.travllr.visa.VisaDocumentsResponse.prototype.getDocumentsList = function() {
  return /** @type{!Array.<!proto.com.infinite.travllr.visa.VisaDocumentFile>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.com.infinite.travllr.visa.VisaDocumentFile, 1));
};


/** @param {!Array.<!proto.com.infinite.travllr.visa.VisaDocumentFile>} value */
proto.com.infinite.travllr.visa.VisaDocumentsResponse.prototype.setDocumentsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.com.infinite.travllr.visa.VisaDocumentFile=} opt_value
 * @param {number=} opt_index
 * @return {!proto.com.infinite.travllr.visa.VisaDocumentFile}
 */
proto.com.infinite.travllr.visa.VisaDocumentsResponse.prototype.addDocuments = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.com.infinite.travllr.visa.VisaDocumentFile, opt_index);
};


proto.com.infinite.travllr.visa.VisaDocumentsResponse.prototype.clearDocumentsList = function() {
  this.setDocumentsList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.infinite.travllr.visa.SearchVisaDocumentRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.com.infinite.travllr.visa.SearchVisaDocumentRequest.repeatedFields_, null);
};
goog.inherits(proto.com.infinite.travllr.visa.SearchVisaDocumentRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.com.infinite.travllr.visa.SearchVisaDocumentRequest.displayName = 'proto.com.infinite.travllr.visa.SearchVisaDocumentRequest';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.com.infinite.travllr.visa.SearchVisaDocumentRequest.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.infinite.travllr.visa.SearchVisaDocumentRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.com.infinite.travllr.visa.SearchVisaDocumentRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.infinite.travllr.visa.SearchVisaDocumentRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.infinite.travllr.visa.SearchVisaDocumentRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    countryList: jspb.Message.getRepeatedField(msg, 1),
    category: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.infinite.travllr.visa.SearchVisaDocumentRequest}
 */
proto.com.infinite.travllr.visa.SearchVisaDocumentRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.infinite.travllr.visa.SearchVisaDocumentRequest;
  return proto.com.infinite.travllr.visa.SearchVisaDocumentRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.infinite.travllr.visa.SearchVisaDocumentRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.infinite.travllr.visa.SearchVisaDocumentRequest}
 */
proto.com.infinite.travllr.visa.SearchVisaDocumentRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addCountry(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCategory(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.infinite.travllr.visa.SearchVisaDocumentRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.infinite.travllr.visa.SearchVisaDocumentRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.infinite.travllr.visa.SearchVisaDocumentRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.infinite.travllr.visa.SearchVisaDocumentRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCountryList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
  f = message.getCategory();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * repeated string country = 1;
 * @return {!Array.<string>}
 */
proto.com.infinite.travllr.visa.SearchVisaDocumentRequest.prototype.getCountryList = function() {
  return /** @type {!Array.<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/** @param {!Array.<string>} value */
proto.com.infinite.travllr.visa.SearchVisaDocumentRequest.prototype.setCountryList = function(value) {
  jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {!string} value
 * @param {number=} opt_index
 */
proto.com.infinite.travllr.visa.SearchVisaDocumentRequest.prototype.addCountry = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


proto.com.infinite.travllr.visa.SearchVisaDocumentRequest.prototype.clearCountryList = function() {
  this.setCountryList([]);
};


/**
 * optional string category = 2;
 * @return {string}
 */
proto.com.infinite.travllr.visa.SearchVisaDocumentRequest.prototype.getCategory = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.com.infinite.travllr.visa.SearchVisaDocumentRequest.prototype.setCategory = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.infinite.travllr.visa.SearchVisaDocumentResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.com.infinite.travllr.visa.SearchVisaDocumentResponse.repeatedFields_, null);
};
goog.inherits(proto.com.infinite.travllr.visa.SearchVisaDocumentResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.com.infinite.travllr.visa.SearchVisaDocumentResponse.displayName = 'proto.com.infinite.travllr.visa.SearchVisaDocumentResponse';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.com.infinite.travllr.visa.SearchVisaDocumentResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.infinite.travllr.visa.SearchVisaDocumentResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.com.infinite.travllr.visa.SearchVisaDocumentResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.infinite.travllr.visa.SearchVisaDocumentResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.infinite.travllr.visa.SearchVisaDocumentResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    documentsList: jspb.Message.toObjectList(msg.getDocumentsList(),
    proto.com.infinite.travllr.visa.VisaDocumentFile.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.infinite.travllr.visa.SearchVisaDocumentResponse}
 */
proto.com.infinite.travllr.visa.SearchVisaDocumentResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.infinite.travllr.visa.SearchVisaDocumentResponse;
  return proto.com.infinite.travllr.visa.SearchVisaDocumentResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.infinite.travllr.visa.SearchVisaDocumentResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.infinite.travllr.visa.SearchVisaDocumentResponse}
 */
proto.com.infinite.travllr.visa.SearchVisaDocumentResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.com.infinite.travllr.visa.VisaDocumentFile;
      reader.readMessage(value,proto.com.infinite.travllr.visa.VisaDocumentFile.deserializeBinaryFromReader);
      msg.addDocuments(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.infinite.travllr.visa.SearchVisaDocumentResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.infinite.travllr.visa.SearchVisaDocumentResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.infinite.travllr.visa.SearchVisaDocumentResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.infinite.travllr.visa.SearchVisaDocumentResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDocumentsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.com.infinite.travllr.visa.VisaDocumentFile.serializeBinaryToWriter
    );
  }
};


/**
 * repeated VisaDocumentFile documents = 1;
 * @return {!Array.<!proto.com.infinite.travllr.visa.VisaDocumentFile>}
 */
proto.com.infinite.travllr.visa.SearchVisaDocumentResponse.prototype.getDocumentsList = function() {
  return /** @type{!Array.<!proto.com.infinite.travllr.visa.VisaDocumentFile>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.com.infinite.travllr.visa.VisaDocumentFile, 1));
};


/** @param {!Array.<!proto.com.infinite.travllr.visa.VisaDocumentFile>} value */
proto.com.infinite.travllr.visa.SearchVisaDocumentResponse.prototype.setDocumentsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.com.infinite.travllr.visa.VisaDocumentFile=} opt_value
 * @param {number=} opt_index
 * @return {!proto.com.infinite.travllr.visa.VisaDocumentFile}
 */
proto.com.infinite.travllr.visa.SearchVisaDocumentResponse.prototype.addDocuments = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.com.infinite.travllr.visa.VisaDocumentFile, opt_index);
};


proto.com.infinite.travllr.visa.SearchVisaDocumentResponse.prototype.clearDocumentsList = function() {
  this.setDocumentsList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.infinite.travllr.visa.DeleteVisaDocumentRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.infinite.travllr.visa.DeleteVisaDocumentRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.com.infinite.travllr.visa.DeleteVisaDocumentRequest.displayName = 'proto.com.infinite.travllr.visa.DeleteVisaDocumentRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.infinite.travllr.visa.DeleteVisaDocumentRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.com.infinite.travllr.visa.DeleteVisaDocumentRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.infinite.travllr.visa.DeleteVisaDocumentRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.infinite.travllr.visa.DeleteVisaDocumentRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.infinite.travllr.visa.DeleteVisaDocumentRequest}
 */
proto.com.infinite.travllr.visa.DeleteVisaDocumentRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.infinite.travllr.visa.DeleteVisaDocumentRequest;
  return proto.com.infinite.travllr.visa.DeleteVisaDocumentRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.infinite.travllr.visa.DeleteVisaDocumentRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.infinite.travllr.visa.DeleteVisaDocumentRequest}
 */
proto.com.infinite.travllr.visa.DeleteVisaDocumentRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.infinite.travllr.visa.DeleteVisaDocumentRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.infinite.travllr.visa.DeleteVisaDocumentRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.infinite.travllr.visa.DeleteVisaDocumentRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.infinite.travllr.visa.DeleteVisaDocumentRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.com.infinite.travllr.visa.DeleteVisaDocumentRequest.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.com.infinite.travllr.visa.DeleteVisaDocumentRequest.prototype.setId = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.infinite.travllr.visa.DeleteVisaDocumentResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.infinite.travllr.visa.DeleteVisaDocumentResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.com.infinite.travllr.visa.DeleteVisaDocumentResponse.displayName = 'proto.com.infinite.travllr.visa.DeleteVisaDocumentResponse';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.infinite.travllr.visa.DeleteVisaDocumentResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.com.infinite.travllr.visa.DeleteVisaDocumentResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.infinite.travllr.visa.DeleteVisaDocumentResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.infinite.travllr.visa.DeleteVisaDocumentResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    status: jspb.Message.getFieldWithDefault(msg, 1, ""),
    response: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.infinite.travllr.visa.DeleteVisaDocumentResponse}
 */
proto.com.infinite.travllr.visa.DeleteVisaDocumentResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.infinite.travllr.visa.DeleteVisaDocumentResponse;
  return proto.com.infinite.travllr.visa.DeleteVisaDocumentResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.infinite.travllr.visa.DeleteVisaDocumentResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.infinite.travllr.visa.DeleteVisaDocumentResponse}
 */
proto.com.infinite.travllr.visa.DeleteVisaDocumentResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatus(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setResponse(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.infinite.travllr.visa.DeleteVisaDocumentResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.infinite.travllr.visa.DeleteVisaDocumentResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.infinite.travllr.visa.DeleteVisaDocumentResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.infinite.travllr.visa.DeleteVisaDocumentResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatus();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getResponse();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string status = 1;
 * @return {string}
 */
proto.com.infinite.travllr.visa.DeleteVisaDocumentResponse.prototype.getStatus = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.com.infinite.travllr.visa.DeleteVisaDocumentResponse.prototype.setStatus = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string response = 2;
 * @return {string}
 */
proto.com.infinite.travllr.visa.DeleteVisaDocumentResponse.prototype.getResponse = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.com.infinite.travllr.visa.DeleteVisaDocumentResponse.prototype.setResponse = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.infinite.travllr.visa.UpdateVisaDocumentRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.com.infinite.travllr.visa.UpdateVisaDocumentRequest.repeatedFields_, null);
};
goog.inherits(proto.com.infinite.travllr.visa.UpdateVisaDocumentRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.com.infinite.travllr.visa.UpdateVisaDocumentRequest.displayName = 'proto.com.infinite.travllr.visa.UpdateVisaDocumentRequest';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.com.infinite.travllr.visa.UpdateVisaDocumentRequest.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.infinite.travllr.visa.UpdateVisaDocumentRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.com.infinite.travllr.visa.UpdateVisaDocumentRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.infinite.travllr.visa.UpdateVisaDocumentRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.infinite.travllr.visa.UpdateVisaDocumentRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    categorytype: jspb.Message.getFieldWithDefault(msg, 2, ""),
    countryList: jspb.Message.getRepeatedField(msg, 3),
    workingDays: jspb.Message.getFieldWithDefault(msg, 4, ""),
    website: jspb.Message.getFieldWithDefault(msg, 5, ""),
    title: jspb.Message.getFieldWithDefault(msg, 6, ""),
    description: jspb.Message.getFieldWithDefault(msg, 7, ""),
    documentLink: jspb.Message.getFieldWithDefault(msg, 8, ""),
    issinglesalaried: jspb.Message.getFieldWithDefault(msg, 9, false),
    issingleselfemployed: jspb.Message.getFieldWithDefault(msg, 10, false),
    ismarriedsalaried: jspb.Message.getFieldWithDefault(msg, 11, false),
    ismarriedselfemployed: jspb.Message.getFieldWithDefault(msg, 12, false),
    isonarrivalvisa: jspb.Message.getFieldWithDefault(msg, 13, false),
    isschengenvisa: jspb.Message.getFieldWithDefault(msg, 14, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.infinite.travllr.visa.UpdateVisaDocumentRequest}
 */
proto.com.infinite.travllr.visa.UpdateVisaDocumentRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.infinite.travllr.visa.UpdateVisaDocumentRequest;
  return proto.com.infinite.travllr.visa.UpdateVisaDocumentRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.infinite.travllr.visa.UpdateVisaDocumentRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.infinite.travllr.visa.UpdateVisaDocumentRequest}
 */
proto.com.infinite.travllr.visa.UpdateVisaDocumentRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCategorytype(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.addCountry(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setWorkingDays(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setWebsite(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setDocumentLink(value);
      break;
    case 9:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIssinglesalaried(value);
      break;
    case 10:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIssingleselfemployed(value);
      break;
    case 11:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsmarriedsalaried(value);
      break;
    case 12:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsmarriedselfemployed(value);
      break;
    case 13:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsonarrivalvisa(value);
      break;
    case 14:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsschengenvisa(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.infinite.travllr.visa.UpdateVisaDocumentRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.infinite.travllr.visa.UpdateVisaDocumentRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.infinite.travllr.visa.UpdateVisaDocumentRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.infinite.travllr.visa.UpdateVisaDocumentRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getCategorytype();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getCountryList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      3,
      f
    );
  }
  f = message.getWorkingDays();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getWebsite();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getDocumentLink();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getIssinglesalaried();
  if (f) {
    writer.writeBool(
      9,
      f
    );
  }
  f = message.getIssingleselfemployed();
  if (f) {
    writer.writeBool(
      10,
      f
    );
  }
  f = message.getIsmarriedsalaried();
  if (f) {
    writer.writeBool(
      11,
      f
    );
  }
  f = message.getIsmarriedselfemployed();
  if (f) {
    writer.writeBool(
      12,
      f
    );
  }
  f = message.getIsonarrivalvisa();
  if (f) {
    writer.writeBool(
      13,
      f
    );
  }
  f = message.getIsschengenvisa();
  if (f) {
    writer.writeBool(
      14,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.com.infinite.travllr.visa.UpdateVisaDocumentRequest.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.com.infinite.travllr.visa.UpdateVisaDocumentRequest.prototype.setId = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string categoryType = 2;
 * @return {string}
 */
proto.com.infinite.travllr.visa.UpdateVisaDocumentRequest.prototype.getCategorytype = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.com.infinite.travllr.visa.UpdateVisaDocumentRequest.prototype.setCategorytype = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * repeated string country = 3;
 * @return {!Array.<string>}
 */
proto.com.infinite.travllr.visa.UpdateVisaDocumentRequest.prototype.getCountryList = function() {
  return /** @type {!Array.<string>} */ (jspb.Message.getRepeatedField(this, 3));
};


/** @param {!Array.<string>} value */
proto.com.infinite.travllr.visa.UpdateVisaDocumentRequest.prototype.setCountryList = function(value) {
  jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {!string} value
 * @param {number=} opt_index
 */
proto.com.infinite.travllr.visa.UpdateVisaDocumentRequest.prototype.addCountry = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


proto.com.infinite.travllr.visa.UpdateVisaDocumentRequest.prototype.clearCountryList = function() {
  this.setCountryList([]);
};


/**
 * optional string working_days = 4;
 * @return {string}
 */
proto.com.infinite.travllr.visa.UpdateVisaDocumentRequest.prototype.getWorkingDays = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.com.infinite.travllr.visa.UpdateVisaDocumentRequest.prototype.setWorkingDays = function(value) {
  jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string website = 5;
 * @return {string}
 */
proto.com.infinite.travllr.visa.UpdateVisaDocumentRequest.prototype.getWebsite = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/** @param {string} value */
proto.com.infinite.travllr.visa.UpdateVisaDocumentRequest.prototype.setWebsite = function(value) {
  jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string title = 6;
 * @return {string}
 */
proto.com.infinite.travllr.visa.UpdateVisaDocumentRequest.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/** @param {string} value */
proto.com.infinite.travllr.visa.UpdateVisaDocumentRequest.prototype.setTitle = function(value) {
  jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string description = 7;
 * @return {string}
 */
proto.com.infinite.travllr.visa.UpdateVisaDocumentRequest.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/** @param {string} value */
proto.com.infinite.travllr.visa.UpdateVisaDocumentRequest.prototype.setDescription = function(value) {
  jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string document_link = 8;
 * @return {string}
 */
proto.com.infinite.travllr.visa.UpdateVisaDocumentRequest.prototype.getDocumentLink = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/** @param {string} value */
proto.com.infinite.travllr.visa.UpdateVisaDocumentRequest.prototype.setDocumentLink = function(value) {
  jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional bool isSingleSalaried = 9;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.com.infinite.travllr.visa.UpdateVisaDocumentRequest.prototype.getIssinglesalaried = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 9, false));
};


/** @param {boolean} value */
proto.com.infinite.travllr.visa.UpdateVisaDocumentRequest.prototype.setIssinglesalaried = function(value) {
  jspb.Message.setProto3BooleanField(this, 9, value);
};


/**
 * optional bool isSingleSelfEmployed = 10;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.com.infinite.travllr.visa.UpdateVisaDocumentRequest.prototype.getIssingleselfemployed = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 10, false));
};


/** @param {boolean} value */
proto.com.infinite.travllr.visa.UpdateVisaDocumentRequest.prototype.setIssingleselfemployed = function(value) {
  jspb.Message.setProto3BooleanField(this, 10, value);
};


/**
 * optional bool isMarriedSalaried = 11;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.com.infinite.travllr.visa.UpdateVisaDocumentRequest.prototype.getIsmarriedsalaried = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 11, false));
};


/** @param {boolean} value */
proto.com.infinite.travllr.visa.UpdateVisaDocumentRequest.prototype.setIsmarriedsalaried = function(value) {
  jspb.Message.setProto3BooleanField(this, 11, value);
};


/**
 * optional bool isMarriedSelfEmployed = 12;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.com.infinite.travllr.visa.UpdateVisaDocumentRequest.prototype.getIsmarriedselfemployed = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 12, false));
};


/** @param {boolean} value */
proto.com.infinite.travllr.visa.UpdateVisaDocumentRequest.prototype.setIsmarriedselfemployed = function(value) {
  jspb.Message.setProto3BooleanField(this, 12, value);
};


/**
 * optional bool isOnArrivalVisa = 13;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.com.infinite.travllr.visa.UpdateVisaDocumentRequest.prototype.getIsonarrivalvisa = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 13, false));
};


/** @param {boolean} value */
proto.com.infinite.travllr.visa.UpdateVisaDocumentRequest.prototype.setIsonarrivalvisa = function(value) {
  jspb.Message.setProto3BooleanField(this, 13, value);
};


/**
 * optional bool isSchengenVisa = 14;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.com.infinite.travllr.visa.UpdateVisaDocumentRequest.prototype.getIsschengenvisa = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 14, false));
};


/** @param {boolean} value */
proto.com.infinite.travllr.visa.UpdateVisaDocumentRequest.prototype.setIsschengenvisa = function(value) {
  jspb.Message.setProto3BooleanField(this, 14, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.infinite.travllr.visa.UpdateVisaDocumentResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.infinite.travllr.visa.UpdateVisaDocumentResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.com.infinite.travllr.visa.UpdateVisaDocumentResponse.displayName = 'proto.com.infinite.travllr.visa.UpdateVisaDocumentResponse';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.infinite.travllr.visa.UpdateVisaDocumentResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.com.infinite.travllr.visa.UpdateVisaDocumentResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.infinite.travllr.visa.UpdateVisaDocumentResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.infinite.travllr.visa.UpdateVisaDocumentResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    status: jspb.Message.getFieldWithDefault(msg, 1, ""),
    response: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.infinite.travllr.visa.UpdateVisaDocumentResponse}
 */
proto.com.infinite.travllr.visa.UpdateVisaDocumentResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.infinite.travllr.visa.UpdateVisaDocumentResponse;
  return proto.com.infinite.travllr.visa.UpdateVisaDocumentResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.infinite.travllr.visa.UpdateVisaDocumentResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.infinite.travllr.visa.UpdateVisaDocumentResponse}
 */
proto.com.infinite.travllr.visa.UpdateVisaDocumentResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatus(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setResponse(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.infinite.travllr.visa.UpdateVisaDocumentResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.infinite.travllr.visa.UpdateVisaDocumentResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.infinite.travllr.visa.UpdateVisaDocumentResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.infinite.travllr.visa.UpdateVisaDocumentResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatus();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getResponse();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string status = 1;
 * @return {string}
 */
proto.com.infinite.travllr.visa.UpdateVisaDocumentResponse.prototype.getStatus = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.com.infinite.travllr.visa.UpdateVisaDocumentResponse.prototype.setStatus = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string response = 2;
 * @return {string}
 */
proto.com.infinite.travllr.visa.UpdateVisaDocumentResponse.prototype.getResponse = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.com.infinite.travllr.visa.UpdateVisaDocumentResponse.prototype.setResponse = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.infinite.travllr.visa.CountryRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.infinite.travllr.visa.CountryRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.com.infinite.travllr.visa.CountryRequest.displayName = 'proto.com.infinite.travllr.visa.CountryRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.infinite.travllr.visa.CountryRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.com.infinite.travllr.visa.CountryRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.infinite.travllr.visa.CountryRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.infinite.travllr.visa.CountryRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.infinite.travllr.visa.CountryRequest}
 */
proto.com.infinite.travllr.visa.CountryRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.infinite.travllr.visa.CountryRequest;
  return proto.com.infinite.travllr.visa.CountryRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.infinite.travllr.visa.CountryRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.infinite.travllr.visa.CountryRequest}
 */
proto.com.infinite.travllr.visa.CountryRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.infinite.travllr.visa.CountryRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.infinite.travllr.visa.CountryRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.infinite.travllr.visa.CountryRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.infinite.travllr.visa.CountryRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.infinite.travllr.visa.Country = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.infinite.travllr.visa.Country, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.com.infinite.travllr.visa.Country.displayName = 'proto.com.infinite.travllr.visa.Country';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.infinite.travllr.visa.Country.prototype.toObject = function(opt_includeInstance) {
  return proto.com.infinite.travllr.visa.Country.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.infinite.travllr.visa.Country} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.infinite.travllr.visa.Country.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    code: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.infinite.travllr.visa.Country}
 */
proto.com.infinite.travllr.visa.Country.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.infinite.travllr.visa.Country;
  return proto.com.infinite.travllr.visa.Country.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.infinite.travllr.visa.Country} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.infinite.travllr.visa.Country}
 */
proto.com.infinite.travllr.visa.Country.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCode(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.infinite.travllr.visa.Country.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.infinite.travllr.visa.Country.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.infinite.travllr.visa.Country} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.infinite.travllr.visa.Country.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getCode();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.com.infinite.travllr.visa.Country.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.com.infinite.travllr.visa.Country.prototype.setName = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string code = 2;
 * @return {string}
 */
proto.com.infinite.travllr.visa.Country.prototype.getCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.com.infinite.travllr.visa.Country.prototype.setCode = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.infinite.travllr.visa.CountryListResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.com.infinite.travllr.visa.CountryListResponse.repeatedFields_, null);
};
goog.inherits(proto.com.infinite.travllr.visa.CountryListResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.com.infinite.travllr.visa.CountryListResponse.displayName = 'proto.com.infinite.travllr.visa.CountryListResponse';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.com.infinite.travllr.visa.CountryListResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.infinite.travllr.visa.CountryListResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.com.infinite.travllr.visa.CountryListResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.infinite.travllr.visa.CountryListResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.infinite.travllr.visa.CountryListResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    countriesList: jspb.Message.toObjectList(msg.getCountriesList(),
    proto.com.infinite.travllr.visa.Country.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.infinite.travllr.visa.CountryListResponse}
 */
proto.com.infinite.travllr.visa.CountryListResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.infinite.travllr.visa.CountryListResponse;
  return proto.com.infinite.travllr.visa.CountryListResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.infinite.travllr.visa.CountryListResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.infinite.travllr.visa.CountryListResponse}
 */
proto.com.infinite.travllr.visa.CountryListResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.com.infinite.travllr.visa.Country;
      reader.readMessage(value,proto.com.infinite.travllr.visa.Country.deserializeBinaryFromReader);
      msg.addCountries(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.infinite.travllr.visa.CountryListResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.infinite.travllr.visa.CountryListResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.infinite.travllr.visa.CountryListResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.infinite.travllr.visa.CountryListResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCountriesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.com.infinite.travllr.visa.Country.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Country countries = 1;
 * @return {!Array.<!proto.com.infinite.travllr.visa.Country>}
 */
proto.com.infinite.travllr.visa.CountryListResponse.prototype.getCountriesList = function() {
  return /** @type{!Array.<!proto.com.infinite.travllr.visa.Country>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.com.infinite.travllr.visa.Country, 1));
};


/** @param {!Array.<!proto.com.infinite.travllr.visa.Country>} value */
proto.com.infinite.travllr.visa.CountryListResponse.prototype.setCountriesList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.com.infinite.travllr.visa.Country=} opt_value
 * @param {number=} opt_index
 * @return {!proto.com.infinite.travllr.visa.Country}
 */
proto.com.infinite.travllr.visa.CountryListResponse.prototype.addCountries = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.com.infinite.travllr.visa.Country, opt_index);
};


proto.com.infinite.travllr.visa.CountryListResponse.prototype.clearCountriesList = function() {
  this.setCountriesList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.infinite.travllr.visa.VisaCountryList = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.infinite.travllr.visa.VisaCountryList, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.com.infinite.travllr.visa.VisaCountryList.displayName = 'proto.com.infinite.travllr.visa.VisaCountryList';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.infinite.travllr.visa.VisaCountryList.prototype.toObject = function(opt_includeInstance) {
  return proto.com.infinite.travllr.visa.VisaCountryList.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.infinite.travllr.visa.VisaCountryList} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.infinite.travllr.visa.VisaCountryList.toObject = function(includeInstance, msg) {
  var f, obj = {
    country: jspb.Message.getFieldWithDefault(msg, 1, ""),
    isonarrivalvisa: jspb.Message.getFieldWithDefault(msg, 2, false),
    isschengenvisa: jspb.Message.getFieldWithDefault(msg, 3, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.infinite.travllr.visa.VisaCountryList}
 */
proto.com.infinite.travllr.visa.VisaCountryList.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.infinite.travllr.visa.VisaCountryList;
  return proto.com.infinite.travllr.visa.VisaCountryList.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.infinite.travllr.visa.VisaCountryList} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.infinite.travllr.visa.VisaCountryList}
 */
proto.com.infinite.travllr.visa.VisaCountryList.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCountry(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsonarrivalvisa(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsschengenvisa(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.infinite.travllr.visa.VisaCountryList.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.infinite.travllr.visa.VisaCountryList.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.infinite.travllr.visa.VisaCountryList} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.infinite.travllr.visa.VisaCountryList.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCountry();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getIsonarrivalvisa();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
  f = message.getIsschengenvisa();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
};


/**
 * optional string country = 1;
 * @return {string}
 */
proto.com.infinite.travllr.visa.VisaCountryList.prototype.getCountry = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.com.infinite.travllr.visa.VisaCountryList.prototype.setCountry = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional bool isOnArrivalVisa = 2;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.com.infinite.travllr.visa.VisaCountryList.prototype.getIsonarrivalvisa = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 2, false));
};


/** @param {boolean} value */
proto.com.infinite.travllr.visa.VisaCountryList.prototype.setIsonarrivalvisa = function(value) {
  jspb.Message.setProto3BooleanField(this, 2, value);
};


/**
 * optional bool isSchengenVisa = 3;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.com.infinite.travllr.visa.VisaCountryList.prototype.getIsschengenvisa = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 3, false));
};


/** @param {boolean} value */
proto.com.infinite.travllr.visa.VisaCountryList.prototype.setIsschengenvisa = function(value) {
  jspb.Message.setProto3BooleanField(this, 3, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.infinite.travllr.visa.VisaCountryListResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.com.infinite.travllr.visa.VisaCountryListResponse.repeatedFields_, null);
};
goog.inherits(proto.com.infinite.travllr.visa.VisaCountryListResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.com.infinite.travllr.visa.VisaCountryListResponse.displayName = 'proto.com.infinite.travllr.visa.VisaCountryListResponse';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.com.infinite.travllr.visa.VisaCountryListResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.infinite.travllr.visa.VisaCountryListResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.com.infinite.travllr.visa.VisaCountryListResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.infinite.travllr.visa.VisaCountryListResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.infinite.travllr.visa.VisaCountryListResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    visacountriesList: jspb.Message.toObjectList(msg.getVisacountriesList(),
    proto.com.infinite.travllr.visa.VisaCountryList.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.infinite.travllr.visa.VisaCountryListResponse}
 */
proto.com.infinite.travllr.visa.VisaCountryListResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.infinite.travllr.visa.VisaCountryListResponse;
  return proto.com.infinite.travllr.visa.VisaCountryListResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.infinite.travllr.visa.VisaCountryListResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.infinite.travllr.visa.VisaCountryListResponse}
 */
proto.com.infinite.travllr.visa.VisaCountryListResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.com.infinite.travllr.visa.VisaCountryList;
      reader.readMessage(value,proto.com.infinite.travllr.visa.VisaCountryList.deserializeBinaryFromReader);
      msg.addVisacountries(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.infinite.travllr.visa.VisaCountryListResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.infinite.travllr.visa.VisaCountryListResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.infinite.travllr.visa.VisaCountryListResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.infinite.travllr.visa.VisaCountryListResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getVisacountriesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.com.infinite.travllr.visa.VisaCountryList.serializeBinaryToWriter
    );
  }
};


/**
 * repeated VisaCountryList visaCountries = 1;
 * @return {!Array.<!proto.com.infinite.travllr.visa.VisaCountryList>}
 */
proto.com.infinite.travllr.visa.VisaCountryListResponse.prototype.getVisacountriesList = function() {
  return /** @type{!Array.<!proto.com.infinite.travllr.visa.VisaCountryList>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.com.infinite.travllr.visa.VisaCountryList, 1));
};


/** @param {!Array.<!proto.com.infinite.travllr.visa.VisaCountryList>} value */
proto.com.infinite.travllr.visa.VisaCountryListResponse.prototype.setVisacountriesList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.com.infinite.travllr.visa.VisaCountryList=} opt_value
 * @param {number=} opt_index
 * @return {!proto.com.infinite.travllr.visa.VisaCountryList}
 */
proto.com.infinite.travllr.visa.VisaCountryListResponse.prototype.addVisacountries = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.com.infinite.travllr.visa.VisaCountryList, opt_index);
};


proto.com.infinite.travllr.visa.VisaCountryListResponse.prototype.clearVisacountriesList = function() {
  this.setVisacountriesList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.infinite.travllr.visa.CityListDetail = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.infinite.travllr.visa.CityListDetail, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.com.infinite.travllr.visa.CityListDetail.displayName = 'proto.com.infinite.travllr.visa.CityListDetail';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.infinite.travllr.visa.CityListDetail.prototype.toObject = function(opt_includeInstance) {
  return proto.com.infinite.travllr.visa.CityListDetail.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.infinite.travllr.visa.CityListDetail} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.infinite.travllr.visa.CityListDetail.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.infinite.travllr.visa.CityListDetail}
 */
proto.com.infinite.travllr.visa.CityListDetail.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.infinite.travllr.visa.CityListDetail;
  return proto.com.infinite.travllr.visa.CityListDetail.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.infinite.travllr.visa.CityListDetail} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.infinite.travllr.visa.CityListDetail}
 */
proto.com.infinite.travllr.visa.CityListDetail.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.infinite.travllr.visa.CityListDetail.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.infinite.travllr.visa.CityListDetail.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.infinite.travllr.visa.CityListDetail} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.infinite.travllr.visa.CityListDetail.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.com.infinite.travllr.visa.CityListDetail.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.com.infinite.travllr.visa.CityListDetail.prototype.setName = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.infinite.travllr.visa.CityListResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.com.infinite.travllr.visa.CityListResponse.repeatedFields_, null);
};
goog.inherits(proto.com.infinite.travllr.visa.CityListResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.com.infinite.travllr.visa.CityListResponse.displayName = 'proto.com.infinite.travllr.visa.CityListResponse';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.com.infinite.travllr.visa.CityListResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.infinite.travllr.visa.CityListResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.com.infinite.travllr.visa.CityListResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.infinite.travllr.visa.CityListResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.infinite.travllr.visa.CityListResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    citiesList: jspb.Message.toObjectList(msg.getCitiesList(),
    proto.com.infinite.travllr.visa.CityListDetail.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.infinite.travllr.visa.CityListResponse}
 */
proto.com.infinite.travllr.visa.CityListResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.infinite.travllr.visa.CityListResponse;
  return proto.com.infinite.travllr.visa.CityListResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.infinite.travllr.visa.CityListResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.infinite.travllr.visa.CityListResponse}
 */
proto.com.infinite.travllr.visa.CityListResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.com.infinite.travllr.visa.CityListDetail;
      reader.readMessage(value,proto.com.infinite.travllr.visa.CityListDetail.deserializeBinaryFromReader);
      msg.addCities(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.infinite.travllr.visa.CityListResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.infinite.travllr.visa.CityListResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.infinite.travllr.visa.CityListResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.infinite.travllr.visa.CityListResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCitiesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.com.infinite.travllr.visa.CityListDetail.serializeBinaryToWriter
    );
  }
};


/**
 * repeated CityListDetail cities = 1;
 * @return {!Array.<!proto.com.infinite.travllr.visa.CityListDetail>}
 */
proto.com.infinite.travllr.visa.CityListResponse.prototype.getCitiesList = function() {
  return /** @type{!Array.<!proto.com.infinite.travllr.visa.CityListDetail>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.com.infinite.travllr.visa.CityListDetail, 1));
};


/** @param {!Array.<!proto.com.infinite.travllr.visa.CityListDetail>} value */
proto.com.infinite.travllr.visa.CityListResponse.prototype.setCitiesList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.com.infinite.travllr.visa.CityListDetail=} opt_value
 * @param {number=} opt_index
 * @return {!proto.com.infinite.travllr.visa.CityListDetail}
 */
proto.com.infinite.travllr.visa.CityListResponse.prototype.addCities = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.com.infinite.travllr.visa.CityListDetail, opt_index);
};


proto.com.infinite.travllr.visa.CityListResponse.prototype.clearCitiesList = function() {
  this.setCitiesList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.infinite.travllr.visa.EmptyRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.infinite.travllr.visa.EmptyRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.com.infinite.travllr.visa.EmptyRequest.displayName = 'proto.com.infinite.travllr.visa.EmptyRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.infinite.travllr.visa.EmptyRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.com.infinite.travllr.visa.EmptyRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.infinite.travllr.visa.EmptyRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.infinite.travllr.visa.EmptyRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.infinite.travllr.visa.EmptyRequest}
 */
proto.com.infinite.travllr.visa.EmptyRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.infinite.travllr.visa.EmptyRequest;
  return proto.com.infinite.travllr.visa.EmptyRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.infinite.travllr.visa.EmptyRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.infinite.travllr.visa.EmptyRequest}
 */
proto.com.infinite.travllr.visa.EmptyRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.infinite.travllr.visa.EmptyRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.infinite.travllr.visa.EmptyRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.infinite.travllr.visa.EmptyRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.infinite.travllr.visa.EmptyRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.infinite.travllr.visa.AddVisaDocumentRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.com.infinite.travllr.visa.AddVisaDocumentRequest.repeatedFields_, null);
};
goog.inherits(proto.com.infinite.travllr.visa.AddVisaDocumentRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.com.infinite.travllr.visa.AddVisaDocumentRequest.displayName = 'proto.com.infinite.travllr.visa.AddVisaDocumentRequest';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.com.infinite.travllr.visa.AddVisaDocumentRequest.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.infinite.travllr.visa.AddVisaDocumentRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.com.infinite.travllr.visa.AddVisaDocumentRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.infinite.travllr.visa.AddVisaDocumentRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.infinite.travllr.visa.AddVisaDocumentRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    categorytype: jspb.Message.getFieldWithDefault(msg, 1, ""),
    countryList: jspb.Message.getRepeatedField(msg, 2),
    workingDays: jspb.Message.getFieldWithDefault(msg, 3, ""),
    website: jspb.Message.getFieldWithDefault(msg, 4, ""),
    title: jspb.Message.getFieldWithDefault(msg, 5, ""),
    description: jspb.Message.getFieldWithDefault(msg, 6, ""),
    documentLink: jspb.Message.getFieldWithDefault(msg, 7, ""),
    issinglesalaried: jspb.Message.getFieldWithDefault(msg, 8, false),
    issingleselfemployed: jspb.Message.getFieldWithDefault(msg, 9, false),
    ismarriedsalaried: jspb.Message.getFieldWithDefault(msg, 10, false),
    ismarriedselfemployed: jspb.Message.getFieldWithDefault(msg, 11, false),
    isonarrivalvisa: jspb.Message.getFieldWithDefault(msg, 12, false),
    isschengenvisa: jspb.Message.getFieldWithDefault(msg, 13, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.infinite.travllr.visa.AddVisaDocumentRequest}
 */
proto.com.infinite.travllr.visa.AddVisaDocumentRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.infinite.travllr.visa.AddVisaDocumentRequest;
  return proto.com.infinite.travllr.visa.AddVisaDocumentRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.infinite.travllr.visa.AddVisaDocumentRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.infinite.travllr.visa.AddVisaDocumentRequest}
 */
proto.com.infinite.travllr.visa.AddVisaDocumentRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCategorytype(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.addCountry(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setWorkingDays(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setWebsite(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setDocumentLink(value);
      break;
    case 8:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIssinglesalaried(value);
      break;
    case 9:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIssingleselfemployed(value);
      break;
    case 10:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsmarriedsalaried(value);
      break;
    case 11:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsmarriedselfemployed(value);
      break;
    case 12:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsonarrivalvisa(value);
      break;
    case 13:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsschengenvisa(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.infinite.travllr.visa.AddVisaDocumentRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.infinite.travllr.visa.AddVisaDocumentRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.infinite.travllr.visa.AddVisaDocumentRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.infinite.travllr.visa.AddVisaDocumentRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCategorytype();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getCountryList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      2,
      f
    );
  }
  f = message.getWorkingDays();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getWebsite();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getDocumentLink();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getIssinglesalaried();
  if (f) {
    writer.writeBool(
      8,
      f
    );
  }
  f = message.getIssingleselfemployed();
  if (f) {
    writer.writeBool(
      9,
      f
    );
  }
  f = message.getIsmarriedsalaried();
  if (f) {
    writer.writeBool(
      10,
      f
    );
  }
  f = message.getIsmarriedselfemployed();
  if (f) {
    writer.writeBool(
      11,
      f
    );
  }
  f = message.getIsonarrivalvisa();
  if (f) {
    writer.writeBool(
      12,
      f
    );
  }
  f = message.getIsschengenvisa();
  if (f) {
    writer.writeBool(
      13,
      f
    );
  }
};


/**
 * optional string categoryType = 1;
 * @return {string}
 */
proto.com.infinite.travllr.visa.AddVisaDocumentRequest.prototype.getCategorytype = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.com.infinite.travllr.visa.AddVisaDocumentRequest.prototype.setCategorytype = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated string country = 2;
 * @return {!Array.<string>}
 */
proto.com.infinite.travllr.visa.AddVisaDocumentRequest.prototype.getCountryList = function() {
  return /** @type {!Array.<string>} */ (jspb.Message.getRepeatedField(this, 2));
};


/** @param {!Array.<string>} value */
proto.com.infinite.travllr.visa.AddVisaDocumentRequest.prototype.setCountryList = function(value) {
  jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {!string} value
 * @param {number=} opt_index
 */
proto.com.infinite.travllr.visa.AddVisaDocumentRequest.prototype.addCountry = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


proto.com.infinite.travllr.visa.AddVisaDocumentRequest.prototype.clearCountryList = function() {
  this.setCountryList([]);
};


/**
 * optional string working_days = 3;
 * @return {string}
 */
proto.com.infinite.travllr.visa.AddVisaDocumentRequest.prototype.getWorkingDays = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.com.infinite.travllr.visa.AddVisaDocumentRequest.prototype.setWorkingDays = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string website = 4;
 * @return {string}
 */
proto.com.infinite.travllr.visa.AddVisaDocumentRequest.prototype.getWebsite = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.com.infinite.travllr.visa.AddVisaDocumentRequest.prototype.setWebsite = function(value) {
  jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string title = 5;
 * @return {string}
 */
proto.com.infinite.travllr.visa.AddVisaDocumentRequest.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/** @param {string} value */
proto.com.infinite.travllr.visa.AddVisaDocumentRequest.prototype.setTitle = function(value) {
  jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string description = 6;
 * @return {string}
 */
proto.com.infinite.travllr.visa.AddVisaDocumentRequest.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/** @param {string} value */
proto.com.infinite.travllr.visa.AddVisaDocumentRequest.prototype.setDescription = function(value) {
  jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string document_link = 7;
 * @return {string}
 */
proto.com.infinite.travllr.visa.AddVisaDocumentRequest.prototype.getDocumentLink = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/** @param {string} value */
proto.com.infinite.travllr.visa.AddVisaDocumentRequest.prototype.setDocumentLink = function(value) {
  jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional bool isSingleSalaried = 8;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.com.infinite.travllr.visa.AddVisaDocumentRequest.prototype.getIssinglesalaried = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 8, false));
};


/** @param {boolean} value */
proto.com.infinite.travllr.visa.AddVisaDocumentRequest.prototype.setIssinglesalaried = function(value) {
  jspb.Message.setProto3BooleanField(this, 8, value);
};


/**
 * optional bool isSingleSelfEmployed = 9;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.com.infinite.travllr.visa.AddVisaDocumentRequest.prototype.getIssingleselfemployed = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 9, false));
};


/** @param {boolean} value */
proto.com.infinite.travllr.visa.AddVisaDocumentRequest.prototype.setIssingleselfemployed = function(value) {
  jspb.Message.setProto3BooleanField(this, 9, value);
};


/**
 * optional bool isMarriedSalaried = 10;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.com.infinite.travllr.visa.AddVisaDocumentRequest.prototype.getIsmarriedsalaried = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 10, false));
};


/** @param {boolean} value */
proto.com.infinite.travllr.visa.AddVisaDocumentRequest.prototype.setIsmarriedsalaried = function(value) {
  jspb.Message.setProto3BooleanField(this, 10, value);
};


/**
 * optional bool isMarriedSelfEmployed = 11;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.com.infinite.travllr.visa.AddVisaDocumentRequest.prototype.getIsmarriedselfemployed = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 11, false));
};


/** @param {boolean} value */
proto.com.infinite.travllr.visa.AddVisaDocumentRequest.prototype.setIsmarriedselfemployed = function(value) {
  jspb.Message.setProto3BooleanField(this, 11, value);
};


/**
 * optional bool isOnArrivalVisa = 12;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.com.infinite.travllr.visa.AddVisaDocumentRequest.prototype.getIsonarrivalvisa = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 12, false));
};


/** @param {boolean} value */
proto.com.infinite.travllr.visa.AddVisaDocumentRequest.prototype.setIsonarrivalvisa = function(value) {
  jspb.Message.setProto3BooleanField(this, 12, value);
};


/**
 * optional bool isSchengenVisa = 13;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.com.infinite.travllr.visa.AddVisaDocumentRequest.prototype.getIsschengenvisa = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 13, false));
};


/** @param {boolean} value */
proto.com.infinite.travllr.visa.AddVisaDocumentRequest.prototype.setIsschengenvisa = function(value) {
  jspb.Message.setProto3BooleanField(this, 13, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.infinite.travllr.visa.AddVisaDocumentResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.infinite.travllr.visa.AddVisaDocumentResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.com.infinite.travllr.visa.AddVisaDocumentResponse.displayName = 'proto.com.infinite.travllr.visa.AddVisaDocumentResponse';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.infinite.travllr.visa.AddVisaDocumentResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.com.infinite.travllr.visa.AddVisaDocumentResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.infinite.travllr.visa.AddVisaDocumentResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.infinite.travllr.visa.AddVisaDocumentResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    status: jspb.Message.getFieldWithDefault(msg, 1, ""),
    response: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.infinite.travllr.visa.AddVisaDocumentResponse}
 */
proto.com.infinite.travllr.visa.AddVisaDocumentResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.infinite.travllr.visa.AddVisaDocumentResponse;
  return proto.com.infinite.travllr.visa.AddVisaDocumentResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.infinite.travllr.visa.AddVisaDocumentResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.infinite.travllr.visa.AddVisaDocumentResponse}
 */
proto.com.infinite.travllr.visa.AddVisaDocumentResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatus(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setResponse(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.infinite.travllr.visa.AddVisaDocumentResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.infinite.travllr.visa.AddVisaDocumentResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.infinite.travllr.visa.AddVisaDocumentResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.infinite.travllr.visa.AddVisaDocumentResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatus();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getResponse();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string status = 1;
 * @return {string}
 */
proto.com.infinite.travllr.visa.AddVisaDocumentResponse.prototype.getStatus = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.com.infinite.travllr.visa.AddVisaDocumentResponse.prototype.setStatus = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string response = 2;
 * @return {string}
 */
proto.com.infinite.travllr.visa.AddVisaDocumentResponse.prototype.getResponse = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.com.infinite.travllr.visa.AddVisaDocumentResponse.prototype.setResponse = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * @enum {number}
 */
proto.com.infinite.travllr.visa.Occupation = {
  SALARIED: 0,
  SELF_EMPLOYED: 1
};

/**
 * @enum {number}
 */
proto.com.infinite.travllr.visa.MaritalStatus = {
  SINGLE: 0,
  MARRIED: 1
};

/**
 * @enum {number}
 */
proto.com.infinite.travllr.visa.VisaCategoryType = {
  FINANCIALS: 0,
  FORMS: 1,
  IDENTITY: 2,
  OCCUPATION: 3,
  VOUCHERS: 4,
  SUBMISSION: 5,
  INFO: 6
};

goog.object.extend(exports, proto.com.infinite.travllr.visa);
