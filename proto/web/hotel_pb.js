/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

goog.exportSymbol('proto.com.infinite.travllr.hotel.HotelPrice', null, global);
goog.exportSymbol('proto.com.infinite.travllr.hotel.HotelPriceGst', null, global);
goog.exportSymbol('proto.com.infinite.travllr.hotel.HotelRequest', null, global);
goog.exportSymbol('proto.com.infinite.travllr.hotel.HotelResponse', null, global);
goog.exportSymbol('proto.com.infinite.travllr.hotel.HotelResult', null, global);
goog.exportSymbol('proto.com.infinite.travllr.hotel.RoomGuest', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.infinite.travllr.hotel.RoomGuest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.com.infinite.travllr.hotel.RoomGuest.repeatedFields_, null);
};
goog.inherits(proto.com.infinite.travllr.hotel.RoomGuest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.com.infinite.travllr.hotel.RoomGuest.displayName = 'proto.com.infinite.travllr.hotel.RoomGuest';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.com.infinite.travllr.hotel.RoomGuest.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.infinite.travllr.hotel.RoomGuest.prototype.toObject = function(opt_includeInstance) {
  return proto.com.infinite.travllr.hotel.RoomGuest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.infinite.travllr.hotel.RoomGuest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.infinite.travllr.hotel.RoomGuest.toObject = function(includeInstance, msg) {
  var f, obj = {
    noofadults: jspb.Message.getFieldWithDefault(msg, 1, 0),
    noofchild: jspb.Message.getFieldWithDefault(msg, 2, 0),
    childageList: jspb.Message.getRepeatedField(msg, 3)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.infinite.travllr.hotel.RoomGuest}
 */
proto.com.infinite.travllr.hotel.RoomGuest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.infinite.travllr.hotel.RoomGuest;
  return proto.com.infinite.travllr.hotel.RoomGuest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.infinite.travllr.hotel.RoomGuest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.infinite.travllr.hotel.RoomGuest}
 */
proto.com.infinite.travllr.hotel.RoomGuest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setNoofadults(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setNoofchild(value);
      break;
    case 3:
      var value = /** @type {!Array.<number>} */ (reader.readPackedInt32());
      msg.setChildageList(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.infinite.travllr.hotel.RoomGuest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.infinite.travllr.hotel.RoomGuest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.infinite.travllr.hotel.RoomGuest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.infinite.travllr.hotel.RoomGuest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNoofadults();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getNoofchild();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getChildageList();
  if (f.length > 0) {
    writer.writePackedInt32(
      3,
      f
    );
  }
};


/**
 * optional int32 noOfAdults = 1;
 * @return {number}
 */
proto.com.infinite.travllr.hotel.RoomGuest.prototype.getNoofadults = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.com.infinite.travllr.hotel.RoomGuest.prototype.setNoofadults = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 noOfChild = 2;
 * @return {number}
 */
proto.com.infinite.travllr.hotel.RoomGuest.prototype.getNoofchild = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.com.infinite.travllr.hotel.RoomGuest.prototype.setNoofchild = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * repeated int32 childAge = 3;
 * @return {!Array.<number>}
 */
proto.com.infinite.travllr.hotel.RoomGuest.prototype.getChildageList = function() {
  return /** @type {!Array.<number>} */ (jspb.Message.getRepeatedField(this, 3));
};


/** @param {!Array.<number>} value */
proto.com.infinite.travllr.hotel.RoomGuest.prototype.setChildageList = function(value) {
  jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {!number} value
 * @param {number=} opt_index
 */
proto.com.infinite.travllr.hotel.RoomGuest.prototype.addChildage = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


proto.com.infinite.travllr.hotel.RoomGuest.prototype.clearChildageList = function() {
  this.setChildageList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.infinite.travllr.hotel.HotelRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.infinite.travllr.hotel.HotelRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.com.infinite.travllr.hotel.HotelRequest.displayName = 'proto.com.infinite.travllr.hotel.HotelRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.infinite.travllr.hotel.HotelRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.com.infinite.travllr.hotel.HotelRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.infinite.travllr.hotel.HotelRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.infinite.travllr.hotel.HotelRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    checkindate: jspb.Message.getFieldWithDefault(msg, 1, ""),
    noofnights: jspb.Message.getFieldWithDefault(msg, 2, 0),
    countrycode: jspb.Message.getFieldWithDefault(msg, 3, ""),
    cityid: jspb.Message.getFieldWithDefault(msg, 4, ""),
    resultcount: jspb.Message.getFieldWithDefault(msg, 5, 0),
    preferredcurrency: jspb.Message.getFieldWithDefault(msg, 6, ""),
    guestnationality: jspb.Message.getFieldWithDefault(msg, 7, ""),
    noofrooms: jspb.Message.getFieldWithDefault(msg, 8, 0),
    roomguests: (f = msg.getRoomguests()) && proto.com.infinite.travllr.hotel.RoomGuest.toObject(includeInstance, f),
    preferredhotel: jspb.Message.getFieldWithDefault(msg, 10, ""),
    maxrating: jspb.Message.getFieldWithDefault(msg, 11, 0),
    minrating: jspb.Message.getFieldWithDefault(msg, 12, 0),
    reviewscore: jspb.Message.getFieldWithDefault(msg, 13, 0),
    isnearbysearchallowed: jspb.Message.getFieldWithDefault(msg, 14, false),
    enduserip: jspb.Message.getFieldWithDefault(msg, 15, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.infinite.travllr.hotel.HotelRequest}
 */
proto.com.infinite.travllr.hotel.HotelRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.infinite.travllr.hotel.HotelRequest;
  return proto.com.infinite.travllr.hotel.HotelRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.infinite.travllr.hotel.HotelRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.infinite.travllr.hotel.HotelRequest}
 */
proto.com.infinite.travllr.hotel.HotelRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCheckindate(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setNoofnights(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setCountrycode(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setCityid(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setResultcount(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setPreferredcurrency(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setGuestnationality(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setNoofrooms(value);
      break;
    case 9:
      var value = new proto.com.infinite.travllr.hotel.RoomGuest;
      reader.readMessage(value,proto.com.infinite.travllr.hotel.RoomGuest.deserializeBinaryFromReader);
      msg.setRoomguests(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setPreferredhotel(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setMaxrating(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setMinrating(value);
      break;
    case 13:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setReviewscore(value);
      break;
    case 14:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsnearbysearchallowed(value);
      break;
    case 15:
      var value = /** @type {string} */ (reader.readString());
      msg.setEnduserip(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.infinite.travllr.hotel.HotelRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.infinite.travllr.hotel.HotelRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.infinite.travllr.hotel.HotelRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.infinite.travllr.hotel.HotelRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCheckindate();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getNoofnights();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getCountrycode();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getCityid();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getResultcount();
  if (f !== 0) {
    writer.writeInt32(
      5,
      f
    );
  }
  f = message.getPreferredcurrency();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getGuestnationality();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getNoofrooms();
  if (f !== 0) {
    writer.writeInt32(
      8,
      f
    );
  }
  f = message.getRoomguests();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      proto.com.infinite.travllr.hotel.RoomGuest.serializeBinaryToWriter
    );
  }
  f = message.getPreferredhotel();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getMaxrating();
  if (f !== 0) {
    writer.writeInt32(
      11,
      f
    );
  }
  f = message.getMinrating();
  if (f !== 0) {
    writer.writeInt32(
      12,
      f
    );
  }
  f = message.getReviewscore();
  if (f !== 0) {
    writer.writeInt32(
      13,
      f
    );
  }
  f = message.getIsnearbysearchallowed();
  if (f) {
    writer.writeBool(
      14,
      f
    );
  }
  f = message.getEnduserip();
  if (f.length > 0) {
    writer.writeString(
      15,
      f
    );
  }
};


/**
 * optional string checkInDate = 1;
 * @return {string}
 */
proto.com.infinite.travllr.hotel.HotelRequest.prototype.getCheckindate = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.com.infinite.travllr.hotel.HotelRequest.prototype.setCheckindate = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int32 noOfNights = 2;
 * @return {number}
 */
proto.com.infinite.travllr.hotel.HotelRequest.prototype.getNoofnights = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.com.infinite.travllr.hotel.HotelRequest.prototype.setNoofnights = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string countryCode = 3;
 * @return {string}
 */
proto.com.infinite.travllr.hotel.HotelRequest.prototype.getCountrycode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.com.infinite.travllr.hotel.HotelRequest.prototype.setCountrycode = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string cityId = 4;
 * @return {string}
 */
proto.com.infinite.travllr.hotel.HotelRequest.prototype.getCityid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.com.infinite.travllr.hotel.HotelRequest.prototype.setCityid = function(value) {
  jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional int32 resultCount = 5;
 * @return {number}
 */
proto.com.infinite.travllr.hotel.HotelRequest.prototype.getResultcount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/** @param {number} value */
proto.com.infinite.travllr.hotel.HotelRequest.prototype.setResultcount = function(value) {
  jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional string preferredCurrency = 6;
 * @return {string}
 */
proto.com.infinite.travllr.hotel.HotelRequest.prototype.getPreferredcurrency = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/** @param {string} value */
proto.com.infinite.travllr.hotel.HotelRequest.prototype.setPreferredcurrency = function(value) {
  jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string guestNationality = 7;
 * @return {string}
 */
proto.com.infinite.travllr.hotel.HotelRequest.prototype.getGuestnationality = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/** @param {string} value */
proto.com.infinite.travllr.hotel.HotelRequest.prototype.setGuestnationality = function(value) {
  jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional int32 noOfRooms = 8;
 * @return {number}
 */
proto.com.infinite.travllr.hotel.HotelRequest.prototype.getNoofrooms = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/** @param {number} value */
proto.com.infinite.travllr.hotel.HotelRequest.prototype.setNoofrooms = function(value) {
  jspb.Message.setProto3IntField(this, 8, value);
};


/**
 * optional RoomGuest roomGuests = 9;
 * @return {?proto.com.infinite.travllr.hotel.RoomGuest}
 */
proto.com.infinite.travllr.hotel.HotelRequest.prototype.getRoomguests = function() {
  return /** @type{?proto.com.infinite.travllr.hotel.RoomGuest} */ (
    jspb.Message.getWrapperField(this, proto.com.infinite.travllr.hotel.RoomGuest, 9));
};


/** @param {?proto.com.infinite.travllr.hotel.RoomGuest|undefined} value */
proto.com.infinite.travllr.hotel.HotelRequest.prototype.setRoomguests = function(value) {
  jspb.Message.setWrapperField(this, 9, value);
};


proto.com.infinite.travllr.hotel.HotelRequest.prototype.clearRoomguests = function() {
  this.setRoomguests(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.com.infinite.travllr.hotel.HotelRequest.prototype.hasRoomguests = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional string preferredHotel = 10;
 * @return {string}
 */
proto.com.infinite.travllr.hotel.HotelRequest.prototype.getPreferredhotel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/** @param {string} value */
proto.com.infinite.travllr.hotel.HotelRequest.prototype.setPreferredhotel = function(value) {
  jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * optional int32 maxRating = 11;
 * @return {number}
 */
proto.com.infinite.travllr.hotel.HotelRequest.prototype.getMaxrating = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/** @param {number} value */
proto.com.infinite.travllr.hotel.HotelRequest.prototype.setMaxrating = function(value) {
  jspb.Message.setProto3IntField(this, 11, value);
};


/**
 * optional int32 MinRating = 12;
 * @return {number}
 */
proto.com.infinite.travllr.hotel.HotelRequest.prototype.getMinrating = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 12, 0));
};


/** @param {number} value */
proto.com.infinite.travllr.hotel.HotelRequest.prototype.setMinrating = function(value) {
  jspb.Message.setProto3IntField(this, 12, value);
};


/**
 * optional int32 reviewScore = 13;
 * @return {number}
 */
proto.com.infinite.travllr.hotel.HotelRequest.prototype.getReviewscore = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 13, 0));
};


/** @param {number} value */
proto.com.infinite.travllr.hotel.HotelRequest.prototype.setReviewscore = function(value) {
  jspb.Message.setProto3IntField(this, 13, value);
};


/**
 * optional bool isNearBySearchAllowed = 14;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.com.infinite.travllr.hotel.HotelRequest.prototype.getIsnearbysearchallowed = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 14, false));
};


/** @param {boolean} value */
proto.com.infinite.travllr.hotel.HotelRequest.prototype.setIsnearbysearchallowed = function(value) {
  jspb.Message.setProto3BooleanField(this, 14, value);
};


/**
 * optional string endUserIp = 15;
 * @return {string}
 */
proto.com.infinite.travllr.hotel.HotelRequest.prototype.getEnduserip = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 15, ""));
};


/** @param {string} value */
proto.com.infinite.travllr.hotel.HotelRequest.prototype.setEnduserip = function(value) {
  jspb.Message.setProto3StringField(this, 15, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.infinite.travllr.hotel.HotelPriceGst = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.infinite.travllr.hotel.HotelPriceGst, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.com.infinite.travllr.hotel.HotelPriceGst.displayName = 'proto.com.infinite.travllr.hotel.HotelPriceGst';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.infinite.travllr.hotel.HotelPriceGst.prototype.toObject = function(opt_includeInstance) {
  return proto.com.infinite.travllr.hotel.HotelPriceGst.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.infinite.travllr.hotel.HotelPriceGst} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.infinite.travllr.hotel.HotelPriceGst.toObject = function(includeInstance, msg) {
  var f, obj = {
    cgstamount: +jspb.Message.getFieldWithDefault(msg, 1, 0.0),
    cgstrate: +jspb.Message.getFieldWithDefault(msg, 2, 0.0),
    cessamount: +jspb.Message.getFieldWithDefault(msg, 3, 0.0),
    cessrate: +jspb.Message.getFieldWithDefault(msg, 4, 0.0),
    igstamount: +jspb.Message.getFieldWithDefault(msg, 5, 0.0),
    igstrate: +jspb.Message.getFieldWithDefault(msg, 6, 0.0),
    sgstamount: +jspb.Message.getFieldWithDefault(msg, 7, 0.0),
    sgstrate: +jspb.Message.getFieldWithDefault(msg, 8, 0.0),
    taxableamount: +jspb.Message.getFieldWithDefault(msg, 9, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.infinite.travllr.hotel.HotelPriceGst}
 */
proto.com.infinite.travllr.hotel.HotelPriceGst.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.infinite.travllr.hotel.HotelPriceGst;
  return proto.com.infinite.travllr.hotel.HotelPriceGst.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.infinite.travllr.hotel.HotelPriceGst} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.infinite.travllr.hotel.HotelPriceGst}
 */
proto.com.infinite.travllr.hotel.HotelPriceGst.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setCgstamount(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setCgstrate(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setCessamount(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setCessrate(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setIgstamount(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setIgstrate(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setSgstamount(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setSgstrate(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setTaxableamount(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.infinite.travllr.hotel.HotelPriceGst.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.infinite.travllr.hotel.HotelPriceGst.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.infinite.travllr.hotel.HotelPriceGst} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.infinite.travllr.hotel.HotelPriceGst.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCgstamount();
  if (f !== 0.0) {
    writer.writeDouble(
      1,
      f
    );
  }
  f = message.getCgstrate();
  if (f !== 0.0) {
    writer.writeDouble(
      2,
      f
    );
  }
  f = message.getCessamount();
  if (f !== 0.0) {
    writer.writeDouble(
      3,
      f
    );
  }
  f = message.getCessrate();
  if (f !== 0.0) {
    writer.writeDouble(
      4,
      f
    );
  }
  f = message.getIgstamount();
  if (f !== 0.0) {
    writer.writeDouble(
      5,
      f
    );
  }
  f = message.getIgstrate();
  if (f !== 0.0) {
    writer.writeDouble(
      6,
      f
    );
  }
  f = message.getSgstamount();
  if (f !== 0.0) {
    writer.writeDouble(
      7,
      f
    );
  }
  f = message.getSgstrate();
  if (f !== 0.0) {
    writer.writeDouble(
      8,
      f
    );
  }
  f = message.getTaxableamount();
  if (f !== 0.0) {
    writer.writeDouble(
      9,
      f
    );
  }
};


/**
 * optional double cGSTAmount = 1;
 * @return {number}
 */
proto.com.infinite.travllr.hotel.HotelPriceGst.prototype.getCgstamount = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 1, 0.0));
};


/** @param {number} value */
proto.com.infinite.travllr.hotel.HotelPriceGst.prototype.setCgstamount = function(value) {
  jspb.Message.setProto3FloatField(this, 1, value);
};


/**
 * optional double cGSTRate = 2;
 * @return {number}
 */
proto.com.infinite.travllr.hotel.HotelPriceGst.prototype.getCgstrate = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 2, 0.0));
};


/** @param {number} value */
proto.com.infinite.travllr.hotel.HotelPriceGst.prototype.setCgstrate = function(value) {
  jspb.Message.setProto3FloatField(this, 2, value);
};


/**
 * optional double cessAmount = 3;
 * @return {number}
 */
proto.com.infinite.travllr.hotel.HotelPriceGst.prototype.getCessamount = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 3, 0.0));
};


/** @param {number} value */
proto.com.infinite.travllr.hotel.HotelPriceGst.prototype.setCessamount = function(value) {
  jspb.Message.setProto3FloatField(this, 3, value);
};


/**
 * optional double cessRate = 4;
 * @return {number}
 */
proto.com.infinite.travllr.hotel.HotelPriceGst.prototype.getCessrate = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 4, 0.0));
};


/** @param {number} value */
proto.com.infinite.travllr.hotel.HotelPriceGst.prototype.setCessrate = function(value) {
  jspb.Message.setProto3FloatField(this, 4, value);
};


/**
 * optional double iGSTAmount = 5;
 * @return {number}
 */
proto.com.infinite.travllr.hotel.HotelPriceGst.prototype.getIgstamount = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 5, 0.0));
};


/** @param {number} value */
proto.com.infinite.travllr.hotel.HotelPriceGst.prototype.setIgstamount = function(value) {
  jspb.Message.setProto3FloatField(this, 5, value);
};


/**
 * optional double iGSTRate = 6;
 * @return {number}
 */
proto.com.infinite.travllr.hotel.HotelPriceGst.prototype.getIgstrate = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 6, 0.0));
};


/** @param {number} value */
proto.com.infinite.travllr.hotel.HotelPriceGst.prototype.setIgstrate = function(value) {
  jspb.Message.setProto3FloatField(this, 6, value);
};


/**
 * optional double sGSTAmount = 7;
 * @return {number}
 */
proto.com.infinite.travllr.hotel.HotelPriceGst.prototype.getSgstamount = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 7, 0.0));
};


/** @param {number} value */
proto.com.infinite.travllr.hotel.HotelPriceGst.prototype.setSgstamount = function(value) {
  jspb.Message.setProto3FloatField(this, 7, value);
};


/**
 * optional double sGSTRate = 8;
 * @return {number}
 */
proto.com.infinite.travllr.hotel.HotelPriceGst.prototype.getSgstrate = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 8, 0.0));
};


/** @param {number} value */
proto.com.infinite.travllr.hotel.HotelPriceGst.prototype.setSgstrate = function(value) {
  jspb.Message.setProto3FloatField(this, 8, value);
};


/**
 * optional double taxableAmount = 9;
 * @return {number}
 */
proto.com.infinite.travllr.hotel.HotelPriceGst.prototype.getTaxableamount = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 9, 0.0));
};


/** @param {number} value */
proto.com.infinite.travllr.hotel.HotelPriceGst.prototype.setTaxableamount = function(value) {
  jspb.Message.setProto3FloatField(this, 9, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.infinite.travllr.hotel.HotelPrice = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.infinite.travllr.hotel.HotelPrice, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.com.infinite.travllr.hotel.HotelPrice.displayName = 'proto.com.infinite.travllr.hotel.HotelPrice';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.infinite.travllr.hotel.HotelPrice.prototype.toObject = function(opt_includeInstance) {
  return proto.com.infinite.travllr.hotel.HotelPrice.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.infinite.travllr.hotel.HotelPrice} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.infinite.travllr.hotel.HotelPrice.toObject = function(includeInstance, msg) {
  var f, obj = {
    currencycode: jspb.Message.getFieldWithDefault(msg, 1, ""),
    roomprice: +jspb.Message.getFieldWithDefault(msg, 2, 0.0),
    tax: +jspb.Message.getFieldWithDefault(msg, 3, 0.0),
    extraguestcharge: +jspb.Message.getFieldWithDefault(msg, 4, 0.0),
    childcharge: +jspb.Message.getFieldWithDefault(msg, 5, 0.0),
    othercharges: +jspb.Message.getFieldWithDefault(msg, 6, 0.0),
    discount: +jspb.Message.getFieldWithDefault(msg, 7, 0.0),
    publishedprice: +jspb.Message.getFieldWithDefault(msg, 8, 0.0),
    publishedpriceroundedoff: +jspb.Message.getFieldWithDefault(msg, 9, 0.0),
    offeredprice: +jspb.Message.getFieldWithDefault(msg, 10, 0.0),
    offeredpriceroundedoff: +jspb.Message.getFieldWithDefault(msg, 11, 0.0),
    agentcommission: +jspb.Message.getFieldWithDefault(msg, 12, 0.0),
    agentmarkup: +jspb.Message.getFieldWithDefault(msg, 13, 0.0),
    servicetax: +jspb.Message.getFieldWithDefault(msg, 14, 0.0),
    tds: +jspb.Message.getFieldWithDefault(msg, 15, 0.0),
    servicecharge: +jspb.Message.getFieldWithDefault(msg, 16, 0.0),
    totalgstamount: +jspb.Message.getFieldWithDefault(msg, 17, 0.0),
    gst: (f = msg.getGst()) && proto.com.infinite.travllr.hotel.HotelPriceGst.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.infinite.travllr.hotel.HotelPrice}
 */
proto.com.infinite.travllr.hotel.HotelPrice.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.infinite.travllr.hotel.HotelPrice;
  return proto.com.infinite.travllr.hotel.HotelPrice.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.infinite.travllr.hotel.HotelPrice} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.infinite.travllr.hotel.HotelPrice}
 */
proto.com.infinite.travllr.hotel.HotelPrice.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCurrencycode(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setRoomprice(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setTax(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setExtraguestcharge(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setChildcharge(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setOthercharges(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setDiscount(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setPublishedprice(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setPublishedpriceroundedoff(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setOfferedprice(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setOfferedpriceroundedoff(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setAgentcommission(value);
      break;
    case 13:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setAgentmarkup(value);
      break;
    case 14:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setServicetax(value);
      break;
    case 15:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setTds(value);
      break;
    case 16:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setServicecharge(value);
      break;
    case 17:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setTotalgstamount(value);
      break;
    case 18:
      var value = new proto.com.infinite.travllr.hotel.HotelPriceGst;
      reader.readMessage(value,proto.com.infinite.travllr.hotel.HotelPriceGst.deserializeBinaryFromReader);
      msg.setGst(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.infinite.travllr.hotel.HotelPrice.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.infinite.travllr.hotel.HotelPrice.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.infinite.travllr.hotel.HotelPrice} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.infinite.travllr.hotel.HotelPrice.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCurrencycode();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getRoomprice();
  if (f !== 0.0) {
    writer.writeDouble(
      2,
      f
    );
  }
  f = message.getTax();
  if (f !== 0.0) {
    writer.writeDouble(
      3,
      f
    );
  }
  f = message.getExtraguestcharge();
  if (f !== 0.0) {
    writer.writeDouble(
      4,
      f
    );
  }
  f = message.getChildcharge();
  if (f !== 0.0) {
    writer.writeDouble(
      5,
      f
    );
  }
  f = message.getOthercharges();
  if (f !== 0.0) {
    writer.writeDouble(
      6,
      f
    );
  }
  f = message.getDiscount();
  if (f !== 0.0) {
    writer.writeDouble(
      7,
      f
    );
  }
  f = message.getPublishedprice();
  if (f !== 0.0) {
    writer.writeDouble(
      8,
      f
    );
  }
  f = message.getPublishedpriceroundedoff();
  if (f !== 0.0) {
    writer.writeDouble(
      9,
      f
    );
  }
  f = message.getOfferedprice();
  if (f !== 0.0) {
    writer.writeDouble(
      10,
      f
    );
  }
  f = message.getOfferedpriceroundedoff();
  if (f !== 0.0) {
    writer.writeDouble(
      11,
      f
    );
  }
  f = message.getAgentcommission();
  if (f !== 0.0) {
    writer.writeDouble(
      12,
      f
    );
  }
  f = message.getAgentmarkup();
  if (f !== 0.0) {
    writer.writeDouble(
      13,
      f
    );
  }
  f = message.getServicetax();
  if (f !== 0.0) {
    writer.writeDouble(
      14,
      f
    );
  }
  f = message.getTds();
  if (f !== 0.0) {
    writer.writeDouble(
      15,
      f
    );
  }
  f = message.getServicecharge();
  if (f !== 0.0) {
    writer.writeDouble(
      16,
      f
    );
  }
  f = message.getTotalgstamount();
  if (f !== 0.0) {
    writer.writeDouble(
      17,
      f
    );
  }
  f = message.getGst();
  if (f != null) {
    writer.writeMessage(
      18,
      f,
      proto.com.infinite.travllr.hotel.HotelPriceGst.serializeBinaryToWriter
    );
  }
};


/**
 * optional string currencyCode = 1;
 * @return {string}
 */
proto.com.infinite.travllr.hotel.HotelPrice.prototype.getCurrencycode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.com.infinite.travllr.hotel.HotelPrice.prototype.setCurrencycode = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional double roomPrice = 2;
 * @return {number}
 */
proto.com.infinite.travllr.hotel.HotelPrice.prototype.getRoomprice = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 2, 0.0));
};


/** @param {number} value */
proto.com.infinite.travllr.hotel.HotelPrice.prototype.setRoomprice = function(value) {
  jspb.Message.setProto3FloatField(this, 2, value);
};


/**
 * optional double tax = 3;
 * @return {number}
 */
proto.com.infinite.travllr.hotel.HotelPrice.prototype.getTax = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 3, 0.0));
};


/** @param {number} value */
proto.com.infinite.travllr.hotel.HotelPrice.prototype.setTax = function(value) {
  jspb.Message.setProto3FloatField(this, 3, value);
};


/**
 * optional double extraGuestCharge = 4;
 * @return {number}
 */
proto.com.infinite.travllr.hotel.HotelPrice.prototype.getExtraguestcharge = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 4, 0.0));
};


/** @param {number} value */
proto.com.infinite.travllr.hotel.HotelPrice.prototype.setExtraguestcharge = function(value) {
  jspb.Message.setProto3FloatField(this, 4, value);
};


/**
 * optional double childCharge = 5;
 * @return {number}
 */
proto.com.infinite.travllr.hotel.HotelPrice.prototype.getChildcharge = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 5, 0.0));
};


/** @param {number} value */
proto.com.infinite.travllr.hotel.HotelPrice.prototype.setChildcharge = function(value) {
  jspb.Message.setProto3FloatField(this, 5, value);
};


/**
 * optional double otherCharges = 6;
 * @return {number}
 */
proto.com.infinite.travllr.hotel.HotelPrice.prototype.getOthercharges = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 6, 0.0));
};


/** @param {number} value */
proto.com.infinite.travllr.hotel.HotelPrice.prototype.setOthercharges = function(value) {
  jspb.Message.setProto3FloatField(this, 6, value);
};


/**
 * optional double discount = 7;
 * @return {number}
 */
proto.com.infinite.travllr.hotel.HotelPrice.prototype.getDiscount = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 7, 0.0));
};


/** @param {number} value */
proto.com.infinite.travllr.hotel.HotelPrice.prototype.setDiscount = function(value) {
  jspb.Message.setProto3FloatField(this, 7, value);
};


/**
 * optional double publishedPrice = 8;
 * @return {number}
 */
proto.com.infinite.travllr.hotel.HotelPrice.prototype.getPublishedprice = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 8, 0.0));
};


/** @param {number} value */
proto.com.infinite.travllr.hotel.HotelPrice.prototype.setPublishedprice = function(value) {
  jspb.Message.setProto3FloatField(this, 8, value);
};


/**
 * optional double publishedPriceRoundedOff = 9;
 * @return {number}
 */
proto.com.infinite.travllr.hotel.HotelPrice.prototype.getPublishedpriceroundedoff = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 9, 0.0));
};


/** @param {number} value */
proto.com.infinite.travllr.hotel.HotelPrice.prototype.setPublishedpriceroundedoff = function(value) {
  jspb.Message.setProto3FloatField(this, 9, value);
};


/**
 * optional double offeredPrice = 10;
 * @return {number}
 */
proto.com.infinite.travllr.hotel.HotelPrice.prototype.getOfferedprice = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 10, 0.0));
};


/** @param {number} value */
proto.com.infinite.travllr.hotel.HotelPrice.prototype.setOfferedprice = function(value) {
  jspb.Message.setProto3FloatField(this, 10, value);
};


/**
 * optional double offeredPriceRoundedOff = 11;
 * @return {number}
 */
proto.com.infinite.travllr.hotel.HotelPrice.prototype.getOfferedpriceroundedoff = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 11, 0.0));
};


/** @param {number} value */
proto.com.infinite.travllr.hotel.HotelPrice.prototype.setOfferedpriceroundedoff = function(value) {
  jspb.Message.setProto3FloatField(this, 11, value);
};


/**
 * optional double agentCommission = 12;
 * @return {number}
 */
proto.com.infinite.travllr.hotel.HotelPrice.prototype.getAgentcommission = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 12, 0.0));
};


/** @param {number} value */
proto.com.infinite.travllr.hotel.HotelPrice.prototype.setAgentcommission = function(value) {
  jspb.Message.setProto3FloatField(this, 12, value);
};


/**
 * optional double agentMarkUp = 13;
 * @return {number}
 */
proto.com.infinite.travllr.hotel.HotelPrice.prototype.getAgentmarkup = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 13, 0.0));
};


/** @param {number} value */
proto.com.infinite.travllr.hotel.HotelPrice.prototype.setAgentmarkup = function(value) {
  jspb.Message.setProto3FloatField(this, 13, value);
};


/**
 * optional double serviceTax = 14;
 * @return {number}
 */
proto.com.infinite.travllr.hotel.HotelPrice.prototype.getServicetax = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 14, 0.0));
};


/** @param {number} value */
proto.com.infinite.travllr.hotel.HotelPrice.prototype.setServicetax = function(value) {
  jspb.Message.setProto3FloatField(this, 14, value);
};


/**
 * optional double tds = 15;
 * @return {number}
 */
proto.com.infinite.travllr.hotel.HotelPrice.prototype.getTds = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 15, 0.0));
};


/** @param {number} value */
proto.com.infinite.travllr.hotel.HotelPrice.prototype.setTds = function(value) {
  jspb.Message.setProto3FloatField(this, 15, value);
};


/**
 * optional double serviceCharge = 16;
 * @return {number}
 */
proto.com.infinite.travllr.hotel.HotelPrice.prototype.getServicecharge = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 16, 0.0));
};


/** @param {number} value */
proto.com.infinite.travllr.hotel.HotelPrice.prototype.setServicecharge = function(value) {
  jspb.Message.setProto3FloatField(this, 16, value);
};


/**
 * optional double totalGSTAmount = 17;
 * @return {number}
 */
proto.com.infinite.travllr.hotel.HotelPrice.prototype.getTotalgstamount = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 17, 0.0));
};


/** @param {number} value */
proto.com.infinite.travllr.hotel.HotelPrice.prototype.setTotalgstamount = function(value) {
  jspb.Message.setProto3FloatField(this, 17, value);
};


/**
 * optional HotelPriceGst gst = 18;
 * @return {?proto.com.infinite.travllr.hotel.HotelPriceGst}
 */
proto.com.infinite.travllr.hotel.HotelPrice.prototype.getGst = function() {
  return /** @type{?proto.com.infinite.travllr.hotel.HotelPriceGst} */ (
    jspb.Message.getWrapperField(this, proto.com.infinite.travllr.hotel.HotelPriceGst, 18));
};


/** @param {?proto.com.infinite.travllr.hotel.HotelPriceGst|undefined} value */
proto.com.infinite.travllr.hotel.HotelPrice.prototype.setGst = function(value) {
  jspb.Message.setWrapperField(this, 18, value);
};


proto.com.infinite.travllr.hotel.HotelPrice.prototype.clearGst = function() {
  this.setGst(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.com.infinite.travllr.hotel.HotelPrice.prototype.hasGst = function() {
  return jspb.Message.getField(this, 18) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.infinite.travllr.hotel.HotelResult = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.infinite.travllr.hotel.HotelResult, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.com.infinite.travllr.hotel.HotelResult.displayName = 'proto.com.infinite.travllr.hotel.HotelResult';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.infinite.travllr.hotel.HotelResult.prototype.toObject = function(opt_includeInstance) {
  return proto.com.infinite.travllr.hotel.HotelResult.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.infinite.travllr.hotel.HotelResult} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.infinite.travllr.hotel.HotelResult.toObject = function(includeInstance, msg) {
  var f, obj = {
    hotelcode: jspb.Message.getFieldWithDefault(msg, 1, ""),
    hotelname: jspb.Message.getFieldWithDefault(msg, 2, ""),
    hotelcategory: jspb.Message.getFieldWithDefault(msg, 3, ""),
    starrating: jspb.Message.getFieldWithDefault(msg, 4, 0),
    hoteldescription: jspb.Message.getFieldWithDefault(msg, 5, ""),
    price: (f = msg.getPrice()) && proto.com.infinite.travllr.hotel.HotelPrice.toObject(includeInstance, f),
    hotelpicture: jspb.Message.getFieldWithDefault(msg, 7, ""),
    hoteladdress: jspb.Message.getFieldWithDefault(msg, 8, ""),
    hotelcontactno: jspb.Message.getFieldWithDefault(msg, 9, ""),
    latitude: jspb.Message.getFieldWithDefault(msg, 10, ""),
    longitude: jspb.Message.getFieldWithDefault(msg, 11, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.infinite.travllr.hotel.HotelResult}
 */
proto.com.infinite.travllr.hotel.HotelResult.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.infinite.travllr.hotel.HotelResult;
  return proto.com.infinite.travllr.hotel.HotelResult.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.infinite.travllr.hotel.HotelResult} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.infinite.travllr.hotel.HotelResult}
 */
proto.com.infinite.travllr.hotel.HotelResult.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setHotelcode(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setHotelname(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setHotelcategory(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setStarrating(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setHoteldescription(value);
      break;
    case 6:
      var value = new proto.com.infinite.travllr.hotel.HotelPrice;
      reader.readMessage(value,proto.com.infinite.travllr.hotel.HotelPrice.deserializeBinaryFromReader);
      msg.setPrice(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setHotelpicture(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setHoteladdress(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setHotelcontactno(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setLatitude(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setLongitude(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.infinite.travllr.hotel.HotelResult.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.infinite.travllr.hotel.HotelResult.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.infinite.travllr.hotel.HotelResult} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.infinite.travllr.hotel.HotelResult.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHotelcode();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getHotelname();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getHotelcategory();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getStarrating();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getHoteldescription();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getPrice();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.com.infinite.travllr.hotel.HotelPrice.serializeBinaryToWriter
    );
  }
  f = message.getHotelpicture();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getHoteladdress();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getHotelcontactno();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getLatitude();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getLongitude();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
};


/**
 * optional string hotelCode = 1;
 * @return {string}
 */
proto.com.infinite.travllr.hotel.HotelResult.prototype.getHotelcode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.com.infinite.travllr.hotel.HotelResult.prototype.setHotelcode = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string hotelName = 2;
 * @return {string}
 */
proto.com.infinite.travllr.hotel.HotelResult.prototype.getHotelname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.com.infinite.travllr.hotel.HotelResult.prototype.setHotelname = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string hotelCategory = 3;
 * @return {string}
 */
proto.com.infinite.travllr.hotel.HotelResult.prototype.getHotelcategory = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.com.infinite.travllr.hotel.HotelResult.prototype.setHotelcategory = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional int32 starRating = 4;
 * @return {number}
 */
proto.com.infinite.travllr.hotel.HotelResult.prototype.getStarrating = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {number} value */
proto.com.infinite.travllr.hotel.HotelResult.prototype.setStarrating = function(value) {
  jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional string hotelDescription = 5;
 * @return {string}
 */
proto.com.infinite.travllr.hotel.HotelResult.prototype.getHoteldescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/** @param {string} value */
proto.com.infinite.travllr.hotel.HotelResult.prototype.setHoteldescription = function(value) {
  jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional HotelPrice price = 6;
 * @return {?proto.com.infinite.travllr.hotel.HotelPrice}
 */
proto.com.infinite.travllr.hotel.HotelResult.prototype.getPrice = function() {
  return /** @type{?proto.com.infinite.travllr.hotel.HotelPrice} */ (
    jspb.Message.getWrapperField(this, proto.com.infinite.travllr.hotel.HotelPrice, 6));
};


/** @param {?proto.com.infinite.travllr.hotel.HotelPrice|undefined} value */
proto.com.infinite.travllr.hotel.HotelResult.prototype.setPrice = function(value) {
  jspb.Message.setWrapperField(this, 6, value);
};


proto.com.infinite.travllr.hotel.HotelResult.prototype.clearPrice = function() {
  this.setPrice(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.com.infinite.travllr.hotel.HotelResult.prototype.hasPrice = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional string hotelPicture = 7;
 * @return {string}
 */
proto.com.infinite.travllr.hotel.HotelResult.prototype.getHotelpicture = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/** @param {string} value */
proto.com.infinite.travllr.hotel.HotelResult.prototype.setHotelpicture = function(value) {
  jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string hotelAddress = 8;
 * @return {string}
 */
proto.com.infinite.travllr.hotel.HotelResult.prototype.getHoteladdress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/** @param {string} value */
proto.com.infinite.travllr.hotel.HotelResult.prototype.setHoteladdress = function(value) {
  jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string hotelContactNo = 9;
 * @return {string}
 */
proto.com.infinite.travllr.hotel.HotelResult.prototype.getHotelcontactno = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/** @param {string} value */
proto.com.infinite.travllr.hotel.HotelResult.prototype.setHotelcontactno = function(value) {
  jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional string latitude = 10;
 * @return {string}
 */
proto.com.infinite.travllr.hotel.HotelResult.prototype.getLatitude = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/** @param {string} value */
proto.com.infinite.travllr.hotel.HotelResult.prototype.setLatitude = function(value) {
  jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * optional string longitude = 11;
 * @return {string}
 */
proto.com.infinite.travllr.hotel.HotelResult.prototype.getLongitude = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/** @param {string} value */
proto.com.infinite.travllr.hotel.HotelResult.prototype.setLongitude = function(value) {
  jspb.Message.setProto3StringField(this, 11, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.infinite.travllr.hotel.HotelResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.com.infinite.travllr.hotel.HotelResponse.repeatedFields_, null);
};
goog.inherits(proto.com.infinite.travllr.hotel.HotelResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.com.infinite.travllr.hotel.HotelResponse.displayName = 'proto.com.infinite.travllr.hotel.HotelResponse';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.com.infinite.travllr.hotel.HotelResponse.repeatedFields_ = [7];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.infinite.travllr.hotel.HotelResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.com.infinite.travllr.hotel.HotelResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.infinite.travllr.hotel.HotelResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.infinite.travllr.hotel.HotelResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    traceid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    checkindate: jspb.Message.getFieldWithDefault(msg, 2, ""),
    checkoutdate: jspb.Message.getFieldWithDefault(msg, 3, ""),
    preferredcurrency: jspb.Message.getFieldWithDefault(msg, 4, ""),
    noofrooms: jspb.Message.getFieldWithDefault(msg, 5, 0),
    roomguests: (f = msg.getRoomguests()) && proto.com.infinite.travllr.hotel.RoomGuest.toObject(includeInstance, f),
    hotelresultsList: jspb.Message.toObjectList(msg.getHotelresultsList(),
    proto.com.infinite.travllr.hotel.HotelResult.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.infinite.travllr.hotel.HotelResponse}
 */
proto.com.infinite.travllr.hotel.HotelResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.infinite.travllr.hotel.HotelResponse;
  return proto.com.infinite.travllr.hotel.HotelResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.infinite.travllr.hotel.HotelResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.infinite.travllr.hotel.HotelResponse}
 */
proto.com.infinite.travllr.hotel.HotelResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setTraceid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCheckindate(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setCheckoutdate(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setPreferredcurrency(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setNoofrooms(value);
      break;
    case 6:
      var value = new proto.com.infinite.travllr.hotel.RoomGuest;
      reader.readMessage(value,proto.com.infinite.travllr.hotel.RoomGuest.deserializeBinaryFromReader);
      msg.setRoomguests(value);
      break;
    case 7:
      var value = new proto.com.infinite.travllr.hotel.HotelResult;
      reader.readMessage(value,proto.com.infinite.travllr.hotel.HotelResult.deserializeBinaryFromReader);
      msg.addHotelresults(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.infinite.travllr.hotel.HotelResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.infinite.travllr.hotel.HotelResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.infinite.travllr.hotel.HotelResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.infinite.travllr.hotel.HotelResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTraceid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getCheckindate();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getCheckoutdate();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getPreferredcurrency();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getNoofrooms();
  if (f !== 0) {
    writer.writeInt32(
      5,
      f
    );
  }
  f = message.getRoomguests();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.com.infinite.travllr.hotel.RoomGuest.serializeBinaryToWriter
    );
  }
  f = message.getHotelresultsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      7,
      f,
      proto.com.infinite.travllr.hotel.HotelResult.serializeBinaryToWriter
    );
  }
};


/**
 * optional string traceId = 1;
 * @return {string}
 */
proto.com.infinite.travllr.hotel.HotelResponse.prototype.getTraceid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.com.infinite.travllr.hotel.HotelResponse.prototype.setTraceid = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string checkInDate = 2;
 * @return {string}
 */
proto.com.infinite.travllr.hotel.HotelResponse.prototype.getCheckindate = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.com.infinite.travllr.hotel.HotelResponse.prototype.setCheckindate = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string checkOutDate = 3;
 * @return {string}
 */
proto.com.infinite.travllr.hotel.HotelResponse.prototype.getCheckoutdate = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.com.infinite.travllr.hotel.HotelResponse.prototype.setCheckoutdate = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string preferredCurrency = 4;
 * @return {string}
 */
proto.com.infinite.travllr.hotel.HotelResponse.prototype.getPreferredcurrency = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.com.infinite.travllr.hotel.HotelResponse.prototype.setPreferredcurrency = function(value) {
  jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional int32 noOfRooms = 5;
 * @return {number}
 */
proto.com.infinite.travllr.hotel.HotelResponse.prototype.getNoofrooms = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/** @param {number} value */
proto.com.infinite.travllr.hotel.HotelResponse.prototype.setNoofrooms = function(value) {
  jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional RoomGuest roomGuests = 6;
 * @return {?proto.com.infinite.travllr.hotel.RoomGuest}
 */
proto.com.infinite.travllr.hotel.HotelResponse.prototype.getRoomguests = function() {
  return /** @type{?proto.com.infinite.travllr.hotel.RoomGuest} */ (
    jspb.Message.getWrapperField(this, proto.com.infinite.travllr.hotel.RoomGuest, 6));
};


/** @param {?proto.com.infinite.travllr.hotel.RoomGuest|undefined} value */
proto.com.infinite.travllr.hotel.HotelResponse.prototype.setRoomguests = function(value) {
  jspb.Message.setWrapperField(this, 6, value);
};


proto.com.infinite.travllr.hotel.HotelResponse.prototype.clearRoomguests = function() {
  this.setRoomguests(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.com.infinite.travllr.hotel.HotelResponse.prototype.hasRoomguests = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * repeated HotelResult hotelResults = 7;
 * @return {!Array.<!proto.com.infinite.travllr.hotel.HotelResult>}
 */
proto.com.infinite.travllr.hotel.HotelResponse.prototype.getHotelresultsList = function() {
  return /** @type{!Array.<!proto.com.infinite.travllr.hotel.HotelResult>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.com.infinite.travllr.hotel.HotelResult, 7));
};


/** @param {!Array.<!proto.com.infinite.travllr.hotel.HotelResult>} value */
proto.com.infinite.travllr.hotel.HotelResponse.prototype.setHotelresultsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 7, value);
};


/**
 * @param {!proto.com.infinite.travllr.hotel.HotelResult=} opt_value
 * @param {number=} opt_index
 * @return {!proto.com.infinite.travllr.hotel.HotelResult}
 */
proto.com.infinite.travllr.hotel.HotelResponse.prototype.addHotelresults = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 7, opt_value, proto.com.infinite.travllr.hotel.HotelResult, opt_index);
};


proto.com.infinite.travllr.hotel.HotelResponse.prototype.clearHotelresultsList = function() {
  this.setHotelresultsList([]);
};


goog.object.extend(exports, proto.com.infinite.travllr.hotel);
