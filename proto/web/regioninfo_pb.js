/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

goog.exportSymbol('proto.com.infinite.travllr.AirportDetails', null, global);
goog.exportSymbol('proto.com.infinite.travllr.AirportInsertRequest', null, global);
goog.exportSymbol('proto.com.infinite.travllr.AirportInsertResponse', null, global);
goog.exportSymbol('proto.com.infinite.travllr.AirportLocationDetail', null, global);
goog.exportSymbol('proto.com.infinite.travllr.CityDetail', null, global);
goog.exportSymbol('proto.com.infinite.travllr.CityListRequest', null, global);
goog.exportSymbol('proto.com.infinite.travllr.CityListResponse', null, global);
goog.exportSymbol('proto.com.infinite.travllr.CityLocationDetail', null, global);
goog.exportSymbol('proto.com.infinite.travllr.CityRouteInfo', null, global);
goog.exportSymbol('proto.com.infinite.travllr.CityRouteInfo.TransferType', null, global);
goog.exportSymbol('proto.com.infinite.travllr.DurationInfo', null, global);
goog.exportSymbol('proto.com.infinite.travllr.DurationInfo.PackageSize', null, global);
goog.exportSymbol('proto.com.infinite.travllr.ItineraryRoutes', null, global);
goog.exportSymbol('proto.com.infinite.travllr.RegionDeleteRequest', null, global);
goog.exportSymbol('proto.com.infinite.travllr.RegionDeleteResponse', null, global);
goog.exportSymbol('proto.com.infinite.travllr.RegionInfoRequest', null, global);
goog.exportSymbol('proto.com.infinite.travllr.RegionInfoResponse', null, global);
goog.exportSymbol('proto.com.infinite.travllr.RegionInfoSaveRequest', null, global);
goog.exportSymbol('proto.com.infinite.travllr.RegionInfoSaveResponse', null, global);
goog.exportSymbol('proto.com.infinite.travllr.RegionInfoUpdateRequest', null, global);
goog.exportSymbol('proto.com.infinite.travllr.RegionInfoUpdateResponse', null, global);
goog.exportSymbol('proto.com.infinite.travllr.RegionListRequest', null, global);
goog.exportSymbol('proto.com.infinite.travllr.RegionListResponse', null, global);
goog.exportSymbol('proto.com.infinite.travllr.WeatherInfo', null, global);
goog.exportSymbol('proto.com.infinite.travllr.WeatherInfo.Season', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.infinite.travllr.RegionInfoRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.infinite.travllr.RegionInfoRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.com.infinite.travllr.RegionInfoRequest.displayName = 'proto.com.infinite.travllr.RegionInfoRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.infinite.travllr.RegionInfoRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.com.infinite.travllr.RegionInfoRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.infinite.travllr.RegionInfoRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.infinite.travllr.RegionInfoRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    countrycode: jspb.Message.getFieldWithDefault(msg, 1, ""),
    regionname: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.infinite.travllr.RegionInfoRequest}
 */
proto.com.infinite.travllr.RegionInfoRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.infinite.travllr.RegionInfoRequest;
  return proto.com.infinite.travllr.RegionInfoRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.infinite.travllr.RegionInfoRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.infinite.travllr.RegionInfoRequest}
 */
proto.com.infinite.travllr.RegionInfoRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCountrycode(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setRegionname(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.infinite.travllr.RegionInfoRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.infinite.travllr.RegionInfoRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.infinite.travllr.RegionInfoRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.infinite.travllr.RegionInfoRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCountrycode();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getRegionname();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string countryCode = 1;
 * @return {string}
 */
proto.com.infinite.travllr.RegionInfoRequest.prototype.getCountrycode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.com.infinite.travllr.RegionInfoRequest.prototype.setCountrycode = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string regionName = 2;
 * @return {string}
 */
proto.com.infinite.travllr.RegionInfoRequest.prototype.getRegionname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.com.infinite.travllr.RegionInfoRequest.prototype.setRegionname = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.infinite.travllr.RegionInfoUpdateRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.com.infinite.travllr.RegionInfoUpdateRequest.repeatedFields_, null);
};
goog.inherits(proto.com.infinite.travllr.RegionInfoUpdateRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.com.infinite.travllr.RegionInfoUpdateRequest.displayName = 'proto.com.infinite.travllr.RegionInfoUpdateRequest';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.com.infinite.travllr.RegionInfoUpdateRequest.repeatedFields_ = [2,4,5,6];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.infinite.travllr.RegionInfoUpdateRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.com.infinite.travllr.RegionInfoUpdateRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.infinite.travllr.RegionInfoUpdateRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.infinite.travllr.RegionInfoUpdateRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    countrycodeList: jspb.Message.getRepeatedField(msg, 2),
    regionname: jspb.Message.getFieldWithDefault(msg, 3, ""),
    countriesList: jspb.Message.getRepeatedField(msg, 4),
    weatherinfoList: jspb.Message.toObjectList(msg.getWeatherinfoList(),
    proto.com.infinite.travllr.WeatherInfo.toObject, includeInstance),
    itineraryroutesList: jspb.Message.toObjectList(msg.getItineraryroutesList(),
    proto.com.infinite.travllr.ItineraryRoutes.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.infinite.travllr.RegionInfoUpdateRequest}
 */
proto.com.infinite.travllr.RegionInfoUpdateRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.infinite.travllr.RegionInfoUpdateRequest;
  return proto.com.infinite.travllr.RegionInfoUpdateRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.infinite.travllr.RegionInfoUpdateRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.infinite.travllr.RegionInfoUpdateRequest}
 */
proto.com.infinite.travllr.RegionInfoUpdateRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.addCountrycode(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setRegionname(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.addCountries(value);
      break;
    case 5:
      var value = new proto.com.infinite.travllr.WeatherInfo;
      reader.readMessage(value,proto.com.infinite.travllr.WeatherInfo.deserializeBinaryFromReader);
      msg.addWeatherinfo(value);
      break;
    case 6:
      var value = new proto.com.infinite.travllr.ItineraryRoutes;
      reader.readMessage(value,proto.com.infinite.travllr.ItineraryRoutes.deserializeBinaryFromReader);
      msg.addItineraryroutes(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.infinite.travllr.RegionInfoUpdateRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.infinite.travllr.RegionInfoUpdateRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.infinite.travllr.RegionInfoUpdateRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.infinite.travllr.RegionInfoUpdateRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getCountrycodeList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      2,
      f
    );
  }
  f = message.getRegionname();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getCountriesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      4,
      f
    );
  }
  f = message.getWeatherinfoList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      5,
      f,
      proto.com.infinite.travllr.WeatherInfo.serializeBinaryToWriter
    );
  }
  f = message.getItineraryroutesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      6,
      f,
      proto.com.infinite.travllr.ItineraryRoutes.serializeBinaryToWriter
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.com.infinite.travllr.RegionInfoUpdateRequest.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.com.infinite.travllr.RegionInfoUpdateRequest.prototype.setId = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated string countryCode = 2;
 * @return {!Array.<string>}
 */
proto.com.infinite.travllr.RegionInfoUpdateRequest.prototype.getCountrycodeList = function() {
  return /** @type {!Array.<string>} */ (jspb.Message.getRepeatedField(this, 2));
};


/** @param {!Array.<string>} value */
proto.com.infinite.travllr.RegionInfoUpdateRequest.prototype.setCountrycodeList = function(value) {
  jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {!string} value
 * @param {number=} opt_index
 */
proto.com.infinite.travllr.RegionInfoUpdateRequest.prototype.addCountrycode = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


proto.com.infinite.travllr.RegionInfoUpdateRequest.prototype.clearCountrycodeList = function() {
  this.setCountrycodeList([]);
};


/**
 * optional string regionName = 3;
 * @return {string}
 */
proto.com.infinite.travllr.RegionInfoUpdateRequest.prototype.getRegionname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.com.infinite.travllr.RegionInfoUpdateRequest.prototype.setRegionname = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * repeated string countries = 4;
 * @return {!Array.<string>}
 */
proto.com.infinite.travllr.RegionInfoUpdateRequest.prototype.getCountriesList = function() {
  return /** @type {!Array.<string>} */ (jspb.Message.getRepeatedField(this, 4));
};


/** @param {!Array.<string>} value */
proto.com.infinite.travllr.RegionInfoUpdateRequest.prototype.setCountriesList = function(value) {
  jspb.Message.setField(this, 4, value || []);
};


/**
 * @param {!string} value
 * @param {number=} opt_index
 */
proto.com.infinite.travllr.RegionInfoUpdateRequest.prototype.addCountries = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 4, value, opt_index);
};


proto.com.infinite.travllr.RegionInfoUpdateRequest.prototype.clearCountriesList = function() {
  this.setCountriesList([]);
};


/**
 * repeated WeatherInfo weatherInfo = 5;
 * @return {!Array.<!proto.com.infinite.travllr.WeatherInfo>}
 */
proto.com.infinite.travllr.RegionInfoUpdateRequest.prototype.getWeatherinfoList = function() {
  return /** @type{!Array.<!proto.com.infinite.travllr.WeatherInfo>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.com.infinite.travllr.WeatherInfo, 5));
};


/** @param {!Array.<!proto.com.infinite.travllr.WeatherInfo>} value */
proto.com.infinite.travllr.RegionInfoUpdateRequest.prototype.setWeatherinfoList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 5, value);
};


/**
 * @param {!proto.com.infinite.travllr.WeatherInfo=} opt_value
 * @param {number=} opt_index
 * @return {!proto.com.infinite.travllr.WeatherInfo}
 */
proto.com.infinite.travllr.RegionInfoUpdateRequest.prototype.addWeatherinfo = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 5, opt_value, proto.com.infinite.travllr.WeatherInfo, opt_index);
};


proto.com.infinite.travllr.RegionInfoUpdateRequest.prototype.clearWeatherinfoList = function() {
  this.setWeatherinfoList([]);
};


/**
 * repeated ItineraryRoutes itineraryRoutes = 6;
 * @return {!Array.<!proto.com.infinite.travllr.ItineraryRoutes>}
 */
proto.com.infinite.travllr.RegionInfoUpdateRequest.prototype.getItineraryroutesList = function() {
  return /** @type{!Array.<!proto.com.infinite.travllr.ItineraryRoutes>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.com.infinite.travllr.ItineraryRoutes, 6));
};


/** @param {!Array.<!proto.com.infinite.travllr.ItineraryRoutes>} value */
proto.com.infinite.travllr.RegionInfoUpdateRequest.prototype.setItineraryroutesList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 6, value);
};


/**
 * @param {!proto.com.infinite.travllr.ItineraryRoutes=} opt_value
 * @param {number=} opt_index
 * @return {!proto.com.infinite.travllr.ItineraryRoutes}
 */
proto.com.infinite.travllr.RegionInfoUpdateRequest.prototype.addItineraryroutes = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 6, opt_value, proto.com.infinite.travllr.ItineraryRoutes, opt_index);
};


proto.com.infinite.travllr.RegionInfoUpdateRequest.prototype.clearItineraryroutesList = function() {
  this.setItineraryroutesList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.infinite.travllr.RegionInfoUpdateResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.infinite.travllr.RegionInfoUpdateResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.com.infinite.travllr.RegionInfoUpdateResponse.displayName = 'proto.com.infinite.travllr.RegionInfoUpdateResponse';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.infinite.travllr.RegionInfoUpdateResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.com.infinite.travllr.RegionInfoUpdateResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.infinite.travllr.RegionInfoUpdateResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.infinite.travllr.RegionInfoUpdateResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    status: jspb.Message.getFieldWithDefault(msg, 1, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.infinite.travllr.RegionInfoUpdateResponse}
 */
proto.com.infinite.travllr.RegionInfoUpdateResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.infinite.travllr.RegionInfoUpdateResponse;
  return proto.com.infinite.travllr.RegionInfoUpdateResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.infinite.travllr.RegionInfoUpdateResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.infinite.travllr.RegionInfoUpdateResponse}
 */
proto.com.infinite.travllr.RegionInfoUpdateResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.infinite.travllr.RegionInfoUpdateResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.infinite.travllr.RegionInfoUpdateResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.infinite.travllr.RegionInfoUpdateResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.infinite.travllr.RegionInfoUpdateResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatus();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
};


/**
 * optional bool status = 1;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.com.infinite.travllr.RegionInfoUpdateResponse.prototype.getStatus = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 1, false));
};


/** @param {boolean} value */
proto.com.infinite.travllr.RegionInfoUpdateResponse.prototype.setStatus = function(value) {
  jspb.Message.setProto3BooleanField(this, 1, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.infinite.travllr.CityRouteInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.infinite.travllr.CityRouteInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.com.infinite.travllr.CityRouteInfo.displayName = 'proto.com.infinite.travllr.CityRouteInfo';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.infinite.travllr.CityRouteInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.com.infinite.travllr.CityRouteInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.infinite.travllr.CityRouteInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.infinite.travllr.CityRouteInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    transferinfo: jspb.Message.getFieldWithDefault(msg, 1, 0),
    noofdays: jspb.Message.getFieldWithDefault(msg, 2, 0),
    city: (f = msg.getCity()) && proto.com.infinite.travllr.CityDetail.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.infinite.travllr.CityRouteInfo}
 */
proto.com.infinite.travllr.CityRouteInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.infinite.travllr.CityRouteInfo;
  return proto.com.infinite.travllr.CityRouteInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.infinite.travllr.CityRouteInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.infinite.travllr.CityRouteInfo}
 */
proto.com.infinite.travllr.CityRouteInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.com.infinite.travllr.CityRouteInfo.TransferType} */ (reader.readEnum());
      msg.setTransferinfo(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setNoofdays(value);
      break;
    case 3:
      var value = new proto.com.infinite.travllr.CityDetail;
      reader.readMessage(value,proto.com.infinite.travllr.CityDetail.deserializeBinaryFromReader);
      msg.setCity(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.infinite.travllr.CityRouteInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.infinite.travllr.CityRouteInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.infinite.travllr.CityRouteInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.infinite.travllr.CityRouteInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTransferinfo();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getNoofdays();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getCity();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.com.infinite.travllr.CityDetail.serializeBinaryToWriter
    );
  }
};


/**
 * @enum {number}
 */
proto.com.infinite.travllr.CityRouteInfo.TransferType = {
  FERRY: 0,
  FLY: 1,
  TRAIN: 2,
  CAB: 3
};

/**
 * optional TransferType transferInfo = 1;
 * @return {!proto.com.infinite.travllr.CityRouteInfo.TransferType}
 */
proto.com.infinite.travllr.CityRouteInfo.prototype.getTransferinfo = function() {
  return /** @type {!proto.com.infinite.travllr.CityRouteInfo.TransferType} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {!proto.com.infinite.travllr.CityRouteInfo.TransferType} value */
proto.com.infinite.travllr.CityRouteInfo.prototype.setTransferinfo = function(value) {
  jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional int32 noOfDays = 2;
 * @return {number}
 */
proto.com.infinite.travllr.CityRouteInfo.prototype.getNoofdays = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.com.infinite.travllr.CityRouteInfo.prototype.setNoofdays = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional CityDetail city = 3;
 * @return {?proto.com.infinite.travllr.CityDetail}
 */
proto.com.infinite.travllr.CityRouteInfo.prototype.getCity = function() {
  return /** @type{?proto.com.infinite.travllr.CityDetail} */ (
    jspb.Message.getWrapperField(this, proto.com.infinite.travllr.CityDetail, 3));
};


/** @param {?proto.com.infinite.travllr.CityDetail|undefined} value */
proto.com.infinite.travllr.CityRouteInfo.prototype.setCity = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.com.infinite.travllr.CityRouteInfo.prototype.clearCity = function() {
  this.setCity(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.com.infinite.travllr.CityRouteInfo.prototype.hasCity = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.infinite.travllr.ItineraryRoutes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.com.infinite.travllr.ItineraryRoutes.repeatedFields_, null);
};
goog.inherits(proto.com.infinite.travllr.ItineraryRoutes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.com.infinite.travllr.ItineraryRoutes.displayName = 'proto.com.infinite.travllr.ItineraryRoutes';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.com.infinite.travllr.ItineraryRoutes.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.infinite.travllr.ItineraryRoutes.prototype.toObject = function(opt_includeInstance) {
  return proto.com.infinite.travllr.ItineraryRoutes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.infinite.travllr.ItineraryRoutes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.infinite.travllr.ItineraryRoutes.toObject = function(includeInstance, msg) {
  var f, obj = {
    durationinfo: (f = msg.getDurationinfo()) && proto.com.infinite.travllr.DurationInfo.toObject(includeInstance, f),
    cityroutesList: jspb.Message.toObjectList(msg.getCityroutesList(),
    proto.com.infinite.travllr.CityRouteInfo.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.infinite.travllr.ItineraryRoutes}
 */
proto.com.infinite.travllr.ItineraryRoutes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.infinite.travllr.ItineraryRoutes;
  return proto.com.infinite.travllr.ItineraryRoutes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.infinite.travllr.ItineraryRoutes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.infinite.travllr.ItineraryRoutes}
 */
proto.com.infinite.travllr.ItineraryRoutes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.com.infinite.travllr.DurationInfo;
      reader.readMessage(value,proto.com.infinite.travllr.DurationInfo.deserializeBinaryFromReader);
      msg.setDurationinfo(value);
      break;
    case 2:
      var value = new proto.com.infinite.travllr.CityRouteInfo;
      reader.readMessage(value,proto.com.infinite.travllr.CityRouteInfo.deserializeBinaryFromReader);
      msg.addCityroutes(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.infinite.travllr.ItineraryRoutes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.infinite.travllr.ItineraryRoutes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.infinite.travllr.ItineraryRoutes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.infinite.travllr.ItineraryRoutes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDurationinfo();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.com.infinite.travllr.DurationInfo.serializeBinaryToWriter
    );
  }
  f = message.getCityroutesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.com.infinite.travllr.CityRouteInfo.serializeBinaryToWriter
    );
  }
};


/**
 * optional DurationInfo durationInfo = 1;
 * @return {?proto.com.infinite.travllr.DurationInfo}
 */
proto.com.infinite.travllr.ItineraryRoutes.prototype.getDurationinfo = function() {
  return /** @type{?proto.com.infinite.travllr.DurationInfo} */ (
    jspb.Message.getWrapperField(this, proto.com.infinite.travllr.DurationInfo, 1));
};


/** @param {?proto.com.infinite.travllr.DurationInfo|undefined} value */
proto.com.infinite.travllr.ItineraryRoutes.prototype.setDurationinfo = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.com.infinite.travllr.ItineraryRoutes.prototype.clearDurationinfo = function() {
  this.setDurationinfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.com.infinite.travllr.ItineraryRoutes.prototype.hasDurationinfo = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated CityRouteInfo cityRoutes = 2;
 * @return {!Array.<!proto.com.infinite.travllr.CityRouteInfo>}
 */
proto.com.infinite.travllr.ItineraryRoutes.prototype.getCityroutesList = function() {
  return /** @type{!Array.<!proto.com.infinite.travllr.CityRouteInfo>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.com.infinite.travllr.CityRouteInfo, 2));
};


/** @param {!Array.<!proto.com.infinite.travllr.CityRouteInfo>} value */
proto.com.infinite.travllr.ItineraryRoutes.prototype.setCityroutesList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.com.infinite.travllr.CityRouteInfo=} opt_value
 * @param {number=} opt_index
 * @return {!proto.com.infinite.travllr.CityRouteInfo}
 */
proto.com.infinite.travllr.ItineraryRoutes.prototype.addCityroutes = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.com.infinite.travllr.CityRouteInfo, opt_index);
};


proto.com.infinite.travllr.ItineraryRoutes.prototype.clearCityroutesList = function() {
  this.setCityroutesList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.infinite.travllr.RegionInfoSaveRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.com.infinite.travllr.RegionInfoSaveRequest.repeatedFields_, null);
};
goog.inherits(proto.com.infinite.travllr.RegionInfoSaveRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.com.infinite.travllr.RegionInfoSaveRequest.displayName = 'proto.com.infinite.travllr.RegionInfoSaveRequest';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.com.infinite.travllr.RegionInfoSaveRequest.repeatedFields_ = [1,3,4,5];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.infinite.travllr.RegionInfoSaveRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.com.infinite.travllr.RegionInfoSaveRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.infinite.travllr.RegionInfoSaveRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.infinite.travllr.RegionInfoSaveRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    countrycodeList: jspb.Message.getRepeatedField(msg, 1),
    regionname: jspb.Message.getFieldWithDefault(msg, 2, ""),
    countriesList: jspb.Message.getRepeatedField(msg, 3),
    weatherinfoList: jspb.Message.toObjectList(msg.getWeatherinfoList(),
    proto.com.infinite.travllr.WeatherInfo.toObject, includeInstance),
    itineraryroutesList: jspb.Message.toObjectList(msg.getItineraryroutesList(),
    proto.com.infinite.travllr.ItineraryRoutes.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.infinite.travllr.RegionInfoSaveRequest}
 */
proto.com.infinite.travllr.RegionInfoSaveRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.infinite.travllr.RegionInfoSaveRequest;
  return proto.com.infinite.travllr.RegionInfoSaveRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.infinite.travllr.RegionInfoSaveRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.infinite.travllr.RegionInfoSaveRequest}
 */
proto.com.infinite.travllr.RegionInfoSaveRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addCountrycode(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setRegionname(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.addCountries(value);
      break;
    case 4:
      var value = new proto.com.infinite.travllr.WeatherInfo;
      reader.readMessage(value,proto.com.infinite.travllr.WeatherInfo.deserializeBinaryFromReader);
      msg.addWeatherinfo(value);
      break;
    case 5:
      var value = new proto.com.infinite.travllr.ItineraryRoutes;
      reader.readMessage(value,proto.com.infinite.travllr.ItineraryRoutes.deserializeBinaryFromReader);
      msg.addItineraryroutes(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.infinite.travllr.RegionInfoSaveRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.infinite.travllr.RegionInfoSaveRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.infinite.travllr.RegionInfoSaveRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.infinite.travllr.RegionInfoSaveRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCountrycodeList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
  f = message.getRegionname();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getCountriesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      3,
      f
    );
  }
  f = message.getWeatherinfoList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      proto.com.infinite.travllr.WeatherInfo.serializeBinaryToWriter
    );
  }
  f = message.getItineraryroutesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      5,
      f,
      proto.com.infinite.travllr.ItineraryRoutes.serializeBinaryToWriter
    );
  }
};


/**
 * repeated string countryCode = 1;
 * @return {!Array.<string>}
 */
proto.com.infinite.travllr.RegionInfoSaveRequest.prototype.getCountrycodeList = function() {
  return /** @type {!Array.<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/** @param {!Array.<string>} value */
proto.com.infinite.travllr.RegionInfoSaveRequest.prototype.setCountrycodeList = function(value) {
  jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {!string} value
 * @param {number=} opt_index
 */
proto.com.infinite.travllr.RegionInfoSaveRequest.prototype.addCountrycode = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


proto.com.infinite.travllr.RegionInfoSaveRequest.prototype.clearCountrycodeList = function() {
  this.setCountrycodeList([]);
};


/**
 * optional string regionName = 2;
 * @return {string}
 */
proto.com.infinite.travllr.RegionInfoSaveRequest.prototype.getRegionname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.com.infinite.travllr.RegionInfoSaveRequest.prototype.setRegionname = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * repeated string countries = 3;
 * @return {!Array.<string>}
 */
proto.com.infinite.travllr.RegionInfoSaveRequest.prototype.getCountriesList = function() {
  return /** @type {!Array.<string>} */ (jspb.Message.getRepeatedField(this, 3));
};


/** @param {!Array.<string>} value */
proto.com.infinite.travllr.RegionInfoSaveRequest.prototype.setCountriesList = function(value) {
  jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {!string} value
 * @param {number=} opt_index
 */
proto.com.infinite.travllr.RegionInfoSaveRequest.prototype.addCountries = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


proto.com.infinite.travllr.RegionInfoSaveRequest.prototype.clearCountriesList = function() {
  this.setCountriesList([]);
};


/**
 * repeated WeatherInfo weatherInfo = 4;
 * @return {!Array.<!proto.com.infinite.travllr.WeatherInfo>}
 */
proto.com.infinite.travllr.RegionInfoSaveRequest.prototype.getWeatherinfoList = function() {
  return /** @type{!Array.<!proto.com.infinite.travllr.WeatherInfo>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.com.infinite.travllr.WeatherInfo, 4));
};


/** @param {!Array.<!proto.com.infinite.travllr.WeatherInfo>} value */
proto.com.infinite.travllr.RegionInfoSaveRequest.prototype.setWeatherinfoList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.com.infinite.travllr.WeatherInfo=} opt_value
 * @param {number=} opt_index
 * @return {!proto.com.infinite.travllr.WeatherInfo}
 */
proto.com.infinite.travllr.RegionInfoSaveRequest.prototype.addWeatherinfo = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.com.infinite.travllr.WeatherInfo, opt_index);
};


proto.com.infinite.travllr.RegionInfoSaveRequest.prototype.clearWeatherinfoList = function() {
  this.setWeatherinfoList([]);
};


/**
 * repeated ItineraryRoutes itineraryRoutes = 5;
 * @return {!Array.<!proto.com.infinite.travllr.ItineraryRoutes>}
 */
proto.com.infinite.travllr.RegionInfoSaveRequest.prototype.getItineraryroutesList = function() {
  return /** @type{!Array.<!proto.com.infinite.travllr.ItineraryRoutes>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.com.infinite.travllr.ItineraryRoutes, 5));
};


/** @param {!Array.<!proto.com.infinite.travllr.ItineraryRoutes>} value */
proto.com.infinite.travllr.RegionInfoSaveRequest.prototype.setItineraryroutesList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 5, value);
};


/**
 * @param {!proto.com.infinite.travllr.ItineraryRoutes=} opt_value
 * @param {number=} opt_index
 * @return {!proto.com.infinite.travllr.ItineraryRoutes}
 */
proto.com.infinite.travllr.RegionInfoSaveRequest.prototype.addItineraryroutes = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 5, opt_value, proto.com.infinite.travllr.ItineraryRoutes, opt_index);
};


proto.com.infinite.travllr.RegionInfoSaveRequest.prototype.clearItineraryroutesList = function() {
  this.setItineraryroutesList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.infinite.travllr.RegionInfoSaveResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.infinite.travllr.RegionInfoSaveResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.com.infinite.travllr.RegionInfoSaveResponse.displayName = 'proto.com.infinite.travllr.RegionInfoSaveResponse';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.infinite.travllr.RegionInfoSaveResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.com.infinite.travllr.RegionInfoSaveResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.infinite.travllr.RegionInfoSaveResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.infinite.travllr.RegionInfoSaveResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    status: jspb.Message.getFieldWithDefault(msg, 1, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.infinite.travllr.RegionInfoSaveResponse}
 */
proto.com.infinite.travllr.RegionInfoSaveResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.infinite.travllr.RegionInfoSaveResponse;
  return proto.com.infinite.travllr.RegionInfoSaveResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.infinite.travllr.RegionInfoSaveResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.infinite.travllr.RegionInfoSaveResponse}
 */
proto.com.infinite.travllr.RegionInfoSaveResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.infinite.travllr.RegionInfoSaveResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.infinite.travllr.RegionInfoSaveResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.infinite.travllr.RegionInfoSaveResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.infinite.travllr.RegionInfoSaveResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatus();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
};


/**
 * optional bool status = 1;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.com.infinite.travllr.RegionInfoSaveResponse.prototype.getStatus = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 1, false));
};


/** @param {boolean} value */
proto.com.infinite.travllr.RegionInfoSaveResponse.prototype.setStatus = function(value) {
  jspb.Message.setProto3BooleanField(this, 1, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.infinite.travllr.RegionInfoResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.com.infinite.travllr.RegionInfoResponse.repeatedFields_, null);
};
goog.inherits(proto.com.infinite.travllr.RegionInfoResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.com.infinite.travllr.RegionInfoResponse.displayName = 'proto.com.infinite.travllr.RegionInfoResponse';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.com.infinite.travllr.RegionInfoResponse.repeatedFields_ = [2,4,5];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.infinite.travllr.RegionInfoResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.com.infinite.travllr.RegionInfoResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.infinite.travllr.RegionInfoResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.infinite.travllr.RegionInfoResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    countrycodeList: jspb.Message.getRepeatedField(msg, 2),
    regionname: jspb.Message.getFieldWithDefault(msg, 3, ""),
    weatherinfoList: jspb.Message.toObjectList(msg.getWeatherinfoList(),
    proto.com.infinite.travllr.WeatherInfo.toObject, includeInstance),
    itineraryroutesList: jspb.Message.toObjectList(msg.getItineraryroutesList(),
    proto.com.infinite.travllr.ItineraryRoutes.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.infinite.travllr.RegionInfoResponse}
 */
proto.com.infinite.travllr.RegionInfoResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.infinite.travllr.RegionInfoResponse;
  return proto.com.infinite.travllr.RegionInfoResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.infinite.travllr.RegionInfoResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.infinite.travllr.RegionInfoResponse}
 */
proto.com.infinite.travllr.RegionInfoResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.addCountrycode(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setRegionname(value);
      break;
    case 4:
      var value = new proto.com.infinite.travllr.WeatherInfo;
      reader.readMessage(value,proto.com.infinite.travllr.WeatherInfo.deserializeBinaryFromReader);
      msg.addWeatherinfo(value);
      break;
    case 5:
      var value = new proto.com.infinite.travllr.ItineraryRoutes;
      reader.readMessage(value,proto.com.infinite.travllr.ItineraryRoutes.deserializeBinaryFromReader);
      msg.addItineraryroutes(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.infinite.travllr.RegionInfoResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.infinite.travllr.RegionInfoResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.infinite.travllr.RegionInfoResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.infinite.travllr.RegionInfoResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getCountrycodeList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      2,
      f
    );
  }
  f = message.getRegionname();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getWeatherinfoList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      proto.com.infinite.travllr.WeatherInfo.serializeBinaryToWriter
    );
  }
  f = message.getItineraryroutesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      5,
      f,
      proto.com.infinite.travllr.ItineraryRoutes.serializeBinaryToWriter
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.com.infinite.travllr.RegionInfoResponse.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.com.infinite.travllr.RegionInfoResponse.prototype.setId = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated string countryCode = 2;
 * @return {!Array.<string>}
 */
proto.com.infinite.travllr.RegionInfoResponse.prototype.getCountrycodeList = function() {
  return /** @type {!Array.<string>} */ (jspb.Message.getRepeatedField(this, 2));
};


/** @param {!Array.<string>} value */
proto.com.infinite.travllr.RegionInfoResponse.prototype.setCountrycodeList = function(value) {
  jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {!string} value
 * @param {number=} opt_index
 */
proto.com.infinite.travllr.RegionInfoResponse.prototype.addCountrycode = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


proto.com.infinite.travllr.RegionInfoResponse.prototype.clearCountrycodeList = function() {
  this.setCountrycodeList([]);
};


/**
 * optional string regionName = 3;
 * @return {string}
 */
proto.com.infinite.travllr.RegionInfoResponse.prototype.getRegionname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.com.infinite.travllr.RegionInfoResponse.prototype.setRegionname = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * repeated WeatherInfo weatherInfo = 4;
 * @return {!Array.<!proto.com.infinite.travllr.WeatherInfo>}
 */
proto.com.infinite.travllr.RegionInfoResponse.prototype.getWeatherinfoList = function() {
  return /** @type{!Array.<!proto.com.infinite.travllr.WeatherInfo>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.com.infinite.travllr.WeatherInfo, 4));
};


/** @param {!Array.<!proto.com.infinite.travllr.WeatherInfo>} value */
proto.com.infinite.travllr.RegionInfoResponse.prototype.setWeatherinfoList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.com.infinite.travllr.WeatherInfo=} opt_value
 * @param {number=} opt_index
 * @return {!proto.com.infinite.travllr.WeatherInfo}
 */
proto.com.infinite.travllr.RegionInfoResponse.prototype.addWeatherinfo = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.com.infinite.travllr.WeatherInfo, opt_index);
};


proto.com.infinite.travllr.RegionInfoResponse.prototype.clearWeatherinfoList = function() {
  this.setWeatherinfoList([]);
};


/**
 * repeated ItineraryRoutes itineraryRoutes = 5;
 * @return {!Array.<!proto.com.infinite.travllr.ItineraryRoutes>}
 */
proto.com.infinite.travllr.RegionInfoResponse.prototype.getItineraryroutesList = function() {
  return /** @type{!Array.<!proto.com.infinite.travllr.ItineraryRoutes>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.com.infinite.travllr.ItineraryRoutes, 5));
};


/** @param {!Array.<!proto.com.infinite.travllr.ItineraryRoutes>} value */
proto.com.infinite.travllr.RegionInfoResponse.prototype.setItineraryroutesList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 5, value);
};


/**
 * @param {!proto.com.infinite.travllr.ItineraryRoutes=} opt_value
 * @param {number=} opt_index
 * @return {!proto.com.infinite.travllr.ItineraryRoutes}
 */
proto.com.infinite.travllr.RegionInfoResponse.prototype.addItineraryroutes = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 5, opt_value, proto.com.infinite.travllr.ItineraryRoutes, opt_index);
};


proto.com.infinite.travllr.RegionInfoResponse.prototype.clearItineraryroutesList = function() {
  this.setItineraryroutesList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.infinite.travllr.WeatherInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.infinite.travllr.WeatherInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.com.infinite.travllr.WeatherInfo.displayName = 'proto.com.infinite.travllr.WeatherInfo';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.infinite.travllr.WeatherInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.com.infinite.travllr.WeatherInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.infinite.travllr.WeatherInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.infinite.travllr.WeatherInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    month: jspb.Message.getFieldWithDefault(msg, 1, ""),
    mintemp: +jspb.Message.getFieldWithDefault(msg, 2, 0.0),
    maxtemp: +jspb.Message.getFieldWithDefault(msg, 3, 0.0),
    season: jspb.Message.getFieldWithDefault(msg, 4, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.infinite.travllr.WeatherInfo}
 */
proto.com.infinite.travllr.WeatherInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.infinite.travllr.WeatherInfo;
  return proto.com.infinite.travllr.WeatherInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.infinite.travllr.WeatherInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.infinite.travllr.WeatherInfo}
 */
proto.com.infinite.travllr.WeatherInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setMonth(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setMintemp(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setMaxtemp(value);
      break;
    case 4:
      var value = /** @type {!proto.com.infinite.travllr.WeatherInfo.Season} */ (reader.readEnum());
      msg.setSeason(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.infinite.travllr.WeatherInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.infinite.travllr.WeatherInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.infinite.travllr.WeatherInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.infinite.travllr.WeatherInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMonth();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getMintemp();
  if (f !== 0.0) {
    writer.writeFloat(
      2,
      f
    );
  }
  f = message.getMaxtemp();
  if (f !== 0.0) {
    writer.writeFloat(
      3,
      f
    );
  }
  f = message.getSeason();
  if (f !== 0.0) {
    writer.writeEnum(
      4,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.com.infinite.travllr.WeatherInfo.Season = {
  OUR_PICK: 0,
  SECOND_BEST: 1,
  OFF_SEASON: 2,
  TOO_CROWDED: 3
};

/**
 * optional string month = 1;
 * @return {string}
 */
proto.com.infinite.travllr.WeatherInfo.prototype.getMonth = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.com.infinite.travllr.WeatherInfo.prototype.setMonth = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional float minTemp = 2;
 * @return {number}
 */
proto.com.infinite.travllr.WeatherInfo.prototype.getMintemp = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 2, 0.0));
};


/** @param {number} value */
proto.com.infinite.travllr.WeatherInfo.prototype.setMintemp = function(value) {
  jspb.Message.setProto3FloatField(this, 2, value);
};


/**
 * optional float maxTemp = 3;
 * @return {number}
 */
proto.com.infinite.travllr.WeatherInfo.prototype.getMaxtemp = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 3, 0.0));
};


/** @param {number} value */
proto.com.infinite.travllr.WeatherInfo.prototype.setMaxtemp = function(value) {
  jspb.Message.setProto3FloatField(this, 3, value);
};


/**
 * optional Season season = 4;
 * @return {!proto.com.infinite.travllr.WeatherInfo.Season}
 */
proto.com.infinite.travllr.WeatherInfo.prototype.getSeason = function() {
  return /** @type {!proto.com.infinite.travllr.WeatherInfo.Season} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {!proto.com.infinite.travllr.WeatherInfo.Season} value */
proto.com.infinite.travllr.WeatherInfo.prototype.setSeason = function(value) {
  jspb.Message.setProto3EnumField(this, 4, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.infinite.travllr.DurationInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.infinite.travllr.DurationInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.com.infinite.travllr.DurationInfo.displayName = 'proto.com.infinite.travllr.DurationInfo';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.infinite.travllr.DurationInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.com.infinite.travllr.DurationInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.infinite.travllr.DurationInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.infinite.travllr.DurationInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    popular: jspb.Message.getFieldWithDefault(msg, 1, false),
    minimumdays: jspb.Message.getFieldWithDefault(msg, 2, 0),
    maximumdays: jspb.Message.getFieldWithDefault(msg, 3, 0),
    recommended: jspb.Message.getFieldWithDefault(msg, 4, false),
    size: jspb.Message.getFieldWithDefault(msg, 5, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.infinite.travllr.DurationInfo}
 */
proto.com.infinite.travllr.DurationInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.infinite.travllr.DurationInfo;
  return proto.com.infinite.travllr.DurationInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.infinite.travllr.DurationInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.infinite.travllr.DurationInfo}
 */
proto.com.infinite.travllr.DurationInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setPopular(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setMinimumdays(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setMaximumdays(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setRecommended(value);
      break;
    case 5:
      var value = /** @type {!proto.com.infinite.travllr.DurationInfo.PackageSize} */ (reader.readEnum());
      msg.setSize(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.infinite.travllr.DurationInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.infinite.travllr.DurationInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.infinite.travllr.DurationInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.infinite.travllr.DurationInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPopular();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getMinimumdays();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getMaximumdays();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getRecommended();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
  f = message.getSize();
  if (f !== 0.0) {
    writer.writeEnum(
      5,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.com.infinite.travllr.DurationInfo.PackageSize = {
  SMALL: 0,
  MEDIUM: 1,
  LARGE: 2,
  EXTRA_LARGE: 3
};

/**
 * optional bool popular = 1;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.com.infinite.travllr.DurationInfo.prototype.getPopular = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 1, false));
};


/** @param {boolean} value */
proto.com.infinite.travllr.DurationInfo.prototype.setPopular = function(value) {
  jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional int32 minimumDays = 2;
 * @return {number}
 */
proto.com.infinite.travllr.DurationInfo.prototype.getMinimumdays = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.com.infinite.travllr.DurationInfo.prototype.setMinimumdays = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int32 maximumDays = 3;
 * @return {number}
 */
proto.com.infinite.travllr.DurationInfo.prototype.getMaximumdays = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.com.infinite.travllr.DurationInfo.prototype.setMaximumdays = function(value) {
  jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional bool recommended = 4;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.com.infinite.travllr.DurationInfo.prototype.getRecommended = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 4, false));
};


/** @param {boolean} value */
proto.com.infinite.travllr.DurationInfo.prototype.setRecommended = function(value) {
  jspb.Message.setProto3BooleanField(this, 4, value);
};


/**
 * optional PackageSize size = 5;
 * @return {!proto.com.infinite.travllr.DurationInfo.PackageSize}
 */
proto.com.infinite.travllr.DurationInfo.prototype.getSize = function() {
  return /** @type {!proto.com.infinite.travllr.DurationInfo.PackageSize} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/** @param {!proto.com.infinite.travllr.DurationInfo.PackageSize} value */
proto.com.infinite.travllr.DurationInfo.prototype.setSize = function(value) {
  jspb.Message.setProto3EnumField(this, 5, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.infinite.travllr.RegionListRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.com.infinite.travllr.RegionListRequest.repeatedFields_, null);
};
goog.inherits(proto.com.infinite.travllr.RegionListRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.com.infinite.travllr.RegionListRequest.displayName = 'proto.com.infinite.travllr.RegionListRequest';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.com.infinite.travllr.RegionListRequest.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.infinite.travllr.RegionListRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.com.infinite.travllr.RegionListRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.infinite.travllr.RegionListRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.infinite.travllr.RegionListRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    countrycodeList: jspb.Message.getRepeatedField(msg, 1)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.infinite.travllr.RegionListRequest}
 */
proto.com.infinite.travllr.RegionListRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.infinite.travllr.RegionListRequest;
  return proto.com.infinite.travllr.RegionListRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.infinite.travllr.RegionListRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.infinite.travllr.RegionListRequest}
 */
proto.com.infinite.travllr.RegionListRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addCountrycode(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.infinite.travllr.RegionListRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.infinite.travllr.RegionListRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.infinite.travllr.RegionListRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.infinite.travllr.RegionListRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCountrycodeList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
};


/**
 * repeated string countryCode = 1;
 * @return {!Array.<string>}
 */
proto.com.infinite.travllr.RegionListRequest.prototype.getCountrycodeList = function() {
  return /** @type {!Array.<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/** @param {!Array.<string>} value */
proto.com.infinite.travllr.RegionListRequest.prototype.setCountrycodeList = function(value) {
  jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {!string} value
 * @param {number=} opt_index
 */
proto.com.infinite.travllr.RegionListRequest.prototype.addCountrycode = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


proto.com.infinite.travllr.RegionListRequest.prototype.clearCountrycodeList = function() {
  this.setCountrycodeList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.infinite.travllr.RegionListResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.com.infinite.travllr.RegionListResponse.repeatedFields_, null);
};
goog.inherits(proto.com.infinite.travllr.RegionListResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.com.infinite.travllr.RegionListResponse.displayName = 'proto.com.infinite.travllr.RegionListResponse';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.com.infinite.travllr.RegionListResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.infinite.travllr.RegionListResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.com.infinite.travllr.RegionListResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.infinite.travllr.RegionListResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.infinite.travllr.RegionListResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    regionsList: jspb.Message.toObjectList(msg.getRegionsList(),
    proto.com.infinite.travllr.RegionInfoResponse.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.infinite.travllr.RegionListResponse}
 */
proto.com.infinite.travllr.RegionListResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.infinite.travllr.RegionListResponse;
  return proto.com.infinite.travllr.RegionListResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.infinite.travllr.RegionListResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.infinite.travllr.RegionListResponse}
 */
proto.com.infinite.travllr.RegionListResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.com.infinite.travllr.RegionInfoResponse;
      reader.readMessage(value,proto.com.infinite.travllr.RegionInfoResponse.deserializeBinaryFromReader);
      msg.addRegions(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.infinite.travllr.RegionListResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.infinite.travllr.RegionListResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.infinite.travllr.RegionListResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.infinite.travllr.RegionListResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRegionsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.com.infinite.travllr.RegionInfoResponse.serializeBinaryToWriter
    );
  }
};


/**
 * repeated RegionInfoResponse regions = 1;
 * @return {!Array.<!proto.com.infinite.travllr.RegionInfoResponse>}
 */
proto.com.infinite.travllr.RegionListResponse.prototype.getRegionsList = function() {
  return /** @type{!Array.<!proto.com.infinite.travllr.RegionInfoResponse>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.com.infinite.travllr.RegionInfoResponse, 1));
};


/** @param {!Array.<!proto.com.infinite.travllr.RegionInfoResponse>} value */
proto.com.infinite.travllr.RegionListResponse.prototype.setRegionsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.com.infinite.travllr.RegionInfoResponse=} opt_value
 * @param {number=} opt_index
 * @return {!proto.com.infinite.travllr.RegionInfoResponse}
 */
proto.com.infinite.travllr.RegionListResponse.prototype.addRegions = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.com.infinite.travllr.RegionInfoResponse, opt_index);
};


proto.com.infinite.travllr.RegionListResponse.prototype.clearRegionsList = function() {
  this.setRegionsList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.infinite.travllr.RegionDeleteRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.infinite.travllr.RegionDeleteRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.com.infinite.travllr.RegionDeleteRequest.displayName = 'proto.com.infinite.travllr.RegionDeleteRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.infinite.travllr.RegionDeleteRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.com.infinite.travllr.RegionDeleteRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.infinite.travllr.RegionDeleteRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.infinite.travllr.RegionDeleteRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.infinite.travllr.RegionDeleteRequest}
 */
proto.com.infinite.travllr.RegionDeleteRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.infinite.travllr.RegionDeleteRequest;
  return proto.com.infinite.travllr.RegionDeleteRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.infinite.travllr.RegionDeleteRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.infinite.travllr.RegionDeleteRequest}
 */
proto.com.infinite.travllr.RegionDeleteRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.infinite.travllr.RegionDeleteRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.infinite.travllr.RegionDeleteRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.infinite.travllr.RegionDeleteRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.infinite.travllr.RegionDeleteRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.com.infinite.travllr.RegionDeleteRequest.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.com.infinite.travllr.RegionDeleteRequest.prototype.setId = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.infinite.travllr.RegionDeleteResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.infinite.travllr.RegionDeleteResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.com.infinite.travllr.RegionDeleteResponse.displayName = 'proto.com.infinite.travllr.RegionDeleteResponse';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.infinite.travllr.RegionDeleteResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.com.infinite.travllr.RegionDeleteResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.infinite.travllr.RegionDeleteResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.infinite.travllr.RegionDeleteResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    response: jspb.Message.getFieldWithDefault(msg, 1, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.infinite.travllr.RegionDeleteResponse}
 */
proto.com.infinite.travllr.RegionDeleteResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.infinite.travllr.RegionDeleteResponse;
  return proto.com.infinite.travllr.RegionDeleteResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.infinite.travllr.RegionDeleteResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.infinite.travllr.RegionDeleteResponse}
 */
proto.com.infinite.travllr.RegionDeleteResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setResponse(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.infinite.travllr.RegionDeleteResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.infinite.travllr.RegionDeleteResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.infinite.travllr.RegionDeleteResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.infinite.travllr.RegionDeleteResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResponse();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
};


/**
 * optional bool response = 1;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.com.infinite.travllr.RegionDeleteResponse.prototype.getResponse = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 1, false));
};


/** @param {boolean} value */
proto.com.infinite.travllr.RegionDeleteResponse.prototype.setResponse = function(value) {
  jspb.Message.setProto3BooleanField(this, 1, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.infinite.travllr.CityListRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.com.infinite.travllr.CityListRequest.repeatedFields_, null);
};
goog.inherits(proto.com.infinite.travllr.CityListRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.com.infinite.travllr.CityListRequest.displayName = 'proto.com.infinite.travllr.CityListRequest';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.com.infinite.travllr.CityListRequest.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.infinite.travllr.CityListRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.com.infinite.travllr.CityListRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.infinite.travllr.CityListRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.infinite.travllr.CityListRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    countriesList: jspb.Message.getRepeatedField(msg, 1)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.infinite.travllr.CityListRequest}
 */
proto.com.infinite.travllr.CityListRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.infinite.travllr.CityListRequest;
  return proto.com.infinite.travllr.CityListRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.infinite.travllr.CityListRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.infinite.travllr.CityListRequest}
 */
proto.com.infinite.travllr.CityListRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addCountries(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.infinite.travllr.CityListRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.infinite.travllr.CityListRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.infinite.travllr.CityListRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.infinite.travllr.CityListRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCountriesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
};


/**
 * repeated string countries = 1;
 * @return {!Array.<string>}
 */
proto.com.infinite.travllr.CityListRequest.prototype.getCountriesList = function() {
  return /** @type {!Array.<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/** @param {!Array.<string>} value */
proto.com.infinite.travllr.CityListRequest.prototype.setCountriesList = function(value) {
  jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {!string} value
 * @param {number=} opt_index
 */
proto.com.infinite.travllr.CityListRequest.prototype.addCountries = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


proto.com.infinite.travllr.CityListRequest.prototype.clearCountriesList = function() {
  this.setCountriesList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.infinite.travllr.AirportDetails = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.infinite.travllr.AirportDetails, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.com.infinite.travllr.AirportDetails.displayName = 'proto.com.infinite.travllr.AirportDetails';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.infinite.travllr.AirportDetails.prototype.toObject = function(opt_includeInstance) {
  return proto.com.infinite.travllr.AirportDetails.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.infinite.travllr.AirportDetails} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.infinite.travllr.AirportDetails.toObject = function(includeInstance, msg) {
  var f, obj = {
    code: jspb.Message.getFieldWithDefault(msg, 1, ""),
    name: jspb.Message.getFieldWithDefault(msg, 2, ""),
    city: jspb.Message.getFieldWithDefault(msg, 3, ""),
    country: jspb.Message.getFieldWithDefault(msg, 4, ""),
    point: (f = msg.getPoint()) && proto.com.infinite.travllr.AirportLocationDetail.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.infinite.travllr.AirportDetails}
 */
proto.com.infinite.travllr.AirportDetails.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.infinite.travllr.AirportDetails;
  return proto.com.infinite.travllr.AirportDetails.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.infinite.travllr.AirportDetails} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.infinite.travllr.AirportDetails}
 */
proto.com.infinite.travllr.AirportDetails.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCode(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setCity(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setCountry(value);
      break;
    case 5:
      var value = new proto.com.infinite.travllr.AirportLocationDetail;
      reader.readMessage(value,proto.com.infinite.travllr.AirportLocationDetail.deserializeBinaryFromReader);
      msg.setPoint(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.infinite.travllr.AirportDetails.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.infinite.travllr.AirportDetails.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.infinite.travllr.AirportDetails} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.infinite.travllr.AirportDetails.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCode();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getCity();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getCountry();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getPoint();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.com.infinite.travllr.AirportLocationDetail.serializeBinaryToWriter
    );
  }
};


/**
 * optional string code = 1;
 * @return {string}
 */
proto.com.infinite.travllr.AirportDetails.prototype.getCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.com.infinite.travllr.AirportDetails.prototype.setCode = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.com.infinite.travllr.AirportDetails.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.com.infinite.travllr.AirportDetails.prototype.setName = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string city = 3;
 * @return {string}
 */
proto.com.infinite.travllr.AirportDetails.prototype.getCity = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.com.infinite.travllr.AirportDetails.prototype.setCity = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string country = 4;
 * @return {string}
 */
proto.com.infinite.travllr.AirportDetails.prototype.getCountry = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.com.infinite.travllr.AirportDetails.prototype.setCountry = function(value) {
  jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional AirportLocationDetail point = 5;
 * @return {?proto.com.infinite.travllr.AirportLocationDetail}
 */
proto.com.infinite.travllr.AirportDetails.prototype.getPoint = function() {
  return /** @type{?proto.com.infinite.travllr.AirportLocationDetail} */ (
    jspb.Message.getWrapperField(this, proto.com.infinite.travllr.AirportLocationDetail, 5));
};


/** @param {?proto.com.infinite.travllr.AirportLocationDetail|undefined} value */
proto.com.infinite.travllr.AirportDetails.prototype.setPoint = function(value) {
  jspb.Message.setWrapperField(this, 5, value);
};


proto.com.infinite.travllr.AirportDetails.prototype.clearPoint = function() {
  this.setPoint(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.com.infinite.travllr.AirportDetails.prototype.hasPoint = function() {
  return jspb.Message.getField(this, 5) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.infinite.travllr.AirportLocationDetail = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.com.infinite.travllr.AirportLocationDetail.repeatedFields_, null);
};
goog.inherits(proto.com.infinite.travllr.AirportLocationDetail, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.com.infinite.travllr.AirportLocationDetail.displayName = 'proto.com.infinite.travllr.AirportLocationDetail';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.com.infinite.travllr.AirportLocationDetail.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.infinite.travllr.AirportLocationDetail.prototype.toObject = function(opt_includeInstance) {
  return proto.com.infinite.travllr.AirportLocationDetail.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.infinite.travllr.AirportLocationDetail} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.infinite.travllr.AirportLocationDetail.toObject = function(includeInstance, msg) {
  var f, obj = {
    type: jspb.Message.getFieldWithDefault(msg, 1, ""),
    coordinatesList: jspb.Message.getRepeatedFloatingPointField(msg, 2)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.infinite.travllr.AirportLocationDetail}
 */
proto.com.infinite.travllr.AirportLocationDetail.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.infinite.travllr.AirportLocationDetail;
  return proto.com.infinite.travllr.AirportLocationDetail.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.infinite.travllr.AirportLocationDetail} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.infinite.travllr.AirportLocationDetail}
 */
proto.com.infinite.travllr.AirportLocationDetail.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setType(value);
      break;
    case 2:
      var value = /** @type {!Array.<number>} */ (reader.readPackedDouble());
      msg.setCoordinatesList(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.infinite.travllr.AirportLocationDetail.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.infinite.travllr.AirportLocationDetail.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.infinite.travllr.AirportLocationDetail} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.infinite.travllr.AirportLocationDetail.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getType();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getCoordinatesList();
  if (f.length > 0) {
    writer.writePackedDouble(
      2,
      f
    );
  }
};


/**
 * optional string type = 1;
 * @return {string}
 */
proto.com.infinite.travllr.AirportLocationDetail.prototype.getType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.com.infinite.travllr.AirportLocationDetail.prototype.setType = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated double coordinates = 2;
 * @return {!Array.<number>}
 */
proto.com.infinite.travllr.AirportLocationDetail.prototype.getCoordinatesList = function() {
  return /** @type {!Array.<number>} */ (jspb.Message.getRepeatedFloatingPointField(this, 2));
};


/** @param {!Array.<number>} value */
proto.com.infinite.travllr.AirportLocationDetail.prototype.setCoordinatesList = function(value) {
  jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {!number} value
 * @param {number=} opt_index
 */
proto.com.infinite.travllr.AirportLocationDetail.prototype.addCoordinates = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


proto.com.infinite.travllr.AirportLocationDetail.prototype.clearCoordinatesList = function() {
  this.setCoordinatesList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.infinite.travllr.AirportInsertRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.com.infinite.travllr.AirportInsertRequest.repeatedFields_, null);
};
goog.inherits(proto.com.infinite.travllr.AirportInsertRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.com.infinite.travllr.AirportInsertRequest.displayName = 'proto.com.infinite.travllr.AirportInsertRequest';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.com.infinite.travllr.AirportInsertRequest.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.infinite.travllr.AirportInsertRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.com.infinite.travllr.AirportInsertRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.infinite.travllr.AirportInsertRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.infinite.travllr.AirportInsertRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    countrycode: jspb.Message.getFieldWithDefault(msg, 1, ""),
    cityname: jspb.Message.getFieldWithDefault(msg, 2, ""),
    airportsList: jspb.Message.toObjectList(msg.getAirportsList(),
    proto.com.infinite.travllr.AirportDetails.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.infinite.travllr.AirportInsertRequest}
 */
proto.com.infinite.travllr.AirportInsertRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.infinite.travllr.AirportInsertRequest;
  return proto.com.infinite.travllr.AirportInsertRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.infinite.travllr.AirportInsertRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.infinite.travllr.AirportInsertRequest}
 */
proto.com.infinite.travllr.AirportInsertRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCountrycode(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCityname(value);
      break;
    case 3:
      var value = new proto.com.infinite.travllr.AirportDetails;
      reader.readMessage(value,proto.com.infinite.travllr.AirportDetails.deserializeBinaryFromReader);
      msg.addAirports(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.infinite.travllr.AirportInsertRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.infinite.travllr.AirportInsertRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.infinite.travllr.AirportInsertRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.infinite.travllr.AirportInsertRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCountrycode();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getCityname();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getAirportsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.com.infinite.travllr.AirportDetails.serializeBinaryToWriter
    );
  }
};


/**
 * optional string countryCode = 1;
 * @return {string}
 */
proto.com.infinite.travllr.AirportInsertRequest.prototype.getCountrycode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.com.infinite.travllr.AirportInsertRequest.prototype.setCountrycode = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string cityName = 2;
 * @return {string}
 */
proto.com.infinite.travllr.AirportInsertRequest.prototype.getCityname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.com.infinite.travllr.AirportInsertRequest.prototype.setCityname = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * repeated AirportDetails airports = 3;
 * @return {!Array.<!proto.com.infinite.travllr.AirportDetails>}
 */
proto.com.infinite.travllr.AirportInsertRequest.prototype.getAirportsList = function() {
  return /** @type{!Array.<!proto.com.infinite.travllr.AirportDetails>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.com.infinite.travllr.AirportDetails, 3));
};


/** @param {!Array.<!proto.com.infinite.travllr.AirportDetails>} value */
proto.com.infinite.travllr.AirportInsertRequest.prototype.setAirportsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.com.infinite.travllr.AirportDetails=} opt_value
 * @param {number=} opt_index
 * @return {!proto.com.infinite.travllr.AirportDetails}
 */
proto.com.infinite.travllr.AirportInsertRequest.prototype.addAirports = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.com.infinite.travllr.AirportDetails, opt_index);
};


proto.com.infinite.travllr.AirportInsertRequest.prototype.clearAirportsList = function() {
  this.setAirportsList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.infinite.travllr.AirportInsertResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.infinite.travllr.AirportInsertResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.com.infinite.travllr.AirportInsertResponse.displayName = 'proto.com.infinite.travllr.AirportInsertResponse';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.infinite.travllr.AirportInsertResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.com.infinite.travllr.AirportInsertResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.infinite.travllr.AirportInsertResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.infinite.travllr.AirportInsertResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    response: jspb.Message.getFieldWithDefault(msg, 1, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.infinite.travllr.AirportInsertResponse}
 */
proto.com.infinite.travllr.AirportInsertResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.infinite.travllr.AirportInsertResponse;
  return proto.com.infinite.travllr.AirportInsertResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.infinite.travllr.AirportInsertResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.infinite.travllr.AirportInsertResponse}
 */
proto.com.infinite.travllr.AirportInsertResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setResponse(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.infinite.travllr.AirportInsertResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.infinite.travllr.AirportInsertResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.infinite.travllr.AirportInsertResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.infinite.travllr.AirportInsertResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResponse();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
};


/**
 * optional bool response = 1;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.com.infinite.travllr.AirportInsertResponse.prototype.getResponse = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 1, false));
};


/** @param {boolean} value */
proto.com.infinite.travllr.AirportInsertResponse.prototype.setResponse = function(value) {
  jspb.Message.setProto3BooleanField(this, 1, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.infinite.travllr.CityLocationDetail = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.com.infinite.travllr.CityLocationDetail.repeatedFields_, null);
};
goog.inherits(proto.com.infinite.travllr.CityLocationDetail, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.com.infinite.travllr.CityLocationDetail.displayName = 'proto.com.infinite.travllr.CityLocationDetail';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.com.infinite.travllr.CityLocationDetail.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.infinite.travllr.CityLocationDetail.prototype.toObject = function(opt_includeInstance) {
  return proto.com.infinite.travllr.CityLocationDetail.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.infinite.travllr.CityLocationDetail} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.infinite.travllr.CityLocationDetail.toObject = function(includeInstance, msg) {
  var f, obj = {
    type: jspb.Message.getFieldWithDefault(msg, 1, ""),
    coordinatesList: jspb.Message.getRepeatedFloatingPointField(msg, 2)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.infinite.travllr.CityLocationDetail}
 */
proto.com.infinite.travllr.CityLocationDetail.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.infinite.travllr.CityLocationDetail;
  return proto.com.infinite.travllr.CityLocationDetail.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.infinite.travllr.CityLocationDetail} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.infinite.travllr.CityLocationDetail}
 */
proto.com.infinite.travllr.CityLocationDetail.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setType(value);
      break;
    case 2:
      var value = /** @type {!Array.<number>} */ (reader.readPackedDouble());
      msg.setCoordinatesList(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.infinite.travllr.CityLocationDetail.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.infinite.travllr.CityLocationDetail.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.infinite.travllr.CityLocationDetail} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.infinite.travllr.CityLocationDetail.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getType();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getCoordinatesList();
  if (f.length > 0) {
    writer.writePackedDouble(
      2,
      f
    );
  }
};


/**
 * optional string type = 1;
 * @return {string}
 */
proto.com.infinite.travllr.CityLocationDetail.prototype.getType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.com.infinite.travllr.CityLocationDetail.prototype.setType = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated double coordinates = 2;
 * @return {!Array.<number>}
 */
proto.com.infinite.travllr.CityLocationDetail.prototype.getCoordinatesList = function() {
  return /** @type {!Array.<number>} */ (jspb.Message.getRepeatedFloatingPointField(this, 2));
};


/** @param {!Array.<number>} value */
proto.com.infinite.travllr.CityLocationDetail.prototype.setCoordinatesList = function(value) {
  jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {!number} value
 * @param {number=} opt_index
 */
proto.com.infinite.travllr.CityLocationDetail.prototype.addCoordinates = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


proto.com.infinite.travllr.CityLocationDetail.prototype.clearCoordinatesList = function() {
  this.setCoordinatesList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.infinite.travllr.CityDetail = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.com.infinite.travllr.CityDetail.repeatedFields_, null);
};
goog.inherits(proto.com.infinite.travllr.CityDetail, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.com.infinite.travllr.CityDetail.displayName = 'proto.com.infinite.travllr.CityDetail';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.com.infinite.travllr.CityDetail.repeatedFields_ = [4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.infinite.travllr.CityDetail.prototype.toObject = function(opt_includeInstance) {
  return proto.com.infinite.travllr.CityDetail.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.infinite.travllr.CityDetail} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.infinite.travllr.CityDetail.toObject = function(includeInstance, msg) {
  var f, obj = {
    country: jspb.Message.getFieldWithDefault(msg, 1, ""),
    name: jspb.Message.getFieldWithDefault(msg, 2, ""),
    point: (f = msg.getPoint()) && proto.com.infinite.travllr.CityLocationDetail.toObject(includeInstance, f),
    airportsList: jspb.Message.toObjectList(msg.getAirportsList(),
    proto.com.infinite.travllr.AirportDetails.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.infinite.travllr.CityDetail}
 */
proto.com.infinite.travllr.CityDetail.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.infinite.travllr.CityDetail;
  return proto.com.infinite.travllr.CityDetail.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.infinite.travllr.CityDetail} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.infinite.travllr.CityDetail}
 */
proto.com.infinite.travllr.CityDetail.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCountry(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = new proto.com.infinite.travllr.CityLocationDetail;
      reader.readMessage(value,proto.com.infinite.travllr.CityLocationDetail.deserializeBinaryFromReader);
      msg.setPoint(value);
      break;
    case 4:
      var value = new proto.com.infinite.travllr.AirportDetails;
      reader.readMessage(value,proto.com.infinite.travllr.AirportDetails.deserializeBinaryFromReader);
      msg.addAirports(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.infinite.travllr.CityDetail.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.infinite.travllr.CityDetail.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.infinite.travllr.CityDetail} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.infinite.travllr.CityDetail.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCountry();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getPoint();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.com.infinite.travllr.CityLocationDetail.serializeBinaryToWriter
    );
  }
  f = message.getAirportsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      proto.com.infinite.travllr.AirportDetails.serializeBinaryToWriter
    );
  }
};


/**
 * optional string country = 1;
 * @return {string}
 */
proto.com.infinite.travllr.CityDetail.prototype.getCountry = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.com.infinite.travllr.CityDetail.prototype.setCountry = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.com.infinite.travllr.CityDetail.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.com.infinite.travllr.CityDetail.prototype.setName = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional CityLocationDetail point = 3;
 * @return {?proto.com.infinite.travllr.CityLocationDetail}
 */
proto.com.infinite.travllr.CityDetail.prototype.getPoint = function() {
  return /** @type{?proto.com.infinite.travllr.CityLocationDetail} */ (
    jspb.Message.getWrapperField(this, proto.com.infinite.travllr.CityLocationDetail, 3));
};


/** @param {?proto.com.infinite.travllr.CityLocationDetail|undefined} value */
proto.com.infinite.travllr.CityDetail.prototype.setPoint = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.com.infinite.travllr.CityDetail.prototype.clearPoint = function() {
  this.setPoint(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.com.infinite.travllr.CityDetail.prototype.hasPoint = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * repeated AirportDetails airports = 4;
 * @return {!Array.<!proto.com.infinite.travllr.AirportDetails>}
 */
proto.com.infinite.travllr.CityDetail.prototype.getAirportsList = function() {
  return /** @type{!Array.<!proto.com.infinite.travllr.AirportDetails>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.com.infinite.travllr.AirportDetails, 4));
};


/** @param {!Array.<!proto.com.infinite.travllr.AirportDetails>} value */
proto.com.infinite.travllr.CityDetail.prototype.setAirportsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.com.infinite.travllr.AirportDetails=} opt_value
 * @param {number=} opt_index
 * @return {!proto.com.infinite.travllr.AirportDetails}
 */
proto.com.infinite.travllr.CityDetail.prototype.addAirports = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.com.infinite.travllr.AirportDetails, opt_index);
};


proto.com.infinite.travllr.CityDetail.prototype.clearAirportsList = function() {
  this.setAirportsList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.infinite.travllr.CityListResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.com.infinite.travllr.CityListResponse.repeatedFields_, null);
};
goog.inherits(proto.com.infinite.travllr.CityListResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.com.infinite.travllr.CityListResponse.displayName = 'proto.com.infinite.travllr.CityListResponse';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.com.infinite.travllr.CityListResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.infinite.travllr.CityListResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.com.infinite.travllr.CityListResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.infinite.travllr.CityListResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.infinite.travllr.CityListResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    citiesList: jspb.Message.toObjectList(msg.getCitiesList(),
    proto.com.infinite.travllr.CityDetail.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.infinite.travllr.CityListResponse}
 */
proto.com.infinite.travllr.CityListResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.infinite.travllr.CityListResponse;
  return proto.com.infinite.travllr.CityListResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.infinite.travllr.CityListResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.infinite.travllr.CityListResponse}
 */
proto.com.infinite.travllr.CityListResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.com.infinite.travllr.CityDetail;
      reader.readMessage(value,proto.com.infinite.travllr.CityDetail.deserializeBinaryFromReader);
      msg.addCities(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.infinite.travllr.CityListResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.infinite.travllr.CityListResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.infinite.travllr.CityListResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.infinite.travllr.CityListResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCitiesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.com.infinite.travllr.CityDetail.serializeBinaryToWriter
    );
  }
};


/**
 * repeated CityDetail cities = 1;
 * @return {!Array.<!proto.com.infinite.travllr.CityDetail>}
 */
proto.com.infinite.travllr.CityListResponse.prototype.getCitiesList = function() {
  return /** @type{!Array.<!proto.com.infinite.travllr.CityDetail>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.com.infinite.travllr.CityDetail, 1));
};


/** @param {!Array.<!proto.com.infinite.travllr.CityDetail>} value */
proto.com.infinite.travllr.CityListResponse.prototype.setCitiesList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.com.infinite.travllr.CityDetail=} opt_value
 * @param {number=} opt_index
 * @return {!proto.com.infinite.travllr.CityDetail}
 */
proto.com.infinite.travllr.CityListResponse.prototype.addCities = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.com.infinite.travllr.CityDetail, opt_index);
};


proto.com.infinite.travllr.CityListResponse.prototype.clearCitiesList = function() {
  this.setCitiesList([]);
};


goog.object.extend(exports, proto.com.infinite.travllr);
