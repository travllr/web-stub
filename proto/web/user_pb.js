/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var itinerary_pb = require('./itinerary_pb.js');
var regioninfo_pb = require('./regioninfo_pb.js');
var common_pb = require('./common_pb.js');
goog.exportSymbol('proto.com.infinite.travllr.ItineraryDetails', null, global);
goog.exportSymbol('proto.com.infinite.travllr.ItineraryStatus', null, global);
goog.exportSymbol('proto.com.infinite.travllr.UserContact', null, global);
goog.exportSymbol('proto.com.infinite.travllr.UserDetail', null, global);
goog.exportSymbol('proto.com.infinite.travllr.UserDetailInfo', null, global);
goog.exportSymbol('proto.com.infinite.travllr.UserDetailRequest', null, global);
goog.exportSymbol('proto.com.infinite.travllr.UserDetailResponse', null, global);
goog.exportSymbol('proto.com.infinite.travllr.UserItinerary', null, global);
goog.exportSymbol('proto.com.infinite.travllr.UserList', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.infinite.travllr.UserDetail = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.infinite.travllr.UserDetail, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.com.infinite.travllr.UserDetail.displayName = 'proto.com.infinite.travllr.UserDetail';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.infinite.travllr.UserDetail.prototype.toObject = function(opt_includeInstance) {
  return proto.com.infinite.travllr.UserDetail.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.infinite.travllr.UserDetail} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.infinite.travllr.UserDetail.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 2, ""),
    email: jspb.Message.getFieldWithDefault(msg, 3, ""),
    mobile: jspb.Message.getFieldWithDefault(msg, 4, ""),
    password: jspb.Message.getFieldWithDefault(msg, 5, ""),
    addressline1: jspb.Message.getFieldWithDefault(msg, 6, ""),
    addressline2: jspb.Message.getFieldWithDefault(msg, 7, ""),
    addressline3: jspb.Message.getFieldWithDefault(msg, 8, ""),
    state: jspb.Message.getFieldWithDefault(msg, 9, ""),
    pincode: jspb.Message.getFieldWithDefault(msg, 10, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.infinite.travllr.UserDetail}
 */
proto.com.infinite.travllr.UserDetail.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.infinite.travllr.UserDetail;
  return proto.com.infinite.travllr.UserDetail.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.infinite.travllr.UserDetail} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.infinite.travllr.UserDetail}
 */
proto.com.infinite.travllr.UserDetail.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setEmail(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setMobile(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setPassword(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setAddressline1(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setAddressline2(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setAddressline3(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setState(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setPincode(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.infinite.travllr.UserDetail.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.infinite.travllr.UserDetail.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.infinite.travllr.UserDetail} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.infinite.travllr.UserDetail.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getEmail();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getMobile();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getPassword();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getAddressline1();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getAddressline2();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getAddressline3();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getState();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getPincode();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.com.infinite.travllr.UserDetail.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.com.infinite.travllr.UserDetail.prototype.setName = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string email = 3;
 * @return {string}
 */
proto.com.infinite.travllr.UserDetail.prototype.getEmail = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.com.infinite.travllr.UserDetail.prototype.setEmail = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string mobile = 4;
 * @return {string}
 */
proto.com.infinite.travllr.UserDetail.prototype.getMobile = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.com.infinite.travllr.UserDetail.prototype.setMobile = function(value) {
  jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string password = 5;
 * @return {string}
 */
proto.com.infinite.travllr.UserDetail.prototype.getPassword = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/** @param {string} value */
proto.com.infinite.travllr.UserDetail.prototype.setPassword = function(value) {
  jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string addressLine1 = 6;
 * @return {string}
 */
proto.com.infinite.travllr.UserDetail.prototype.getAddressline1 = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/** @param {string} value */
proto.com.infinite.travllr.UserDetail.prototype.setAddressline1 = function(value) {
  jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string addressLine2 = 7;
 * @return {string}
 */
proto.com.infinite.travllr.UserDetail.prototype.getAddressline2 = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/** @param {string} value */
proto.com.infinite.travllr.UserDetail.prototype.setAddressline2 = function(value) {
  jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string addressLine3 = 8;
 * @return {string}
 */
proto.com.infinite.travllr.UserDetail.prototype.getAddressline3 = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/** @param {string} value */
proto.com.infinite.travllr.UserDetail.prototype.setAddressline3 = function(value) {
  jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string state = 9;
 * @return {string}
 */
proto.com.infinite.travllr.UserDetail.prototype.getState = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/** @param {string} value */
proto.com.infinite.travllr.UserDetail.prototype.setState = function(value) {
  jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional string pinCode = 10;
 * @return {string}
 */
proto.com.infinite.travllr.UserDetail.prototype.getPincode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/** @param {string} value */
proto.com.infinite.travllr.UserDetail.prototype.setPincode = function(value) {
  jspb.Message.setProto3StringField(this, 10, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.infinite.travllr.UserContact = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.infinite.travllr.UserContact, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.com.infinite.travllr.UserContact.displayName = 'proto.com.infinite.travllr.UserContact';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.infinite.travllr.UserContact.prototype.toObject = function(opt_includeInstance) {
  return proto.com.infinite.travllr.UserContact.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.infinite.travllr.UserContact} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.infinite.travllr.UserContact.toObject = function(includeInstance, msg) {
  var f, obj = {
    salutation: jspb.Message.getFieldWithDefault(msg, 1, ""),
    surname: jspb.Message.getFieldWithDefault(msg, 2, ""),
    givenname: jspb.Message.getFieldWithDefault(msg, 3, ""),
    passportnumber: jspb.Message.getFieldWithDefault(msg, 4, ""),
    dateofbirth: jspb.Message.getFieldWithDefault(msg, 5, ""),
    passportexpirydate: jspb.Message.getFieldWithDefault(msg, 6, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.infinite.travllr.UserContact}
 */
proto.com.infinite.travllr.UserContact.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.infinite.travllr.UserContact;
  return proto.com.infinite.travllr.UserContact.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.infinite.travllr.UserContact} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.infinite.travllr.UserContact}
 */
proto.com.infinite.travllr.UserContact.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSalutation(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSurname(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setGivenname(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setPassportnumber(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setDateofbirth(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setPassportexpirydate(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.infinite.travllr.UserContact.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.infinite.travllr.UserContact.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.infinite.travllr.UserContact} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.infinite.travllr.UserContact.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSalutation();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSurname();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getGivenname();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getPassportnumber();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getDateofbirth();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getPassportexpirydate();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
};


/**
 * optional string salutation = 1;
 * @return {string}
 */
proto.com.infinite.travllr.UserContact.prototype.getSalutation = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.com.infinite.travllr.UserContact.prototype.setSalutation = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string surName = 2;
 * @return {string}
 */
proto.com.infinite.travllr.UserContact.prototype.getSurname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.com.infinite.travllr.UserContact.prototype.setSurname = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string givenName = 3;
 * @return {string}
 */
proto.com.infinite.travllr.UserContact.prototype.getGivenname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.com.infinite.travllr.UserContact.prototype.setGivenname = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string passportNumber = 4;
 * @return {string}
 */
proto.com.infinite.travllr.UserContact.prototype.getPassportnumber = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.com.infinite.travllr.UserContact.prototype.setPassportnumber = function(value) {
  jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string dateOfBirth = 5;
 * @return {string}
 */
proto.com.infinite.travllr.UserContact.prototype.getDateofbirth = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/** @param {string} value */
proto.com.infinite.travllr.UserContact.prototype.setDateofbirth = function(value) {
  jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string passportExpiryDate = 6;
 * @return {string}
 */
proto.com.infinite.travllr.UserContact.prototype.getPassportexpirydate = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/** @param {string} value */
proto.com.infinite.travllr.UserContact.prototype.setPassportexpirydate = function(value) {
  jspb.Message.setProto3StringField(this, 6, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.infinite.travllr.ItineraryDetails = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.com.infinite.travllr.ItineraryDetails.repeatedFields_, null);
};
goog.inherits(proto.com.infinite.travllr.ItineraryDetails, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.com.infinite.travllr.ItineraryDetails.displayName = 'proto.com.infinite.travllr.ItineraryDetails';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.com.infinite.travllr.ItineraryDetails.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.infinite.travllr.ItineraryDetails.prototype.toObject = function(opt_includeInstance) {
  return proto.com.infinite.travllr.ItineraryDetails.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.infinite.travllr.ItineraryDetails} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.infinite.travllr.ItineraryDetails.toObject = function(includeInstance, msg) {
  var f, obj = {
    route: (f = msg.getRoute()) && regioninfo_pb.CityRouteInfo.toObject(includeInstance, f),
    dayplanList: jspb.Message.toObjectList(msg.getDayplanList(),
    itinerary_pb.DayPlan.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.infinite.travllr.ItineraryDetails}
 */
proto.com.infinite.travllr.ItineraryDetails.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.infinite.travllr.ItineraryDetails;
  return proto.com.infinite.travllr.ItineraryDetails.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.infinite.travllr.ItineraryDetails} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.infinite.travllr.ItineraryDetails}
 */
proto.com.infinite.travllr.ItineraryDetails.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new regioninfo_pb.CityRouteInfo;
      reader.readMessage(value,regioninfo_pb.CityRouteInfo.deserializeBinaryFromReader);
      msg.setRoute(value);
      break;
    case 2:
      var value = new itinerary_pb.DayPlan;
      reader.readMessage(value,itinerary_pb.DayPlan.deserializeBinaryFromReader);
      msg.addDayplan(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.infinite.travllr.ItineraryDetails.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.infinite.travllr.ItineraryDetails.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.infinite.travllr.ItineraryDetails} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.infinite.travllr.ItineraryDetails.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRoute();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      regioninfo_pb.CityRouteInfo.serializeBinaryToWriter
    );
  }
  f = message.getDayplanList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      itinerary_pb.DayPlan.serializeBinaryToWriter
    );
  }
};


/**
 * optional CityRouteInfo route = 1;
 * @return {?proto.com.infinite.travllr.CityRouteInfo}
 */
proto.com.infinite.travllr.ItineraryDetails.prototype.getRoute = function() {
  return /** @type{?proto.com.infinite.travllr.CityRouteInfo} */ (
    jspb.Message.getWrapperField(this, regioninfo_pb.CityRouteInfo, 1));
};


/** @param {?proto.com.infinite.travllr.CityRouteInfo|undefined} value */
proto.com.infinite.travllr.ItineraryDetails.prototype.setRoute = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.com.infinite.travllr.ItineraryDetails.prototype.clearRoute = function() {
  this.setRoute(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.com.infinite.travllr.ItineraryDetails.prototype.hasRoute = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated DayPlan dayPlan = 2;
 * @return {!Array.<!proto.com.infinite.travllr.DayPlan>}
 */
proto.com.infinite.travllr.ItineraryDetails.prototype.getDayplanList = function() {
  return /** @type{!Array.<!proto.com.infinite.travllr.DayPlan>} */ (
    jspb.Message.getRepeatedWrapperField(this, itinerary_pb.DayPlan, 2));
};


/** @param {!Array.<!proto.com.infinite.travllr.DayPlan>} value */
proto.com.infinite.travllr.ItineraryDetails.prototype.setDayplanList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.com.infinite.travllr.DayPlan=} opt_value
 * @param {number=} opt_index
 * @return {!proto.com.infinite.travllr.DayPlan}
 */
proto.com.infinite.travllr.ItineraryDetails.prototype.addDayplan = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.com.infinite.travllr.DayPlan, opt_index);
};


proto.com.infinite.travllr.ItineraryDetails.prototype.clearDayplanList = function() {
  this.setDayplanList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.infinite.travllr.UserItinerary = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.com.infinite.travllr.UserItinerary.repeatedFields_, null);
};
goog.inherits(proto.com.infinite.travllr.UserItinerary, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.com.infinite.travllr.UserItinerary.displayName = 'proto.com.infinite.travllr.UserItinerary';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.com.infinite.travllr.UserItinerary.repeatedFields_ = [11,12];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.infinite.travllr.UserItinerary.prototype.toObject = function(opt_includeInstance) {
  return proto.com.infinite.travllr.UserItinerary.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.infinite.travllr.UserItinerary} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.infinite.travllr.UserItinerary.toObject = function(includeInstance, msg) {
  var f, obj = {
    title: jspb.Message.getFieldWithDefault(msg, 1, ""),
    createat: jspb.Message.getFieldWithDefault(msg, 2, ""),
    updatedat: jspb.Message.getFieldWithDefault(msg, 3, ""),
    status: jspb.Message.getFieldWithDefault(msg, 4, 0),
    departdate: jspb.Message.getFieldWithDefault(msg, 5, ""),
    arrivaldate: jspb.Message.getFieldWithDefault(msg, 6, ""),
    duration: jspb.Message.getFieldWithDefault(msg, 7, 0),
    departfrom: jspb.Message.getFieldWithDefault(msg, 8, ""),
    noofadults: jspb.Message.getFieldWithDefault(msg, 9, 0),
    noofchild: jspb.Message.getFieldWithDefault(msg, 10, 0),
    childagesList: jspb.Message.getRepeatedField(msg, 11),
    itineraryList: jspb.Message.toObjectList(msg.getItineraryList(),
    proto.com.infinite.travllr.ItineraryDetails.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.infinite.travllr.UserItinerary}
 */
proto.com.infinite.travllr.UserItinerary.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.infinite.travllr.UserItinerary;
  return proto.com.infinite.travllr.UserItinerary.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.infinite.travllr.UserItinerary} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.infinite.travllr.UserItinerary}
 */
proto.com.infinite.travllr.UserItinerary.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCreateat(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setUpdatedat(value);
      break;
    case 4:
      var value = /** @type {!proto.com.infinite.travllr.ItineraryStatus} */ (reader.readEnum());
      msg.setStatus(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setDepartdate(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setArrivaldate(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setDuration(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setDepartfrom(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setNoofadults(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setNoofchild(value);
      break;
    case 11:
      var value = /** @type {!Array.<number>} */ (reader.readPackedInt32());
      msg.setChildagesList(value);
      break;
    case 12:
      var value = new proto.com.infinite.travllr.ItineraryDetails;
      reader.readMessage(value,proto.com.infinite.travllr.ItineraryDetails.deserializeBinaryFromReader);
      msg.addItinerary(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.infinite.travllr.UserItinerary.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.infinite.travllr.UserItinerary.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.infinite.travllr.UserItinerary} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.infinite.travllr.UserItinerary.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getCreateat();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getUpdatedat();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      4,
      f
    );
  }
  f = message.getDepartdate();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getArrivaldate();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getDuration();
  if (f !== 0) {
    writer.writeInt32(
      7,
      f
    );
  }
  f = message.getDepartfrom();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getNoofadults();
  if (f !== 0) {
    writer.writeInt32(
      9,
      f
    );
  }
  f = message.getNoofchild();
  if (f !== 0) {
    writer.writeInt32(
      10,
      f
    );
  }
  f = message.getChildagesList();
  if (f.length > 0) {
    writer.writePackedInt32(
      11,
      f
    );
  }
  f = message.getItineraryList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      12,
      f,
      proto.com.infinite.travllr.ItineraryDetails.serializeBinaryToWriter
    );
  }
};


/**
 * optional string title = 1;
 * @return {string}
 */
proto.com.infinite.travllr.UserItinerary.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.com.infinite.travllr.UserItinerary.prototype.setTitle = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string createAt = 2;
 * @return {string}
 */
proto.com.infinite.travllr.UserItinerary.prototype.getCreateat = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.com.infinite.travllr.UserItinerary.prototype.setCreateat = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string updatedAt = 3;
 * @return {string}
 */
proto.com.infinite.travllr.UserItinerary.prototype.getUpdatedat = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.com.infinite.travllr.UserItinerary.prototype.setUpdatedat = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional ItineraryStatus status = 4;
 * @return {!proto.com.infinite.travllr.ItineraryStatus}
 */
proto.com.infinite.travllr.UserItinerary.prototype.getStatus = function() {
  return /** @type {!proto.com.infinite.travllr.ItineraryStatus} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {!proto.com.infinite.travllr.ItineraryStatus} value */
proto.com.infinite.travllr.UserItinerary.prototype.setStatus = function(value) {
  jspb.Message.setProto3EnumField(this, 4, value);
};


/**
 * optional string departDate = 5;
 * @return {string}
 */
proto.com.infinite.travllr.UserItinerary.prototype.getDepartdate = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/** @param {string} value */
proto.com.infinite.travllr.UserItinerary.prototype.setDepartdate = function(value) {
  jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string arrivalDate = 6;
 * @return {string}
 */
proto.com.infinite.travllr.UserItinerary.prototype.getArrivaldate = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/** @param {string} value */
proto.com.infinite.travllr.UserItinerary.prototype.setArrivaldate = function(value) {
  jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional int32 duration = 7;
 * @return {number}
 */
proto.com.infinite.travllr.UserItinerary.prototype.getDuration = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/** @param {number} value */
proto.com.infinite.travllr.UserItinerary.prototype.setDuration = function(value) {
  jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional string departFrom = 8;
 * @return {string}
 */
proto.com.infinite.travllr.UserItinerary.prototype.getDepartfrom = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/** @param {string} value */
proto.com.infinite.travllr.UserItinerary.prototype.setDepartfrom = function(value) {
  jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional int32 noOfAdults = 9;
 * @return {number}
 */
proto.com.infinite.travllr.UserItinerary.prototype.getNoofadults = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/** @param {number} value */
proto.com.infinite.travllr.UserItinerary.prototype.setNoofadults = function(value) {
  jspb.Message.setProto3IntField(this, 9, value);
};


/**
 * optional int32 noOfChild = 10;
 * @return {number}
 */
proto.com.infinite.travllr.UserItinerary.prototype.getNoofchild = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/** @param {number} value */
proto.com.infinite.travllr.UserItinerary.prototype.setNoofchild = function(value) {
  jspb.Message.setProto3IntField(this, 10, value);
};


/**
 * repeated int32 childAges = 11;
 * @return {!Array.<number>}
 */
proto.com.infinite.travllr.UserItinerary.prototype.getChildagesList = function() {
  return /** @type {!Array.<number>} */ (jspb.Message.getRepeatedField(this, 11));
};


/** @param {!Array.<number>} value */
proto.com.infinite.travllr.UserItinerary.prototype.setChildagesList = function(value) {
  jspb.Message.setField(this, 11, value || []);
};


/**
 * @param {!number} value
 * @param {number=} opt_index
 */
proto.com.infinite.travllr.UserItinerary.prototype.addChildages = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 11, value, opt_index);
};


proto.com.infinite.travllr.UserItinerary.prototype.clearChildagesList = function() {
  this.setChildagesList([]);
};


/**
 * repeated ItineraryDetails itinerary = 12;
 * @return {!Array.<!proto.com.infinite.travllr.ItineraryDetails>}
 */
proto.com.infinite.travllr.UserItinerary.prototype.getItineraryList = function() {
  return /** @type{!Array.<!proto.com.infinite.travllr.ItineraryDetails>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.com.infinite.travllr.ItineraryDetails, 12));
};


/** @param {!Array.<!proto.com.infinite.travllr.ItineraryDetails>} value */
proto.com.infinite.travllr.UserItinerary.prototype.setItineraryList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 12, value);
};


/**
 * @param {!proto.com.infinite.travllr.ItineraryDetails=} opt_value
 * @param {number=} opt_index
 * @return {!proto.com.infinite.travllr.ItineraryDetails}
 */
proto.com.infinite.travllr.UserItinerary.prototype.addItinerary = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 12, opt_value, proto.com.infinite.travllr.ItineraryDetails, opt_index);
};


proto.com.infinite.travllr.UserItinerary.prototype.clearItineraryList = function() {
  this.setItineraryList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.infinite.travllr.UserDetailInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.infinite.travllr.UserDetailInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.com.infinite.travllr.UserDetailInfo.displayName = 'proto.com.infinite.travllr.UserDetailInfo';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.infinite.travllr.UserDetailInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.com.infinite.travllr.UserDetailInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.infinite.travllr.UserDetailInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.infinite.travllr.UserDetailInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    name: jspb.Message.getFieldWithDefault(msg, 2, ""),
    email: jspb.Message.getFieldWithDefault(msg, 3, ""),
    mobile: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.infinite.travllr.UserDetailInfo}
 */
proto.com.infinite.travllr.UserDetailInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.infinite.travllr.UserDetailInfo;
  return proto.com.infinite.travllr.UserDetailInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.infinite.travllr.UserDetailInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.infinite.travllr.UserDetailInfo}
 */
proto.com.infinite.travllr.UserDetailInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setEmail(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setMobile(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.infinite.travllr.UserDetailInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.infinite.travllr.UserDetailInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.infinite.travllr.UserDetailInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.infinite.travllr.UserDetailInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getEmail();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getMobile();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.com.infinite.travllr.UserDetailInfo.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.com.infinite.travllr.UserDetailInfo.prototype.setId = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.com.infinite.travllr.UserDetailInfo.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.com.infinite.travllr.UserDetailInfo.prototype.setName = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string email = 3;
 * @return {string}
 */
proto.com.infinite.travllr.UserDetailInfo.prototype.getEmail = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.com.infinite.travllr.UserDetailInfo.prototype.setEmail = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string mobile = 4;
 * @return {string}
 */
proto.com.infinite.travllr.UserDetailInfo.prototype.getMobile = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.com.infinite.travllr.UserDetailInfo.prototype.setMobile = function(value) {
  jspb.Message.setProto3StringField(this, 4, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.infinite.travllr.UserList = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.com.infinite.travllr.UserList.repeatedFields_, null);
};
goog.inherits(proto.com.infinite.travllr.UserList, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.com.infinite.travllr.UserList.displayName = 'proto.com.infinite.travllr.UserList';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.com.infinite.travllr.UserList.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.infinite.travllr.UserList.prototype.toObject = function(opt_includeInstance) {
  return proto.com.infinite.travllr.UserList.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.infinite.travllr.UserList} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.infinite.travllr.UserList.toObject = function(includeInstance, msg) {
  var f, obj = {
    usersList: jspb.Message.toObjectList(msg.getUsersList(),
    proto.com.infinite.travllr.UserDetailInfo.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.infinite.travllr.UserList}
 */
proto.com.infinite.travllr.UserList.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.infinite.travllr.UserList;
  return proto.com.infinite.travllr.UserList.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.infinite.travllr.UserList} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.infinite.travllr.UserList}
 */
proto.com.infinite.travllr.UserList.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.com.infinite.travllr.UserDetailInfo;
      reader.readMessage(value,proto.com.infinite.travllr.UserDetailInfo.deserializeBinaryFromReader);
      msg.addUsers(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.infinite.travllr.UserList.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.infinite.travllr.UserList.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.infinite.travllr.UserList} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.infinite.travllr.UserList.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUsersList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.com.infinite.travllr.UserDetailInfo.serializeBinaryToWriter
    );
  }
};


/**
 * repeated UserDetailInfo users = 1;
 * @return {!Array.<!proto.com.infinite.travllr.UserDetailInfo>}
 */
proto.com.infinite.travllr.UserList.prototype.getUsersList = function() {
  return /** @type{!Array.<!proto.com.infinite.travllr.UserDetailInfo>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.com.infinite.travllr.UserDetailInfo, 1));
};


/** @param {!Array.<!proto.com.infinite.travllr.UserDetailInfo>} value */
proto.com.infinite.travllr.UserList.prototype.setUsersList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.com.infinite.travllr.UserDetailInfo=} opt_value
 * @param {number=} opt_index
 * @return {!proto.com.infinite.travllr.UserDetailInfo}
 */
proto.com.infinite.travllr.UserList.prototype.addUsers = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.com.infinite.travllr.UserDetailInfo, opt_index);
};


proto.com.infinite.travllr.UserList.prototype.clearUsersList = function() {
  this.setUsersList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.infinite.travllr.UserDetailRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.infinite.travllr.UserDetailRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.com.infinite.travllr.UserDetailRequest.displayName = 'proto.com.infinite.travllr.UserDetailRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.infinite.travllr.UserDetailRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.com.infinite.travllr.UserDetailRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.infinite.travllr.UserDetailRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.infinite.travllr.UserDetailRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.infinite.travllr.UserDetailRequest}
 */
proto.com.infinite.travllr.UserDetailRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.infinite.travllr.UserDetailRequest;
  return proto.com.infinite.travllr.UserDetailRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.infinite.travllr.UserDetailRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.infinite.travllr.UserDetailRequest}
 */
proto.com.infinite.travllr.UserDetailRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.infinite.travllr.UserDetailRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.infinite.travllr.UserDetailRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.infinite.travllr.UserDetailRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.infinite.travllr.UserDetailRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.com.infinite.travllr.UserDetailRequest.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.com.infinite.travllr.UserDetailRequest.prototype.setId = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.infinite.travllr.UserDetailResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.com.infinite.travllr.UserDetailResponse.repeatedFields_, null);
};
goog.inherits(proto.com.infinite.travllr.UserDetailResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.com.infinite.travllr.UserDetailResponse.displayName = 'proto.com.infinite.travllr.UserDetailResponse';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.com.infinite.travllr.UserDetailResponse.repeatedFields_ = [2,3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.infinite.travllr.UserDetailResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.com.infinite.travllr.UserDetailResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.infinite.travllr.UserDetailResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.infinite.travllr.UserDetailResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    userdetail: (f = msg.getUserdetail()) && proto.com.infinite.travllr.UserDetail.toObject(includeInstance, f),
    usercontactList: jspb.Message.toObjectList(msg.getUsercontactList(),
    proto.com.infinite.travllr.UserContact.toObject, includeInstance),
    useritineraryList: jspb.Message.toObjectList(msg.getUseritineraryList(),
    proto.com.infinite.travllr.UserItinerary.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.infinite.travllr.UserDetailResponse}
 */
proto.com.infinite.travllr.UserDetailResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.infinite.travllr.UserDetailResponse;
  return proto.com.infinite.travllr.UserDetailResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.infinite.travllr.UserDetailResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.infinite.travllr.UserDetailResponse}
 */
proto.com.infinite.travllr.UserDetailResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.com.infinite.travllr.UserDetail;
      reader.readMessage(value,proto.com.infinite.travllr.UserDetail.deserializeBinaryFromReader);
      msg.setUserdetail(value);
      break;
    case 2:
      var value = new proto.com.infinite.travllr.UserContact;
      reader.readMessage(value,proto.com.infinite.travllr.UserContact.deserializeBinaryFromReader);
      msg.addUsercontact(value);
      break;
    case 3:
      var value = new proto.com.infinite.travllr.UserItinerary;
      reader.readMessage(value,proto.com.infinite.travllr.UserItinerary.deserializeBinaryFromReader);
      msg.addUseritinerary(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.infinite.travllr.UserDetailResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.infinite.travllr.UserDetailResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.infinite.travllr.UserDetailResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.infinite.travllr.UserDetailResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUserdetail();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.com.infinite.travllr.UserDetail.serializeBinaryToWriter
    );
  }
  f = message.getUsercontactList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.com.infinite.travllr.UserContact.serializeBinaryToWriter
    );
  }
  f = message.getUseritineraryList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.com.infinite.travllr.UserItinerary.serializeBinaryToWriter
    );
  }
};


/**
 * optional UserDetail userDetail = 1;
 * @return {?proto.com.infinite.travllr.UserDetail}
 */
proto.com.infinite.travllr.UserDetailResponse.prototype.getUserdetail = function() {
  return /** @type{?proto.com.infinite.travllr.UserDetail} */ (
    jspb.Message.getWrapperField(this, proto.com.infinite.travllr.UserDetail, 1));
};


/** @param {?proto.com.infinite.travllr.UserDetail|undefined} value */
proto.com.infinite.travllr.UserDetailResponse.prototype.setUserdetail = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.com.infinite.travllr.UserDetailResponse.prototype.clearUserdetail = function() {
  this.setUserdetail(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.com.infinite.travllr.UserDetailResponse.prototype.hasUserdetail = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated UserContact userContact = 2;
 * @return {!Array.<!proto.com.infinite.travllr.UserContact>}
 */
proto.com.infinite.travllr.UserDetailResponse.prototype.getUsercontactList = function() {
  return /** @type{!Array.<!proto.com.infinite.travllr.UserContact>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.com.infinite.travllr.UserContact, 2));
};


/** @param {!Array.<!proto.com.infinite.travllr.UserContact>} value */
proto.com.infinite.travllr.UserDetailResponse.prototype.setUsercontactList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.com.infinite.travllr.UserContact=} opt_value
 * @param {number=} opt_index
 * @return {!proto.com.infinite.travllr.UserContact}
 */
proto.com.infinite.travllr.UserDetailResponse.prototype.addUsercontact = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.com.infinite.travllr.UserContact, opt_index);
};


proto.com.infinite.travllr.UserDetailResponse.prototype.clearUsercontactList = function() {
  this.setUsercontactList([]);
};


/**
 * repeated UserItinerary userItinerary = 3;
 * @return {!Array.<!proto.com.infinite.travllr.UserItinerary>}
 */
proto.com.infinite.travllr.UserDetailResponse.prototype.getUseritineraryList = function() {
  return /** @type{!Array.<!proto.com.infinite.travllr.UserItinerary>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.com.infinite.travllr.UserItinerary, 3));
};


/** @param {!Array.<!proto.com.infinite.travllr.UserItinerary>} value */
proto.com.infinite.travllr.UserDetailResponse.prototype.setUseritineraryList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.com.infinite.travllr.UserItinerary=} opt_value
 * @param {number=} opt_index
 * @return {!proto.com.infinite.travllr.UserItinerary}
 */
proto.com.infinite.travllr.UserDetailResponse.prototype.addUseritinerary = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.com.infinite.travllr.UserItinerary, opt_index);
};


proto.com.infinite.travllr.UserDetailResponse.prototype.clearUseritineraryList = function() {
  this.setUseritineraryList([]);
};


/**
 * @enum {number}
 */
proto.com.infinite.travllr.ItineraryStatus = {
  SAVED: 0,
  BOOKED: 1
};

goog.object.extend(exports, proto.com.infinite.travllr);
