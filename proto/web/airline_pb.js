/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');
goog.exportSymbol('proto.com.infinite.travllr.airline.AirlineRequest', null, global);
goog.exportSymbol('proto.com.infinite.travllr.airline.AirlineResponse', null, global);
goog.exportSymbol('proto.com.infinite.travllr.airline.CabinClass', null, global);
goog.exportSymbol('proto.com.infinite.travllr.airline.JourneyType', null, global);
goog.exportSymbol('proto.com.infinite.travllr.airline.Results', null, global);
goog.exportSymbol('proto.com.infinite.travllr.airline.Segment', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.infinite.travllr.airline.AirlineRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.com.infinite.travllr.airline.AirlineRequest.repeatedFields_, null);
};
goog.inherits(proto.com.infinite.travllr.airline.AirlineRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.com.infinite.travllr.airline.AirlineRequest.displayName = 'proto.com.infinite.travllr.airline.AirlineRequest';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.com.infinite.travllr.airline.AirlineRequest.repeatedFields_ = [6];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.infinite.travllr.airline.AirlineRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.com.infinite.travllr.airline.AirlineRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.infinite.travllr.airline.AirlineRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.infinite.travllr.airline.AirlineRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    enduserip: jspb.Message.getFieldWithDefault(msg, 1, ""),
    adultcount: jspb.Message.getFieldWithDefault(msg, 2, 0),
    childcount: jspb.Message.getFieldWithDefault(msg, 3, 0),
    infantcount: jspb.Message.getFieldWithDefault(msg, 4, 0),
    journeytype: jspb.Message.getFieldWithDefault(msg, 5, 0),
    segmentsList: jspb.Message.toObjectList(msg.getSegmentsList(),
    proto.com.infinite.travllr.airline.Segment.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.infinite.travllr.airline.AirlineRequest}
 */
proto.com.infinite.travllr.airline.AirlineRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.infinite.travllr.airline.AirlineRequest;
  return proto.com.infinite.travllr.airline.AirlineRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.infinite.travllr.airline.AirlineRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.infinite.travllr.airline.AirlineRequest}
 */
proto.com.infinite.travllr.airline.AirlineRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setEnduserip(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setAdultcount(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setChildcount(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setInfantcount(value);
      break;
    case 5:
      var value = /** @type {!proto.com.infinite.travllr.airline.JourneyType} */ (reader.readEnum());
      msg.setJourneytype(value);
      break;
    case 6:
      var value = new proto.com.infinite.travllr.airline.Segment;
      reader.readMessage(value,proto.com.infinite.travllr.airline.Segment.deserializeBinaryFromReader);
      msg.addSegments(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.infinite.travllr.airline.AirlineRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.infinite.travllr.airline.AirlineRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.infinite.travllr.airline.AirlineRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.infinite.travllr.airline.AirlineRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEnduserip();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getAdultcount();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getChildcount();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getInfantcount();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getJourneytype();
  if (f !== 0.0) {
    writer.writeEnum(
      5,
      f
    );
  }
  f = message.getSegmentsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      6,
      f,
      proto.com.infinite.travllr.airline.Segment.serializeBinaryToWriter
    );
  }
};


/**
 * optional string endUserIp = 1;
 * @return {string}
 */
proto.com.infinite.travllr.airline.AirlineRequest.prototype.getEnduserip = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.com.infinite.travllr.airline.AirlineRequest.prototype.setEnduserip = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int32 adultCount = 2;
 * @return {number}
 */
proto.com.infinite.travllr.airline.AirlineRequest.prototype.getAdultcount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.com.infinite.travllr.airline.AirlineRequest.prototype.setAdultcount = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int32 childCount = 3;
 * @return {number}
 */
proto.com.infinite.travllr.airline.AirlineRequest.prototype.getChildcount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.com.infinite.travllr.airline.AirlineRequest.prototype.setChildcount = function(value) {
  jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int32 infantCount = 4;
 * @return {number}
 */
proto.com.infinite.travllr.airline.AirlineRequest.prototype.getInfantcount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {number} value */
proto.com.infinite.travllr.airline.AirlineRequest.prototype.setInfantcount = function(value) {
  jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional JourneyType journeyType = 5;
 * @return {!proto.com.infinite.travllr.airline.JourneyType}
 */
proto.com.infinite.travllr.airline.AirlineRequest.prototype.getJourneytype = function() {
  return /** @type {!proto.com.infinite.travllr.airline.JourneyType} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/** @param {!proto.com.infinite.travllr.airline.JourneyType} value */
proto.com.infinite.travllr.airline.AirlineRequest.prototype.setJourneytype = function(value) {
  jspb.Message.setProto3EnumField(this, 5, value);
};


/**
 * repeated Segment segments = 6;
 * @return {!Array.<!proto.com.infinite.travllr.airline.Segment>}
 */
proto.com.infinite.travllr.airline.AirlineRequest.prototype.getSegmentsList = function() {
  return /** @type{!Array.<!proto.com.infinite.travllr.airline.Segment>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.com.infinite.travllr.airline.Segment, 6));
};


/** @param {!Array.<!proto.com.infinite.travllr.airline.Segment>} value */
proto.com.infinite.travllr.airline.AirlineRequest.prototype.setSegmentsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 6, value);
};


/**
 * @param {!proto.com.infinite.travllr.airline.Segment=} opt_value
 * @param {number=} opt_index
 * @return {!proto.com.infinite.travllr.airline.Segment}
 */
proto.com.infinite.travllr.airline.AirlineRequest.prototype.addSegments = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 6, opt_value, proto.com.infinite.travllr.airline.Segment, opt_index);
};


proto.com.infinite.travllr.airline.AirlineRequest.prototype.clearSegmentsList = function() {
  this.setSegmentsList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.infinite.travllr.airline.Segment = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.infinite.travllr.airline.Segment, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.com.infinite.travllr.airline.Segment.displayName = 'proto.com.infinite.travllr.airline.Segment';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.infinite.travllr.airline.Segment.prototype.toObject = function(opt_includeInstance) {
  return proto.com.infinite.travllr.airline.Segment.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.infinite.travllr.airline.Segment} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.infinite.travllr.airline.Segment.toObject = function(includeInstance, msg) {
  var f, obj = {
    origin: jspb.Message.getFieldWithDefault(msg, 1, ""),
    destination: jspb.Message.getFieldWithDefault(msg, 2, ""),
    departuredate: jspb.Message.getFieldWithDefault(msg, 3, ""),
    arrivaldate: jspb.Message.getFieldWithDefault(msg, 4, ""),
    cabinclass: jspb.Message.getFieldWithDefault(msg, 5, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.infinite.travllr.airline.Segment}
 */
proto.com.infinite.travllr.airline.Segment.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.infinite.travllr.airline.Segment;
  return proto.com.infinite.travllr.airline.Segment.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.infinite.travllr.airline.Segment} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.infinite.travllr.airline.Segment}
 */
proto.com.infinite.travllr.airline.Segment.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setOrigin(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDestination(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setDeparturedate(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setArrivaldate(value);
      break;
    case 5:
      var value = /** @type {!proto.com.infinite.travllr.airline.CabinClass} */ (reader.readEnum());
      msg.setCabinclass(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.infinite.travllr.airline.Segment.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.infinite.travllr.airline.Segment.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.infinite.travllr.airline.Segment} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.infinite.travllr.airline.Segment.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOrigin();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getDestination();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getDeparturedate();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getArrivaldate();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getCabinclass();
  if (f !== 0.0) {
    writer.writeEnum(
      5,
      f
    );
  }
};


/**
 * optional string origin = 1;
 * @return {string}
 */
proto.com.infinite.travllr.airline.Segment.prototype.getOrigin = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.com.infinite.travllr.airline.Segment.prototype.setOrigin = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string destination = 2;
 * @return {string}
 */
proto.com.infinite.travllr.airline.Segment.prototype.getDestination = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.com.infinite.travllr.airline.Segment.prototype.setDestination = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string departureDate = 3;
 * @return {string}
 */
proto.com.infinite.travllr.airline.Segment.prototype.getDeparturedate = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.com.infinite.travllr.airline.Segment.prototype.setDeparturedate = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string arrivalDate = 4;
 * @return {string}
 */
proto.com.infinite.travllr.airline.Segment.prototype.getArrivaldate = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.com.infinite.travllr.airline.Segment.prototype.setArrivaldate = function(value) {
  jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional CabinClass cabinClass = 5;
 * @return {!proto.com.infinite.travllr.airline.CabinClass}
 */
proto.com.infinite.travllr.airline.Segment.prototype.getCabinclass = function() {
  return /** @type {!proto.com.infinite.travllr.airline.CabinClass} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/** @param {!proto.com.infinite.travllr.airline.CabinClass} value */
proto.com.infinite.travllr.airline.Segment.prototype.setCabinclass = function(value) {
  jspb.Message.setProto3EnumField(this, 5, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.infinite.travllr.airline.AirlineResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.com.infinite.travllr.airline.AirlineResponse.repeatedFields_, null);
};
goog.inherits(proto.com.infinite.travllr.airline.AirlineResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.com.infinite.travllr.airline.AirlineResponse.displayName = 'proto.com.infinite.travllr.airline.AirlineResponse';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.com.infinite.travllr.airline.AirlineResponse.repeatedFields_ = [4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.infinite.travllr.airline.AirlineResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.com.infinite.travllr.airline.AirlineResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.infinite.travllr.airline.AirlineResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.infinite.travllr.airline.AirlineResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    traceid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    origin: jspb.Message.getFieldWithDefault(msg, 2, ""),
    destination: jspb.Message.getFieldWithDefault(msg, 3, ""),
    resultsList: jspb.Message.toObjectList(msg.getResultsList(),
    proto.com.infinite.travllr.airline.Results.toObject, includeInstance),
    isrefundable: jspb.Message.getFieldWithDefault(msg, 5, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.infinite.travllr.airline.AirlineResponse}
 */
proto.com.infinite.travllr.airline.AirlineResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.infinite.travllr.airline.AirlineResponse;
  return proto.com.infinite.travllr.airline.AirlineResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.infinite.travllr.airline.AirlineResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.infinite.travllr.airline.AirlineResponse}
 */
proto.com.infinite.travllr.airline.AirlineResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setTraceid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setOrigin(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setDestination(value);
      break;
    case 4:
      var value = new proto.com.infinite.travllr.airline.Results;
      reader.readMessage(value,proto.com.infinite.travllr.airline.Results.deserializeBinaryFromReader);
      msg.addResults(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsrefundable(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.infinite.travllr.airline.AirlineResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.infinite.travllr.airline.AirlineResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.infinite.travllr.airline.AirlineResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.infinite.travllr.airline.AirlineResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTraceid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getOrigin();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getDestination();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getResultsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      proto.com.infinite.travllr.airline.Results.serializeBinaryToWriter
    );
  }
  f = message.getIsrefundable();
  if (f) {
    writer.writeBool(
      5,
      f
    );
  }
};


/**
 * optional string traceId = 1;
 * @return {string}
 */
proto.com.infinite.travllr.airline.AirlineResponse.prototype.getTraceid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.com.infinite.travllr.airline.AirlineResponse.prototype.setTraceid = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string origin = 2;
 * @return {string}
 */
proto.com.infinite.travllr.airline.AirlineResponse.prototype.getOrigin = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.com.infinite.travllr.airline.AirlineResponse.prototype.setOrigin = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string destination = 3;
 * @return {string}
 */
proto.com.infinite.travllr.airline.AirlineResponse.prototype.getDestination = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.com.infinite.travllr.airline.AirlineResponse.prototype.setDestination = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * repeated Results results = 4;
 * @return {!Array.<!proto.com.infinite.travllr.airline.Results>}
 */
proto.com.infinite.travllr.airline.AirlineResponse.prototype.getResultsList = function() {
  return /** @type{!Array.<!proto.com.infinite.travllr.airline.Results>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.com.infinite.travllr.airline.Results, 4));
};


/** @param {!Array.<!proto.com.infinite.travllr.airline.Results>} value */
proto.com.infinite.travllr.airline.AirlineResponse.prototype.setResultsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.com.infinite.travllr.airline.Results=} opt_value
 * @param {number=} opt_index
 * @return {!proto.com.infinite.travllr.airline.Results}
 */
proto.com.infinite.travllr.airline.AirlineResponse.prototype.addResults = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.com.infinite.travllr.airline.Results, opt_index);
};


proto.com.infinite.travllr.airline.AirlineResponse.prototype.clearResultsList = function() {
  this.setResultsList([]);
};


/**
 * optional bool isRefundable = 5;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.com.infinite.travllr.airline.AirlineResponse.prototype.getIsrefundable = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 5, false));
};


/** @param {boolean} value */
proto.com.infinite.travllr.airline.AirlineResponse.prototype.setIsrefundable = function(value) {
  jspb.Message.setProto3BooleanField(this, 5, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.infinite.travllr.airline.Results = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.infinite.travllr.airline.Results, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.com.infinite.travllr.airline.Results.displayName = 'proto.com.infinite.travllr.airline.Results';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.infinite.travllr.airline.Results.prototype.toObject = function(opt_includeInstance) {
  return proto.com.infinite.travllr.airline.Results.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.infinite.travllr.airline.Results} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.infinite.travllr.airline.Results.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.infinite.travllr.airline.Results}
 */
proto.com.infinite.travllr.airline.Results.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.infinite.travllr.airline.Results;
  return proto.com.infinite.travllr.airline.Results.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.infinite.travllr.airline.Results} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.infinite.travllr.airline.Results}
 */
proto.com.infinite.travllr.airline.Results.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.infinite.travllr.airline.Results.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.infinite.travllr.airline.Results.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.infinite.travllr.airline.Results} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.infinite.travllr.airline.Results.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};


/**
 * @enum {number}
 */
proto.com.infinite.travllr.airline.JourneyType = {
  UNKNOWN: 0,
  ONEWAY: 1,
  RETURN: 2,
  MULTISTOP: 3,
  ADVANCED_SEARCH: 4,
  SPECIAL_RETURN: 5
};

/**
 * @enum {number}
 */
proto.com.infinite.travllr.airline.CabinClass = {
  DUMMY: 0,
  ALL: 1,
  ECONOMY: 2,
  PREMIUM_ECONOMY: 3,
  BUSINESS: 4,
  PREMIUM_BUSINESS: 5,
  FIRST: 6
};

goog.object.extend(exports, proto.com.infinite.travllr.airline);
