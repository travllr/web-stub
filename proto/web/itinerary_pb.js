/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

goog.exportSymbol('proto.com.infinite.travllr.ActivityCategory', null, global);
goog.exportSymbol('proto.com.infinite.travllr.ActivityDetail', null, global);
goog.exportSymbol('proto.com.infinite.travllr.ActivityDuration', null, global);
goog.exportSymbol('proto.com.infinite.travllr.ActivityType', null, global);
goog.exportSymbol('proto.com.infinite.travllr.CityPlan', null, global);
goog.exportSymbol('proto.com.infinite.travllr.DayPlan', null, global);
goog.exportSymbol('proto.com.infinite.travllr.ItineraryRequest', null, global);
goog.exportSymbol('proto.com.infinite.travllr.ItineraryResponse', null, global);
goog.exportSymbol('proto.com.infinite.travllr.TransferType', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.infinite.travllr.ItineraryRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.com.infinite.travllr.ItineraryRequest.repeatedFields_, null);
};
goog.inherits(proto.com.infinite.travllr.ItineraryRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.com.infinite.travllr.ItineraryRequest.displayName = 'proto.com.infinite.travllr.ItineraryRequest';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.com.infinite.travllr.ItineraryRequest.repeatedFields_ = [1,2,5];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.infinite.travllr.ItineraryRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.com.infinite.travllr.ItineraryRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.infinite.travllr.ItineraryRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.infinite.travllr.ItineraryRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    countryList: jspb.Message.getRepeatedField(msg, 1),
    cityList: jspb.Message.getRepeatedField(msg, 2),
    regionname: jspb.Message.getFieldWithDefault(msg, 3, ""),
    numberofdays: jspb.Message.getFieldWithDefault(msg, 4, 0),
    activitycategoryList: jspb.Message.getRepeatedField(msg, 5)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.infinite.travllr.ItineraryRequest}
 */
proto.com.infinite.travllr.ItineraryRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.infinite.travllr.ItineraryRequest;
  return proto.com.infinite.travllr.ItineraryRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.infinite.travllr.ItineraryRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.infinite.travllr.ItineraryRequest}
 */
proto.com.infinite.travllr.ItineraryRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addCountry(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.addCity(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setRegionname(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setNumberofdays(value);
      break;
    case 5:
      var value = /** @type {!Array.<!proto.com.infinite.travllr.ActivityCategory>} */ (reader.readPackedEnum());
      msg.setActivitycategoryList(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.infinite.travllr.ItineraryRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.infinite.travllr.ItineraryRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.infinite.travllr.ItineraryRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.infinite.travllr.ItineraryRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCountryList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
  f = message.getCityList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      2,
      f
    );
  }
  f = message.getRegionname();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getNumberofdays();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getActivitycategoryList();
  if (f.length > 0) {
    writer.writePackedEnum(
      5,
      f
    );
  }
};


/**
 * repeated string country = 1;
 * @return {!Array.<string>}
 */
proto.com.infinite.travllr.ItineraryRequest.prototype.getCountryList = function() {
  return /** @type {!Array.<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/** @param {!Array.<string>} value */
proto.com.infinite.travllr.ItineraryRequest.prototype.setCountryList = function(value) {
  jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {!string} value
 * @param {number=} opt_index
 */
proto.com.infinite.travllr.ItineraryRequest.prototype.addCountry = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


proto.com.infinite.travllr.ItineraryRequest.prototype.clearCountryList = function() {
  this.setCountryList([]);
};


/**
 * repeated string city = 2;
 * @return {!Array.<string>}
 */
proto.com.infinite.travllr.ItineraryRequest.prototype.getCityList = function() {
  return /** @type {!Array.<string>} */ (jspb.Message.getRepeatedField(this, 2));
};


/** @param {!Array.<string>} value */
proto.com.infinite.travllr.ItineraryRequest.prototype.setCityList = function(value) {
  jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {!string} value
 * @param {number=} opt_index
 */
proto.com.infinite.travllr.ItineraryRequest.prototype.addCity = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


proto.com.infinite.travllr.ItineraryRequest.prototype.clearCityList = function() {
  this.setCityList([]);
};


/**
 * optional string regionName = 3;
 * @return {string}
 */
proto.com.infinite.travllr.ItineraryRequest.prototype.getRegionname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.com.infinite.travllr.ItineraryRequest.prototype.setRegionname = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional int32 numberOfDays = 4;
 * @return {number}
 */
proto.com.infinite.travllr.ItineraryRequest.prototype.getNumberofdays = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {number} value */
proto.com.infinite.travllr.ItineraryRequest.prototype.setNumberofdays = function(value) {
  jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * repeated ActivityCategory activityCategory = 5;
 * @return {!Array.<!proto.com.infinite.travllr.ActivityCategory>}
 */
proto.com.infinite.travllr.ItineraryRequest.prototype.getActivitycategoryList = function() {
  return /** @type {!Array.<!proto.com.infinite.travllr.ActivityCategory>} */ (jspb.Message.getRepeatedField(this, 5));
};


/** @param {!Array.<!proto.com.infinite.travllr.ActivityCategory>} value */
proto.com.infinite.travllr.ItineraryRequest.prototype.setActivitycategoryList = function(value) {
  jspb.Message.setField(this, 5, value || []);
};


/**
 * @param {!proto.com.infinite.travllr.ActivityCategory} value
 * @param {number=} opt_index
 */
proto.com.infinite.travllr.ItineraryRequest.prototype.addActivitycategory = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 5, value, opt_index);
};


proto.com.infinite.travllr.ItineraryRequest.prototype.clearActivitycategoryList = function() {
  this.setActivitycategoryList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.infinite.travllr.ItineraryResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.com.infinite.travllr.ItineraryResponse.repeatedFields_, null);
};
goog.inherits(proto.com.infinite.travllr.ItineraryResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.com.infinite.travllr.ItineraryResponse.displayName = 'proto.com.infinite.travllr.ItineraryResponse';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.com.infinite.travllr.ItineraryResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.infinite.travllr.ItineraryResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.com.infinite.travllr.ItineraryResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.infinite.travllr.ItineraryResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.infinite.travllr.ItineraryResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    cityplanList: jspb.Message.toObjectList(msg.getCityplanList(),
    proto.com.infinite.travllr.CityPlan.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.infinite.travllr.ItineraryResponse}
 */
proto.com.infinite.travllr.ItineraryResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.infinite.travllr.ItineraryResponse;
  return proto.com.infinite.travllr.ItineraryResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.infinite.travllr.ItineraryResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.infinite.travllr.ItineraryResponse}
 */
proto.com.infinite.travllr.ItineraryResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.com.infinite.travllr.CityPlan;
      reader.readMessage(value,proto.com.infinite.travllr.CityPlan.deserializeBinaryFromReader);
      msg.addCityplan(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.infinite.travllr.ItineraryResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.infinite.travllr.ItineraryResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.infinite.travllr.ItineraryResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.infinite.travllr.ItineraryResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCityplanList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.com.infinite.travllr.CityPlan.serializeBinaryToWriter
    );
  }
};


/**
 * repeated CityPlan cityPlan = 1;
 * @return {!Array.<!proto.com.infinite.travllr.CityPlan>}
 */
proto.com.infinite.travllr.ItineraryResponse.prototype.getCityplanList = function() {
  return /** @type{!Array.<!proto.com.infinite.travllr.CityPlan>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.com.infinite.travllr.CityPlan, 1));
};


/** @param {!Array.<!proto.com.infinite.travllr.CityPlan>} value */
proto.com.infinite.travllr.ItineraryResponse.prototype.setCityplanList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.com.infinite.travllr.CityPlan=} opt_value
 * @param {number=} opt_index
 * @return {!proto.com.infinite.travllr.CityPlan}
 */
proto.com.infinite.travllr.ItineraryResponse.prototype.addCityplan = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.com.infinite.travllr.CityPlan, opt_index);
};


proto.com.infinite.travllr.ItineraryResponse.prototype.clearCityplanList = function() {
  this.setCityplanList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.infinite.travllr.CityPlan = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.com.infinite.travllr.CityPlan.repeatedFields_, null);
};
goog.inherits(proto.com.infinite.travllr.CityPlan, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.com.infinite.travllr.CityPlan.displayName = 'proto.com.infinite.travllr.CityPlan';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.com.infinite.travllr.CityPlan.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.infinite.travllr.CityPlan.prototype.toObject = function(opt_includeInstance) {
  return proto.com.infinite.travllr.CityPlan.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.infinite.travllr.CityPlan} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.infinite.travllr.CityPlan.toObject = function(includeInstance, msg) {
  var f, obj = {
    cityname: jspb.Message.getFieldWithDefault(msg, 1, ""),
    numberofnights: jspb.Message.getFieldWithDefault(msg, 2, 0),
    dayplanList: jspb.Message.toObjectList(msg.getDayplanList(),
    proto.com.infinite.travllr.DayPlan.toObject, includeInstance),
    transfertimeinminutes: jspb.Message.getFieldWithDefault(msg, 4, 0),
    transfertype: jspb.Message.getFieldWithDefault(msg, 5, 0),
    latitudelocation: +jspb.Message.getFieldWithDefault(msg, 6, 0.0),
    longitudelocation: +jspb.Message.getFieldWithDefault(msg, 7, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.infinite.travllr.CityPlan}
 */
proto.com.infinite.travllr.CityPlan.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.infinite.travllr.CityPlan;
  return proto.com.infinite.travllr.CityPlan.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.infinite.travllr.CityPlan} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.infinite.travllr.CityPlan}
 */
proto.com.infinite.travllr.CityPlan.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCityname(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setNumberofnights(value);
      break;
    case 3:
      var value = new proto.com.infinite.travllr.DayPlan;
      reader.readMessage(value,proto.com.infinite.travllr.DayPlan.deserializeBinaryFromReader);
      msg.addDayplan(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setTransfertimeinminutes(value);
      break;
    case 5:
      var value = /** @type {!proto.com.infinite.travllr.TransferType} */ (reader.readEnum());
      msg.setTransfertype(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setLatitudelocation(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setLongitudelocation(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.infinite.travllr.CityPlan.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.infinite.travllr.CityPlan.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.infinite.travllr.CityPlan} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.infinite.travllr.CityPlan.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCityname();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getNumberofnights();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getDayplanList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.com.infinite.travllr.DayPlan.serializeBinaryToWriter
    );
  }
  f = message.getTransfertimeinminutes();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getTransfertype();
  if (f !== 0.0) {
    writer.writeEnum(
      5,
      f
    );
  }
  f = message.getLatitudelocation();
  if (f !== 0.0) {
    writer.writeFloat(
      6,
      f
    );
  }
  f = message.getLongitudelocation();
  if (f !== 0.0) {
    writer.writeFloat(
      7,
      f
    );
  }
};


/**
 * optional string cityName = 1;
 * @return {string}
 */
proto.com.infinite.travllr.CityPlan.prototype.getCityname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.com.infinite.travllr.CityPlan.prototype.setCityname = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int32 numberOfNights = 2;
 * @return {number}
 */
proto.com.infinite.travllr.CityPlan.prototype.getNumberofnights = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.com.infinite.travllr.CityPlan.prototype.setNumberofnights = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * repeated DayPlan dayPlan = 3;
 * @return {!Array.<!proto.com.infinite.travllr.DayPlan>}
 */
proto.com.infinite.travllr.CityPlan.prototype.getDayplanList = function() {
  return /** @type{!Array.<!proto.com.infinite.travllr.DayPlan>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.com.infinite.travllr.DayPlan, 3));
};


/** @param {!Array.<!proto.com.infinite.travllr.DayPlan>} value */
proto.com.infinite.travllr.CityPlan.prototype.setDayplanList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.com.infinite.travllr.DayPlan=} opt_value
 * @param {number=} opt_index
 * @return {!proto.com.infinite.travllr.DayPlan}
 */
proto.com.infinite.travllr.CityPlan.prototype.addDayplan = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.com.infinite.travllr.DayPlan, opt_index);
};


proto.com.infinite.travllr.CityPlan.prototype.clearDayplanList = function() {
  this.setDayplanList([]);
};


/**
 * optional int32 transferTimeInMinutes = 4;
 * @return {number}
 */
proto.com.infinite.travllr.CityPlan.prototype.getTransfertimeinminutes = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {number} value */
proto.com.infinite.travllr.CityPlan.prototype.setTransfertimeinminutes = function(value) {
  jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional TransferType transferType = 5;
 * @return {!proto.com.infinite.travllr.TransferType}
 */
proto.com.infinite.travllr.CityPlan.prototype.getTransfertype = function() {
  return /** @type {!proto.com.infinite.travllr.TransferType} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/** @param {!proto.com.infinite.travllr.TransferType} value */
proto.com.infinite.travllr.CityPlan.prototype.setTransfertype = function(value) {
  jspb.Message.setProto3EnumField(this, 5, value);
};


/**
 * optional float latitudeLocation = 6;
 * @return {number}
 */
proto.com.infinite.travllr.CityPlan.prototype.getLatitudelocation = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 6, 0.0));
};


/** @param {number} value */
proto.com.infinite.travllr.CityPlan.prototype.setLatitudelocation = function(value) {
  jspb.Message.setProto3FloatField(this, 6, value);
};


/**
 * optional float longitudeLocation = 7;
 * @return {number}
 */
proto.com.infinite.travllr.CityPlan.prototype.getLongitudelocation = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 7, 0.0));
};


/** @param {number} value */
proto.com.infinite.travllr.CityPlan.prototype.setLongitudelocation = function(value) {
  jspb.Message.setProto3FloatField(this, 7, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.infinite.travllr.DayPlan = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.com.infinite.travllr.DayPlan.repeatedFields_, null);
};
goog.inherits(proto.com.infinite.travllr.DayPlan, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.com.infinite.travllr.DayPlan.displayName = 'proto.com.infinite.travllr.DayPlan';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.com.infinite.travllr.DayPlan.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.infinite.travllr.DayPlan.prototype.toObject = function(opt_includeInstance) {
  return proto.com.infinite.travllr.DayPlan.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.infinite.travllr.DayPlan} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.infinite.travllr.DayPlan.toObject = function(includeInstance, msg) {
  var f, obj = {
    activitydetailList: jspb.Message.toObjectList(msg.getActivitydetailList(),
    proto.com.infinite.travllr.ActivityDetail.toObject, includeInstance),
    transfertype: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.infinite.travllr.DayPlan}
 */
proto.com.infinite.travllr.DayPlan.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.infinite.travllr.DayPlan;
  return proto.com.infinite.travllr.DayPlan.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.infinite.travllr.DayPlan} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.infinite.travllr.DayPlan}
 */
proto.com.infinite.travllr.DayPlan.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.com.infinite.travllr.ActivityDetail;
      reader.readMessage(value,proto.com.infinite.travllr.ActivityDetail.deserializeBinaryFromReader);
      msg.addActivitydetail(value);
      break;
    case 2:
      var value = /** @type {!proto.com.infinite.travllr.TransferType} */ (reader.readEnum());
      msg.setTransfertype(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.infinite.travllr.DayPlan.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.infinite.travllr.DayPlan.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.infinite.travllr.DayPlan} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.infinite.travllr.DayPlan.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getActivitydetailList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.com.infinite.travllr.ActivityDetail.serializeBinaryToWriter
    );
  }
  f = message.getTransfertype();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
};


/**
 * repeated ActivityDetail activityDetail = 1;
 * @return {!Array.<!proto.com.infinite.travllr.ActivityDetail>}
 */
proto.com.infinite.travllr.DayPlan.prototype.getActivitydetailList = function() {
  return /** @type{!Array.<!proto.com.infinite.travllr.ActivityDetail>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.com.infinite.travllr.ActivityDetail, 1));
};


/** @param {!Array.<!proto.com.infinite.travllr.ActivityDetail>} value */
proto.com.infinite.travllr.DayPlan.prototype.setActivitydetailList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.com.infinite.travllr.ActivityDetail=} opt_value
 * @param {number=} opt_index
 * @return {!proto.com.infinite.travllr.ActivityDetail}
 */
proto.com.infinite.travllr.DayPlan.prototype.addActivitydetail = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.com.infinite.travllr.ActivityDetail, opt_index);
};


proto.com.infinite.travllr.DayPlan.prototype.clearActivitydetailList = function() {
  this.setActivitydetailList([]);
};


/**
 * optional TransferType transferType = 2;
 * @return {!proto.com.infinite.travllr.TransferType}
 */
proto.com.infinite.travllr.DayPlan.prototype.getTransfertype = function() {
  return /** @type {!proto.com.infinite.travllr.TransferType} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {!proto.com.infinite.travllr.TransferType} value */
proto.com.infinite.travllr.DayPlan.prototype.setTransfertype = function(value) {
  jspb.Message.setProto3EnumField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.infinite.travllr.ActivityDetail = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.infinite.travllr.ActivityDetail, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.com.infinite.travllr.ActivityDetail.displayName = 'proto.com.infinite.travllr.ActivityDetail';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.infinite.travllr.ActivityDetail.prototype.toObject = function(opt_includeInstance) {
  return proto.com.infinite.travllr.ActivityDetail.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.infinite.travllr.ActivityDetail} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.infinite.travllr.ActivityDetail.toObject = function(includeInstance, msg) {
  var f, obj = {
    activitytype: jspb.Message.getFieldWithDefault(msg, 1, 0),
    name: jspb.Message.getFieldWithDefault(msg, 2, ""),
    description: jspb.Message.getFieldWithDefault(msg, 3, ""),
    imgurl: jspb.Message.getFieldWithDefault(msg, 4, ""),
    activityduration: jspb.Message.getFieldWithDefault(msg, 5, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.infinite.travllr.ActivityDetail}
 */
proto.com.infinite.travllr.ActivityDetail.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.infinite.travllr.ActivityDetail;
  return proto.com.infinite.travllr.ActivityDetail.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.infinite.travllr.ActivityDetail} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.infinite.travllr.ActivityDetail}
 */
proto.com.infinite.travllr.ActivityDetail.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.com.infinite.travllr.ActivityType} */ (reader.readEnum());
      msg.setActivitytype(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setImgurl(value);
      break;
    case 5:
      var value = /** @type {!proto.com.infinite.travllr.ActivityDuration} */ (reader.readEnum());
      msg.setActivityduration(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.infinite.travllr.ActivityDetail.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.infinite.travllr.ActivityDetail.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.infinite.travllr.ActivityDetail} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.infinite.travllr.ActivityDetail.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getActivitytype();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getImgurl();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getActivityduration();
  if (f !== 0.0) {
    writer.writeEnum(
      5,
      f
    );
  }
};


/**
 * optional ActivityType activityType = 1;
 * @return {!proto.com.infinite.travllr.ActivityType}
 */
proto.com.infinite.travllr.ActivityDetail.prototype.getActivitytype = function() {
  return /** @type {!proto.com.infinite.travllr.ActivityType} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {!proto.com.infinite.travllr.ActivityType} value */
proto.com.infinite.travllr.ActivityDetail.prototype.setActivitytype = function(value) {
  jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.com.infinite.travllr.ActivityDetail.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.com.infinite.travllr.ActivityDetail.prototype.setName = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string description = 3;
 * @return {string}
 */
proto.com.infinite.travllr.ActivityDetail.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.com.infinite.travllr.ActivityDetail.prototype.setDescription = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string imgUrl = 4;
 * @return {string}
 */
proto.com.infinite.travllr.ActivityDetail.prototype.getImgurl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.com.infinite.travllr.ActivityDetail.prototype.setImgurl = function(value) {
  jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional ActivityDuration activityDuration = 5;
 * @return {!proto.com.infinite.travllr.ActivityDuration}
 */
proto.com.infinite.travllr.ActivityDetail.prototype.getActivityduration = function() {
  return /** @type {!proto.com.infinite.travllr.ActivityDuration} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/** @param {!proto.com.infinite.travllr.ActivityDuration} value */
proto.com.infinite.travllr.ActivityDetail.prototype.setActivityduration = function(value) {
  jspb.Message.setProto3EnumField(this, 5, value);
};


/**
 * @enum {number}
 */
proto.com.infinite.travllr.ActivityCategory = {
  FOOD_AND_NIGHTLIFE: 0,
  LEISURE_AND_NATURE: 1,
  WATER_SPORTS_AND_CRUISES: 2,
  ADVENTURE_AND_OUTDOOR: 3,
  ART_AND_ARCHITECTURE: 4,
  ATTRACTIONS_AND_CULTURE: 5,
  BEST_OF_ALL: 6
};

/**
 * @enum {number}
 */
proto.com.infinite.travllr.ActivityType = {
  ACTIVITY: 0,
  INTERCITY_TRANSFER: 1,
  INTERNATIONAL_ARRIVAL: 2,
  INTERNATIONAL_DEPARTURE: 3,
  LEISURE: 4
};

/**
 * @enum {number}
 */
proto.com.infinite.travllr.ActivityDuration = {
  FULL_DAY: 0,
  MORNING: 1,
  NOON: 2,
  EVENING: 3,
  MORNING_TO_NOON: 4,
  NOON_TO_EVENING: 5
};

/**
 * @enum {number}
 */
proto.com.infinite.travllr.TransferType = {
  FERRY: 0,
  FLY: 1,
  TRAIN: 2,
  CAB: 3
};

goog.object.extend(exports, proto.com.infinite.travllr);
